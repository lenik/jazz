<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSPY v2004 rel. 2 U (http://www.xmlspy.com) by XML (XML) -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" attributeFormDefault="unqualified">
	<xs:import schemaLocation="X:\java\xml\xaa-base\xaa-sections.xsd"/>
	<xs:element name="logicbook">
		<xs:annotation>
			<xs:documentation>Comment describing your root element</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="ms-sections">
					<xs:sequence>
						<xs:element name="info">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="subject"/>
									<xs:element name="author" minOccurs="0">
										<xs:complexType>
											<xs:attribute name="company" type="xs:string"/>
										</xs:complexType>
									</xs:element>
									<xs:element name="seealso" minOccurs="0"/>
									<xs:element name="version" minOccurs="0">
										<xs:complexType/>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="logic" maxOccurs="unbounded">
							<xs:complexType>
								<xs:complexContent>
									<xs:extension base="structedContentType">
										<xs:sequence>
											<xs:element name="subject"/>
											<xs:element name="inspiration"/>
										</xs:sequence>
									</xs:extension>
								</xs:complexContent>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="structType">
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="item">
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="contentType">
							<xs:attribute name="id" type="xs:ID" use="optional"/>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="struct" type="structType"/>
		</xs:choice>
		<xs:attribute name="id" type="xs:ID" use="required"/>
	</xs:complexType>
	<xs:complexType name="contentType" mixed="true">
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="refer">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:string">
							<xs:attribute name="id" type="xs:IDREF" use="required"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="tag">
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="tagType">
							<xs:attribute name="ns" type="xs:string" use="optional"/>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="var">
				<xs:annotation>
					<xs:documentation>if type=="complex", then complex-type is used. </xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:sequence>
						<xs:element name="complex-type" minOccurs="0"/>
					</xs:sequence>
					<xs:attribute name="id" type="xs:string" use="required"/>
					<xs:attribute name="type" type="xs:string" use="optional"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="para" type="paraType"/>
			<xs:element name="comment" type="contentType"/>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="structedContentType">
		<xs:complexContent>
			<xs:extension base="contentType">
				<xs:choice minOccurs="0" maxOccurs="unbounded">
					<xs:element name="struct" type="structType"/>
				</xs:choice>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="tagType" mixed="true">
		<xs:sequence>
			<xs:element name="attr" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>If both value attribute and text of the tag are specified, then they will be concated.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:string">
							<xs:attribute name="name" type="xs:QName" use="required"/>
							<xs:attribute name="value" type="xs:string" use="optional"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="name" type="xs:QName" use="required"/>
	</xs:complexType>
	<xs:complexType name="paraType">
		<xs:complexContent>
			<xs:extension base="contentType">
				<xs:choice>
					<xs:element name="link" type="paraType"/>
					<xs:element name="list">
						<xs:complexType>
							<xs:sequence>
								<xs:element name="title" type="paraType" minOccurs="0"/>
								<xs:element name="item" type="paraType" minOccurs="0" maxOccurs="unbounded"/>
							</xs:sequence>
							<xs:attribute name="type" use="optional" default="simple">
								<xs:simpleType>
									<xs:restriction base="xs:token">
										<xs:enumeration value="simple"/>
										<xs:enumeration value="ordered"/>
										<xs:enumeration value="bullet"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:attribute>
							<xs:attribute name="numberformat" type="xs:string" use="optional" default="1."/>
						</xs:complexType>
					</xs:element>
					<xs:choice>
						<xs:annotation>
							<xs:documentation>Predefined styles</xs:documentation>
						</xs:annotation>
						<xs:element name="plain"/>
						<xs:element name="pre" type="xs:string"/>
						<xs:element name="head">
							<xs:complexType>
								<xs:complexContent>
									<xs:extension base="paraType">
										<xs:attribute name="level" type="xs:integer" use="required"/>
									</xs:extension>
								</xs:complexContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="em" type="paraType"/>
						<xs:element name="code" type="paraType"/>
					</xs:choice>
				</xs:choice>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
</xs:schema>
