<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSpy v2005 U (http://www.xmlspy.com) by Snima Denik (Bytes of Danci.Z) -->
<xs:schema xmlns:nl="http://www.bodz.net/xml/current/nfs/library" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsf="http://www.bodz.net/xml/current/xsf" targetNamespace="http://www.bodz.net/xml/current/nfs/library" elementFormDefault="qualified" attributeFormDefault="unqualified">
    <xs:import namespace="http://www.bodz.net/xml/current/xsf" schemaLocation="http://www.bodz.net/xml/current/xsf/structure.xsd"/>
    <!--========== NFS :: Library  ($Id: library.xsd,v 1.2 2004-12-09 05:36:03 dansei Exp $) ==========-->
    <xs:element name="library">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="xsf:base-structure">
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:group ref="nl:document-group"/>
                        <xs:group ref="nl:component-group"/>
                    </xs:choice>
                    <xs:attribute name="uri" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>currently only used in java-package</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attributeGroup ref="nl:component-attrs"/>
                    <xs:attributeGroup ref="nl:common-attrs"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:group name="document-group">
        <xs:choice>
            <xs:element name="summary" type="nl:document"/>
            <xs:element name="usage">
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="nl:document"/>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>
            <xs:element name="example">
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="nl:document">
                            <xs:attribute name="name" type="xs:string">
                                <xs:annotation>
                                    <xs:documentation>the example's name.</xs:documentation>
                                </xs:annotation>
                            </xs:attribute>
                        </xs:extension>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>
            <xs:element name="note" type="nl:document"/>
            <xs:element name="compatible">
                <xs:annotation>
                    <xs:documentation>includes additional compatible-related notes</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="nl:document">
                            <xs:attribute name="target" type="xs:string" use="required"/>
                            <xs:attribute name="kind">
                                <xs:annotation>
                                    <xs:documentation>default is normal</xs:documentation>
                                </xs:annotation>
                                <xs:simpleType>
                                    <xs:restriction base="xs:string">
                                        <xs:enumeration value="compatible"/>
                                        <xs:enumeration value="normal"/>
                                        <xs:enumeration value="collision"/>
                                    </xs:restriction>
                                </xs:simpleType>
                            </xs:attribute>
                        </xs:extension>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>
            <xs:element name="see-also">
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="nl:document">
                            <xs:attribute name="name" type="xs:string">
                                <xs:annotation>
                                    <xs:documentation>component-name in this library</xs:documentation>
                                </xs:annotation>
                            </xs:attribute>
                            <xs:attribute name="href" type="xs:string">
                                <xs:annotation>
                                    <xs:documentation>if name defined, the href default is to that component. 
if both name and href isn't defined, then this is not a link. </xs:documentation>
                                </xs:annotation>
                            </xs:attribute>
                        </xs:extension>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>
        </xs:choice>
    </xs:group>
    <xs:complexType name="document">
        <xs:choice>
            <xs:any namespace="##other"/>
        </xs:choice>
        <xs:attributeGroup ref="nl:common-attrs"/>
        <xs:anyAttribute namespace="##other"/>
    </xs:complexType>
    <xs:group name="component-group">
        <xs:choice>
            <xs:element name="package" type="nl:package"/>
            <xs:element name="function" type="nl:function"/>
            <xs:element name="class" type="nl:class"/>
            <xs:element name="instance" type="nl:typedef"/>
        </xs:choice>
    </xs:group>
    <xs:complexType name="component">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:group ref="nl:document-group"/>
        </xs:choice>
        <xs:attributeGroup ref="nl:component-attrs"/>
        <xs:attributeGroup ref="nl:common-attrs"/>
    </xs:complexType>
    <xs:complexType name="class">
        <xs:complexContent>
            <xs:extension base="nl:component">
                <xs:choice minOccurs="0" maxOccurs="unbounded">
                    <xs:element name="interface" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>implements interface</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="property">
                        <xs:complexType>
                            <xs:complexContent>
                                <xs:extension base="nl:typedef">
                                    <xs:attributeGroup ref="nl:member-attrs"/>
                                </xs:extension>
                            </xs:complexContent>
                        </xs:complexType>
                    </xs:element>
                    <xs:element name="method">
                        <xs:complexType>
                            <xs:complexContent>
                                <xs:extension base="nl:function">
                                    <xs:attributeGroup ref="nl:member-attrs"/>
                                </xs:extension>
                            </xs:complexContent>
                        </xs:complexType>
                    </xs:element>
                </xs:choice>
                <xs:attribute name="base" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>extends base</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="typedef">
        <xs:complexContent>
            <xs:extension base="nl:component">
                <xs:attribute name="type" type="xs:string"/>
                <xs:attribute name="value" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>for type, this is default value. 
for instance, this is concrete valute. 
for function, this is the default value of optional argument. </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="function">
        <xs:complexContent>
            <xs:extension base="nl:component">
                <xs:choice>
                    <xs:element name="return" type="nl:typedef"/>
                    <xs:element name="argument">
                        <xs:complexType>
                            <xs:complexContent>
                                <xs:extension base="nl:typedef">
                                    <xs:attribute name="byref" type="xs:boolean">
                                        <xs:annotation>
                                            <xs:documentation>for some language like foxpro or basic, there is a mechanism to transfer argument byval or byref. </xs:documentation>
                                        </xs:annotation>
                                    </xs:attribute>
                                </xs:extension>
                            </xs:complexContent>
                        </xs:complexType>
                    </xs:element>
                    <xs:element name="exception" type="nl:typedef"/>
                    <xs:element name="implement">
                        <xs:complexType>
                            <xs:choice>
                                <xs:any namespace="##other"/>
                            </xs:choice>
                            <xs:attribute name="layer">
                                <xs:annotation>
                                    <xs:documentation>default main</xs:documentation>
                                </xs:annotation>
                                <xs:simpleType>
                                    <xs:restriction base="xs:string">
                                        <xs:enumeration value="main"/>
                                        <xs:enumeration value="check-in"/>
                                        <xs:enumeration value="check-out"/>
                                        <xs:enumeration value="data-access"/>
                                    </xs:restriction>
                                </xs:simpleType>
                            </xs:attribute>
                            <xs:anyAttribute namespace="##other"/>
                        </xs:complexType>
                    </xs:element>
                    <xs:element name="test">
                        <xs:annotation>
                            <xs:documentation>generally, only implement and return of function is needed in test element, and the value of return specifies the assert-result. </xs:documentation>
                        </xs:annotation>
                        <xs:complexType>
                            <xs:complexContent>
                                <xs:extension base="nl:function">
                                    <xs:attribute name="assert" type="xs:string">
                                        <xs:annotation>
                                            <xs:documentation>assert-method, default equal</xs:documentation>
                                        </xs:annotation>
                                    </xs:attribute>
                                </xs:extension>
                            </xs:complexContent>
                        </xs:complexType>
                    </xs:element>
                </xs:choice>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="package">
        <xs:complexContent>
            <xs:extension base="nl:component">
                <xs:choice minOccurs="0" maxOccurs="unbounded">
                    <xs:group ref="nl:component-group"/>
                </xs:choice>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:attributeGroup name="common-attrs">
        <xs:attribute name="info" type="xs:string" use="optional">
            <xs:annotation>
                <xs:documentation>additional information</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="version" type="xs:string" use="optional">
            <xs:annotation>
                <xs:documentation>version support</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="status" use="optional">
            <xs:annotation>
                <xs:documentation>status as deprecated, etc.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="deprecated"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="rank" type="xs:integer" use="optional">
            <xs:annotation>
                <xs:documentation>specify the importance of a component like master, secondary, additional, etc. </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="author" type="xs:string" use="optional">
            <xs:annotation>
                <xs:documentation>author of the component, inheritable</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="company" type="xs:string" use="optional">
            <xs:annotation>
                <xs:documentation>company of author, inheritable</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="email" type="xs:string" use="optional">
            <xs:annotation>
                <xs:documentation>email of author, inheritable</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:attributeGroup>
    <xs:attributeGroup name="component-attrs">
        <xs:attribute name="name" type="xs:string" use="required"/>
        <xs:attribute name="meta-type" type="xs:string" use="optional">
            <xs:annotation>
                <xs:documentation>[reserved] type other than package, function, class, instance</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="visibility" use="optional">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="visible"/>
                    <xs:enumeration value="hidden"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:attributeGroup>
    <xs:attributeGroup name="member-attrs">
        <xs:attribute name="access" use="optional" default="local">
            <xs:simpleType>
                <xs:union>
                    <xs:simpleType>
                        <xs:restriction base="xs:integer">
                            <xs:minInclusive value="-127"/>
                            <xs:maxInclusive value="127"/>
                        </xs:restriction>
                    </xs:simpleType>
                    <xs:simpleType>
                        <xs:restriction base="xs:token">
                            <xs:enumeration value="public"/>
                            <xs:enumeration value="protected"/>
                            <xs:enumeration value="private"/>
                            <xs:enumeration value="local"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:union>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="static" type="xs:boolean" use="optional" default="false"/>
        <xs:attribute name="constant" type="xs:boolean" use="optional" default="false"/>
        <xs:attribute name="transient" type="xs:boolean" use="optional" default="false"/>
        <xs:attribute name="storage" use="optional">
            <xs:simpleType>
                <xs:union memberTypes="xs:integer">
                    <xs:simpleType>
                        <xs:restriction base="xs:token">
                            <xs:enumeration value="volatile"/>
                            <xs:enumeration value="register"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:union>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="share" use="optional">
            <xs:simpleType>
                <xs:union memberTypes="xs:integer">
                    <xs:simpleType>
                        <xs:restriction base="xs:token">
                            <xs:enumeration value="global"/>
                            <xs:enumeration value="process"/>
                            <xs:enumeration value="thread"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:union>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="managed" type="xs:boolean" use="optional" default="false"/>
    </xs:attributeGroup>
</xs:schema>
