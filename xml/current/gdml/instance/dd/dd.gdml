<?xml version="1.0" encoding="UTF-8"?>
<g:language xmlns:xsf="http://www.bodz.net/xml/current/xsf" xmlns:g="http://www.bodz.net/xml/current/gdml" xmlns:t="http://www.bodz.net/xml/current/gdml/translate" xmlns:dd="http://www.bodz.net/xml/current/gdml/instance/dd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.bodz.net/xml/current/gdml
http://www.bodz.net/xml/current/gdml/gdml.xsd" root="program" uri="http://www.bodz.net/xml/current/gdml/instance/dd" name="DD" info="Descriptive Design">
	<!-- program document-->
	<g:symbol name="program">
		<g:syntax>
			<g:repeat min="0">
				<g:refer symbol="program-unit"/>
			</g:repeat>
		</g:syntax>
	</g:symbol>
	<!-- basic -->
	<g:symbol name="program-unit">
		<g:syntax name="DECLARATION">
			<g:none/>
		</g:syntax>
		<g:syntax name="STATEMENT">
			<g:refer>statement</g:refer>
		</g:syntax>
	</g:symbol>
	<g:symbol name="expression">
		<g:syntax name="STMT-EXP" info="trace the value last evaluated. ">
			<g:text>_last_val</g:text>
			<g:refer name="stLastTraced" symbol="statement"/>
		</g:syntax>
	</g:symbol>
	<g:symbol name="statements">
		<g:syntax>
			<g:repeat min="0">
				<g:refer>statement</g:refer>
			</g:repeat>
		</g:syntax>
	</g:symbol>
	<g:symbol name="statement">
		<g:syntax name="ST-BLOCK">
			<g:text>{</g:text>
			<g:refer symbol="statements"/>
			<g:text>}</g:text>
		</g:syntax>
		<g:syntax name="ST-SINGLE">
			<g:refer symbol="single-statement"/>
			<g:text>;</g:text>
		</g:syntax>
		<g:syntax name="ST-FOR">
			<g:refer symbol="for-statement"/>
		</g:syntax>
		<g:syntax name="ST-WHILE">
			<g:refer symbol="while-statement"/>
		</g:syntax>
		<g:syntax name="ST-IF">
			<g:refer symbol="if-statement"/>
		</g:syntax>
	</g:symbol>
	<g:symbol name="single-statement">
		<g:syntax name="ST-EXP">
			<g:refer symbol="expression"/>
		</g:syntax>
		<g:syntax name="ST-RETURN">
			<g:text>return</g:text>
			<g:refer name="retval" symbol="expression"/>
		</g:syntax>
	</g:symbol>
	<g:symbol name="left-value">
		<g:syntax>
			<g:text/>
		</g:syntax>
	</g:symbol>
	<!-- flow control -->
	<g:symbol name="for-statement">
		<g:syntax name="FOR-C">
			<g:text>for</g:text>
			<g:text>(</g:text>
			<g:optional>
				<g:refer name="stInit" symbol="single-statement"/>
			</g:optional>
			<g:text>;</g:text>
			<g:optional>
				<g:refer name="expCond" symbol="expression"/>
			</g:optional>
			<g:text>;</g:text>
			<g:optional>
				<g:refer name="stLoop" symbol="single-statement"/>
			</g:optional>
			<g:text>)</g:text>
			<g:refer name="body" symbol="statement"/>
		</g:syntax>
		<g:syntax name="FOR-EACH">
			<g:text>foreach</g:text>
			<g:text>(</g:text>
			<g:refer name="lvIterator" symbol="left-value"/>
			<g:text>in</g:text>
			<g:refer name="agg" symbol="expression"/>
			<g:text>)</g:text>
			<g:refer name="body" symbol="statement"/>
		</g:syntax>
	</g:symbol>
	<g:symbol name="while-statement">
		<g:syntax name="WHILE">
			<g:optional>
				<g:text>do</g:text>
			</g:optional>
			<g:text>while</g:text>
			<g:text>(</g:text>
			<g:refer name="expCond">expression</g:refer>
			<g:text>)</g:text>
			<g:refer name="body">statement</g:refer>
		</g:syntax>
		<g:syntax name="DO-WHILE">
			<g:text>do</g:text>
			<g:refer name="body" symbol="statement"/>
			<g:text>while</g:text>
			<g:text>(</g:text>
			<g:refer name="expCond" symbol="expression"/>
			<g:text>)</g:text>
		</g:syntax>
	</g:symbol>
	<g:symbol name="if-statement">
		<g:syntax name="IF-ELSE">
			<g:text>if</g:text>
			<g:text>(</g:text>
			<g:refer name="expCond" symbol="expression"/>
			<g:text>)</g:text>
			<g:refer name="stTruePart" symbol="statement"/>
			<g:optional>
				<g:text>else</g:text>
				<g:refer name="stFalsePart" symbol="statement"/>
			</g:optional>
		</g:syntax>
	</g:symbol>
	<g:symbol name="switch-statement">
		<g:syntax name="SWITCH-CASE">
			<g:text>switch</g:text>
			<g:text>(</g:text>
			<g:refer name="baseValue" symbol="expression"/>
			<g:text>)</g:text>
			<g:text>{</g:text>
			<g:repeat min="0">
				<g:anyof>
					<g:seq>
						<g:text>case</g:text>
						<g:refer name="expCase" symbol="expression"/>
						<g:text>:</g:text>
						<g:refer symbol="statements"/>
					</g:seq>
					<g:seq>
						<g:text>default</g:text>
						<g:text>:</g:text>
						<g:refer symbol="statements"/>
					</g:seq>
				</g:anyof>
			</g:repeat>
			<g:text>}</g:text>
		</g:syntax>
	</g:symbol>
	<!-- parellel control -->
	<!-- data types -->
	<!-- literal constant values -->
	<g:symbol name="string-constant">
		<g:syntax name="STRING-UNICODE">
			<g:anyof>
				<g:regex>"[^"]*"</g:regex>
				<g:regex>L"[^"]*"</g:regex>
			</g:anyof>
		</g:syntax>
	</g:symbol>
	<!-- memory management -->
	<!-- support -->
</g:language>
