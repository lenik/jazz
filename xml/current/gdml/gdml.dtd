<?xml version="1.0" encoding="UTF-8"?><!-- edited with XMLSPY v2004 rel. 3 U (http://www.xmlspy.com) by danzci (cpu007) --><!--DTD generated by XMLSPY v2004 rel. 3 U (http://www.xmlspy.com)--><!--Fragments appended to this document. predefined fragment as follows: head, tail, declare, define, custom--><!ELEMENT append (#PCDATA)><!ATTLIST append	position (head | tail | declare | define | custom) #IMPLIED	custom CDATA #IMPLIED><!ELEMENT import ANY><!--Properties of this section, for example, gdml - a parser generater define use property for: - programming language of the implementation- the algorithm usedetc. --><!ELEMENT property (#PCDATA)><!ATTLIST property	name CDATA #REQUIRED><!ELEMENT control EMPTY><!ATTLIST control	command CDATA #REQUIRED><!ELEMENT grammer ((append | property)*, (import)*, (((element | automata | group)*), resumers?, defininitions*))><!ATTLIST grammer	extends CDATA #IMPLIED	root IDREF #REQUIRED	info CDATA #IMPLIED	word-boundary CDATA #IMPLIED	case-sensitive CDATA #IMPLIED><!ELEMENT none EMPTY><!ATTLIST none	info CDATA #IMPLIED><!ELEMENT element (syntax+, create?)><!ATTLIST element	id ID #REQUIRED	extends IDREF #IMPLIED	type CDATA #IMPLIED	info CDATA #IMPLIED	assoc (left | right | none) #IMPLIED	prior CDATA #IMPLIED><!ELEMENT automata (append | state)+><!ATTLIST automata	id CDATA #REQUIRED	info CDATA #IMPLIED	start CDATA #REQUIRED><!ELEMENT group ((element | automata | group)*)><!ATTLIST group	info CDATA #IMPLIED	word-boundary CDATA #IMPLIED	case-sensitive CDATA #IMPLIED><!ELEMENT resumers (resumer+)><!ELEMENT defininitions (for-element*)><!ATTLIST defininitions	key CDATA #IMPLIED	target CDATA #IMPLIED	info CDATA #IMPLIED><!ELEMENT syntax ((((look-before?, (((refer | text | regex | binary | seq | anyof | optional | repeat)) | control)*, (syntax-determinizer, context?, (syntax-synchronizer | ((refer | text | regex | binary | seq | anyof | optional | repeat)) | control)+)?, look-ahead?)) | none | void), (apply | re-insert | comment)*)><!ATTLIST syntax	info CDATA #IMPLIED	validity CDATA #IMPLIED	id CDATA #IMPLIED	behavior (normal | illegal | ambiguous-ext) #IMPLIED><!ELEMENT create (#PCDATA)><!ATTLIST create	target CDATA #IMPLIED	info CDATA #IMPLIED><!ELEMENT state (for-input)+><!ATTLIST state	name CDATA #REQUIRED	info CDATA #IMPLIED	type (normal | inclusive | exclusive) #IMPLIED><!ELEMENT resumer (syntax+, create?)><!ATTLIST resumer	id ID #REQUIRED	extends IDREF #IMPLIED	type CDATA #IMPLIED	info CDATA #IMPLIED	assoc (left | right | none) #IMPLIED	prior CDATA #IMPLIED><!ELEMENT for-element (#PCDATA)><!ATTLIST for-element	id IDREF #REQUIRED	key (apply | reduced | shifted) #REQUIRED	target CDATA #REQUIRED	info CDATA #IMPLIED><!ELEMENT look-before ((refer | text | regex | binary | seq | anyof | optional | repeat))><!ELEMENT refer (#PCDATA)><!ATTLIST refer	info CDATA #IMPLIED><!ELEMENT text (#PCDATA)><!ATTLIST text	case-sensitive CDATA #IMPLIED	info CDATA #IMPLIED	boundary CDATA #IMPLIED	name CDATA #IMPLIED	re-prior CDATA #IMPLIED><!ELEMENT regex (#PCDATA)><!ATTLIST regex	case-sensitive CDATA #IMPLIED	info CDATA #IMPLIED	name CDATA #IMPLIED	re-prior CDATA #IMPLIED><!ELEMENT binary (#PCDATA)><!ATTLIST binary	info CDATA #IMPLIED	name CDATA #IMPLIED	re-prior CDATA #IMPLIED><!ELEMENT seq (((refer | text | regex | binary | seq | anyof | optional | repeat))+)><!ATTLIST seq	info CDATA #IMPLIED	name CDATA #IMPLIED	re-prior CDATA #IMPLIED><!ELEMENT anyof (none?, ((refer | text | regex | binary | seq | anyof | optional | repeat))+)><!ATTLIST anyof	info CDATA #IMPLIED	name CDATA #IMPLIED	re-prior CDATA #IMPLIED><!ELEMENT optional (((look-before?, (((refer | text | regex | binary | seq | anyof | optional | repeat)) | control)*, (syntax-determinizer, context?, (syntax-synchronizer | ((refer | text | regex | binary | seq | anyof | optional | repeat)) | control)+)?, look-ahead?)) | none | void)><!ATTLIST optional	info CDATA #IMPLIED	validity CDATA #IMPLIED	name CDATA #IMPLIED	re-prior CDATA #IMPLIED><!ELEMENT repeat ((((look-before?, (((refer | text | regex | binary | seq | anyof | optional | repeat)) | control)*, (syntax-determinizer, context?, (syntax-synchronizer | ((refer | text | regex | binary | seq | anyof | optional | repeat)) | control)+)?, look-ahead?)) | none | void), (delimiter?))><!ATTLIST repeat	info CDATA #IMPLIED	validity CDATA #IMPLIED	min CDATA #IMPLIED	max CDATA #IMPLIED	name CDATA #IMPLIED	re-prior CDATA #IMPLIED><!ELEMENT syntax-determinizer ANY><!ELEMENT context (preprocess*, hidden-element*)><!ATTLIST context	info CDATA #IMPLIED><!ELEMENT syntax-synchronizer ANY><!ELEMENT look-ahead ((refer | text | regex | binary | seq | anyof | optional | repeat))><!ELEMENT void EMPTY><!ATTLIST void	info CDATA #IMPLIED><!ELEMENT apply (#PCDATA)><!ATTLIST apply	target CDATA #IMPLIED	info CDATA #IMPLIED><!ELEMENT re-insert (as-text | as-binary | as-item)+><!ATTLIST re-insert	target CDATA #IMPLIED	info CDATA #IMPLIED><!ELEMENT comment (#PCDATA)><!ELEMENT for-input (((refer | text | regex | binary | seq | anyof | optional | repeat)), action)><!ATTLIST for-input	info CDATA #IMPLIED><!ELEMENT delimiter (((look-before?, (((refer | text | regex | binary | seq | anyof | optional | repeat)) | control)*, (syntax-determinizer, context?, (syntax-synchronizer | ((refer | text | regex | binary | seq | anyof | optional | repeat)) | control)+)?, look-ahead?)) | none | void)><!ATTLIST delimiter	info CDATA #IMPLIED	validity CDATA #IMPLIED	name CDATA #IMPLIED	re-prior CDATA #IMPLIED><!ELEMENT preprocess (append | state)+><!ATTLIST preprocess	id CDATA #REQUIRED	info CDATA #IMPLIED	start CDATA #REQUIRED><!ELEMENT hidden-element (syntax+, create?)><!ATTLIST hidden-element	id ID #REQUIRED	extends IDREF #IMPLIED	type CDATA #IMPLIED	info CDATA #IMPLIED	assoc (left | right | none) #IMPLIED	prior CDATA #IMPLIED><!ELEMENT as-text (#PCDATA)><!ELEMENT as-binary (#PCDATA)><!ELEMENT as-item EMPTY><!ATTLIST as-item	id CDATA #REQUIRED><!ELEMENT action (evaluate | output-text | output-element | goto | reject)*><!ATTLIST action	info CDATA #IMPLIED><!ELEMENT evaluate (#PCDATA)><!ATTLIST evaluate	target CDATA #IMPLIED	info CDATA #IMPLIED><!ELEMENT output-text (#PCDATA)><!ATTLIST output-text	target CDATA #IMPLIED	info CDATA #IMPLIED><!ELEMENT output-element (#PCDATA)><!ATTLIST output-element	target CDATA #IMPLIED	info CDATA #IMPLIED	id IDREF #REQUIRED><!ELEMENT goto EMPTY><!ATTLIST goto	target CDATA #REQUIRED><!ELEMENT reject EMPTY><!ATTLIST reject	replace CDATA #IMPLIED>