<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSPY v2004 rel. 3 U (http://www.xmlspy.com) by danzci (cpu007) -->
<xs:schema targetNamespace="http://www.bodz.net/xml/2004/pos/tdx" xmlns:tdx="http://www.bodz.net/xml/2004/pos/tdx" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xaa="http://www.bodz.net/xml/2004/xaa/section-support" elementFormDefault="qualified" attributeFormDefault="unqualified">
	<xs:import namespace="http://www.bodz.net/xml/2004/xaa/section-support" schemaLocation="http://www.bodz.net/xml/2004/xaa/section-support.xsd"/>
	<xs:element name="typedef">
		<xs:annotation>
			<xs:documentation>Comment describing your root element</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="xaa:section-extendable-base">
					<xs:sequence>
						<xs:element name="global" type="tdx:types-context">
							<xs:annotation>
								<xs:documentation>In global namespace. </xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:group name="type-entity">
		<xs:choice>
			<xs:element name="integer">
				<xs:annotation>
					<xs:documentation>signed or unsigned, the bits should be 8, 16, 32, 64 in simple-types, or in [1,64] in struct-types. </xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="tdx:type-base-properties">
							<xs:attribute name="signed" type="xs:boolean" use="required"/>
							<xs:attribute name="bits" type="xs:integer" use="required"/>
							<xs:attribute name="byte-order" use="optional" default="little-endian">
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:enumeration value="little-endian"/>
										<xs:enumeration value="big-endian"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:attribute>
							<xs:attribute name="min" type="xs:integer" use="optional"/>
							<xs:attribute name="max" type="xs:integer" use="optional"/>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="float">
				<xs:annotation>
					<xs:documentation>bits: 32, 64, 80
system: ieee-754</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="tdx:type-base-properties">
							<xs:attribute name="bits" type="xs:integer" use="required"/>
							<xs:attribute name="system" type="xs:string" use="required"/>
							<xs:attribute name="byte-order" use="optional" default="little-endian">
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:enumeration value="little-endian"/>
										<xs:enumeration value="big-endian"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:attribute>
							<xs:attribute name="min" type="xs:float" use="optional"/>
							<xs:attribute name="max" type="xs:float" use="optional"/>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="boolean">
				<xs:annotation>
					<xs:documentation>the bits should be 8, 16, 32, 64 in simple-types, or in [1,64] in struct-types.
</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="tdx:type-base-properties">
							<xs:attribute name="bits" type="xs:integer" use="required"/>
							<xs:attribute name="byte-order" use="optional" default="little-endian">
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:enumeration value="little-endian"/>
										<xs:enumeration value="big-endian"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:attribute>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="pointer">
				<xs:annotation>
					<xs:documentation>address-mode: absolute, offset. Use offset in struct-type, and the base-attribute is the name of that member-element. </xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="tdx:type-base-properties">
							<xs:choice>
								<xs:group ref="tdx:type-entity"/>
								<xs:element name="function">
									<xs:annotation>
										<xs:documentation>As "CALL-BACK"</xs:documentation>
									</xs:annotation>
									<xs:complexType>
										<xs:sequence>
											<xs:element name="argument" minOccurs="0" maxOccurs="unbounded">
												<xs:complexType>
													<xs:group ref="tdx:type-entity"/>
													<xs:attribute name="name" type="xs:string" use="optional"/>
													<xs:attribute name="direction" use="required">
														<xs:simpleType>
															<xs:restriction base="xs:token">
																<xs:enumeration value="in"/>
																<xs:enumeration value="out"/>
																<xs:enumeration value="in-out"/>
																<xs:enumeration value="place-holder"/>
															</xs:restriction>
														</xs:simpleType>
													</xs:attribute>
												</xs:complexType>
											</xs:element>
											<xs:element name="return-value" minOccurs="0">
												<xs:complexType>
													<xs:group ref="tdx:type-entity"/>
												</xs:complexType>
											</xs:element>
										</xs:sequence>
										<xs:attribute name="calling-convention" use="required">
											<xs:simpleType>
												<xs:restriction base="xs:string">
													<xs:enumeration value="cdecl"/>
													<xs:enumeration value="pascal"/>
													<xs:enumeration value="fastcall"/>
													<xs:enumeration value="thiscall"/>
												</xs:restriction>
											</xs:simpleType>
										</xs:attribute>
									</xs:complexType>
								</xs:element>
							</xs:choice>
							<xs:attribute name="bits" type="xs:integer" use="required"/>
							<xs:attribute name="byte-order" use="optional" default="little-endian">
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:enumeration value="little-endian"/>
										<xs:enumeration value="big-endian"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:attribute>
							<xs:attribute name="address-mode" use="optional" default="absolute">
								<xs:simpleType>
									<xs:restriction base="xs:string">
										<xs:enumeration value="absolute"/>
										<xs:enumeration value="offset"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:attribute>
							<xs:attribute name="offset-base" type="xs:string" use="optional"/>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="array">
				<xs:annotation>
					<xs:documentation>if ubound isn't specified, then the array is unbounded. </xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="tdx:type-base-properties">
							<xs:group ref="tdx:type-entity"/>
							<xs:attribute name="lbound" type="xs:integer" use="optional" default="0"/>
							<xs:attribute name="ubound" type="xs:integer" use="optional"/>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="struct">
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="tdx:type-base-properties">
							<xs:sequence>
								<xs:element ref="tdx:element" minOccurs="0" maxOccurs="unbounded"/>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="union">
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="tdx:type-base-properties">
							<xs:sequence>
								<xs:element ref="tdx:element" minOccurs="0" maxOccurs="unbounded"/>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="typeref">
				<xs:complexType>
					<xs:attribute name="name" type="xs:IDREF" use="required"/>
				</xs:complexType>
			</xs:element>
		</xs:choice>
	</xs:group>
	<xs:complexType name="type-base-properties">
		<xs:annotation>
			<xs:documentation>alignment: bytes</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="default" type="xs:anyType" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="alignment" type="xs:integer" use="optional" default="4"/>
	</xs:complexType>
	<xs:complexType name="type-declare">
		<xs:sequence>
			<xs:group ref="tdx:type-entity"/>
		</xs:sequence>
		<xs:attribute name="name" type="xs:ID" use="required"/>
		<xs:attribute name="info" type="xs:string" use="optional"/>
	</xs:complexType>
	<xs:complexType name="types-context">
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="type" type="tdx:type-declare"/>
			<xs:element name="group" type="tdx:types-context"/>
			<xs:element name="namespace">
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="tdx:types-context">
							<xs:attribute name="name" type="xs:string" use="required"/>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
		</xs:choice>
		<xs:attribute name="info" type="xs:string" use="optional"/>
	</xs:complexType>
	<xs:element name="element">
		<xs:complexType>
			<xs:group ref="tdx:type-entity"/>
			<xs:attribute name="name" type="xs:string" use="optional"/>
		</xs:complexType>
	</xs:element>
</xs:schema>
