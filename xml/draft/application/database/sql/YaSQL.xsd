<?xml version="1.0" encoding="UTF-8"?><!-- edited with XMLSPY v2004 rel. 3 U (http://www.xmlspy.com) by danzci (cpu007) --><xs:schema targetNamespace="http://www.boDz.net/XML/draft/Application/Database/YaSQL" xmlns:y="http://www.boDz.net/XML/draft/Application/Database/YaSQL" xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" attributeFormDefault="unqualified">	<xs:element name="yasql" type="y:groupType">		<xs:annotation>			<xs:documentation>Yet Another SQL</xs:documentation>		</xs:annotation>	</xs:element>	<xs:complexType name="groupType">		<xs:choice minOccurs="0" maxOccurs="unbounded">			<xs:choice>				<xs:annotation>					<xs:documentation>DDL</xs:documentation>				</xs:annotation>				<xs:element name="create-database" type="y:create-databaseType"/>				<xs:element name="create-table" type="y:create-tableType"/>				<xs:element name="create-view" type="y:create-viewType"/>				<xs:element name="create-index" type="y:create-indexType"/>				<xs:element name="create-cursor" type="y:create-cursorType"/>				<xs:element name="create-procedure" type="y:create-procedureType"/>				<xs:element name="create-trigger" type="y:create-triggerType"/>				<xs:element name="create-schema" type="y:create-schemaType"/>				<xs:element name="drop-database" type="y:drop-databaseType"/>				<xs:element name="drop-table" type="y:drop-tableType"/>				<xs:element name="drop-view" type="y:drop-viewType"/>				<xs:element name="drop-index" type="y:drop-indexType"/>				<xs:element name="drop-cursor" type="y:drop-cursorType"/>				<xs:element name="drop-procedure" type="y:drop-procedureType"/>				<xs:element name="drop-trigger" type="y:drop-triggerType"/>				<xs:element name="drop-schema" type="y:drop-schemaType"/>				<xs:element name="alter-database" type="y:statement-baseType"/>				<xs:element name="alter-table" type="y:statement-baseType"/>				<xs:element name="alter-view" type="y:statement-baseType"/>				<xs:element name="alter-index" type="y:statement-baseType"/>				<xs:element name="alter-cursor" type="y:statement-baseType"/>				<xs:element name="alter-procedure" type="y:statement-baseType"/>				<xs:element name="alter-trigger" type="y:statement-baseType"/>				<xs:element name="alter-schema" type="y:statement-baseType"/>			</xs:choice>			<xs:choice>				<xs:annotation>					<xs:documentation>Data</xs:documentation>				</xs:annotation>				<xs:element name="select" type="y:selectType"/>				<xs:element name="update" type="y:updateType"/>				<xs:element name="insert" type="y:insertType"/>				<xs:element name="delete" type="y:deleteType"/>				<xs:element name="readtext" type="y:readtextType"/>				<xs:element name="writetext" type="y:writetextType"/>				<xs:element name="updatetext" type="y:updatetextType"/>			</xs:choice>			<xs:choice>				<xs:annotation>					<xs:documentation>Security</xs:documentation>				</xs:annotation>				<xs:element name="grant" type="y:grantType"/>				<xs:element name="revoke" type="y:revokeType"/>			</xs:choice>			<xs:choice>				<xs:annotation>					<xs:documentation>Other</xs:documentation>				</xs:annotation>				<xs:element name="use" type="y:useType"/>				<xs:element name="declare" type="y:declareType"/>				<xs:element name="set" type="y:setType"/>				<xs:element name="call-procedure" type="y:call-procedureType"/>				<xs:element name="commit" type="y:statement-baseType"/>				<xs:element name="rollback" type="y:statement-baseType"/>				<xs:element name="raw" type="y:rawType"/>				<xs:element name="comment" type="y:commentType"/>			</xs:choice>			<xs:element name="group" type="y:groupType"/>		</xs:choice>		<xs:attribute name="name" type="xs:string" use="optional"/>		<xs:attribute name="class" type="xs:string" use="optional" default="default"/>		<xs:attribute name="dialect" type="xs:string" use="optional"/>		<xs:attributeGroup ref="y:schema-params"/>		<!-- For select a group of a same class -->	</xs:complexType>	<xs:complexType name="statement-baseType">		<xs:choice minOccurs="0" maxOccurs="unbounded">			<xs:element name="inline">				<xs:annotation>					<xs:documentation>such as 'suffix' := WITH ENCRYPTION, etc.</xs:documentation>				</xs:annotation>				<xs:complexType>					<xs:simpleContent>						<xs:extension base="xs:string">							<xs:attribute name="position" type="xs:string" use="required"/>						</xs:extension>					</xs:simpleContent>				</xs:complexType>			</xs:element>		</xs:choice>	</xs:complexType>	<xs:complexType name="procedure-statementsType">		<xs:complexContent>			<xs:extension base="y:groupType">				<xs:choice minOccurs="0" maxOccurs="unbounded">					<xs:element name="_reserved"/>				</xs:choice>			</xs:extension>		</xs:complexContent>	</xs:complexType>	<xs:complexType name="create-databaseType">		<xs:complexContent>			<xs:extension base="y:statement-baseType">				<xs:attribute name="name" type="xs:string" use="required"/>				<xs:attribute name="usage" use="optional">					<xs:simpleType>						<xs:restriction base="xs:NMTOKEN">							<xs:enumeration value="load"/>							<xs:enumeration value="attach"/>						</xs:restriction>					</xs:simpleType>				</xs:attribute>				<xs:attributeGroup ref="y:device-alloc"/>				<xs:attributeGroup ref="y:collation"/>			</xs:extension>		</xs:complexContent>	</xs:complexType>	<xs:complexType name="create-tableType">		<xs:complexContent>			<xs:extension base="y:statement-baseType">				<xs:sequence>					<xs:choice maxOccurs="unbounded">						<xs:element name="column">							<xs:complexType>								<xs:sequence>									<xs:element name="type" type="xs:string">										<xs:annotation>											<xs:documentation>SQL-type</xs:documentation>										</xs:annotation>									</xs:element>									<xs:choice minOccurs="0">										<xs:element name="default" type="xs:string">											<xs:annotation>												<xs:documentation>has default value</xs:documentation>											</xs:annotation>										</xs:element>										<xs:element name="identity" nillable="true">											<xs:annotation>												<xs:documentation>identity type</xs:documentation>											</xs:annotation>											<xs:complexType>												<xs:attribute name="seed" type="xs:integer" use="optional"/>												<xs:attribute name="increment" type="xs:integer" use="optional"/>												<xs:attributeGroup ref="y:replication-params"/>											</xs:complexType>										</xs:element>									</xs:choice>									<xs:element name="constraint" type="y:constraintType" minOccurs="0" maxOccurs="unbounded"/>								</xs:sequence>								<xs:attribute name="name" type="xs:string" use="required"/>								<xs:attributeGroup ref="y:collation"/>							</xs:complexType>						</xs:element>						<xs:element name="computed-column">							<xs:annotation>								<xs:documentation>computed column expression</xs:documentation>							</xs:annotation>							<xs:complexType>								<xs:simpleContent>									<xs:extension base="xs:string">										<xs:attribute name="name" type="xs:string" use="required"/>									</xs:extension>								</xs:simpleContent>							</xs:complexType>						</xs:element>					</xs:choice>					<xs:element name="table-constraint" type="y:table-constraintType" minOccurs="0" maxOccurs="unbounded"/>				</xs:sequence>				<xs:attribute name="name" type="xs:string" use="required"/>				<xs:attribute name="device" type="xs:string" use="optional" default="default"/>				<xs:attributeGroup ref="y:schema-params"/>			</xs:extension>		</xs:complexContent>	</xs:complexType>	<xs:complexType name="create-viewType">		<xs:complexContent>			<xs:extension base="y:statement-baseType">				<xs:sequence>					<xs:element name="query" type="y:selectType">						<xs:annotation>							<xs:documentation>select statement</xs:documentation>						</xs:annotation>					</xs:element>					<xs:element name="rename-columns" minOccurs="0">						<xs:complexType>							<xs:sequence>								<xs:element name="column" type="xs:string" maxOccurs="unbounded"/>							</xs:sequence>						</xs:complexType>					</xs:element>					<xs:element name="encryption" type="xs:boolean" minOccurs="0"/>					<xs:element name="schema-binding" type="xs:boolean" minOccurs="0"/>					<xs:element name="view-metadata" type="xs:boolean" minOccurs="0"/>				</xs:sequence>				<xs:attribute name="name" type="xs:string" use="required"/>				<xs:attributeGroup ref="y:schema-params"/>			</xs:extension>		</xs:complexContent>	</xs:complexType>	<xs:complexType name="create-indexType">		<xs:complexContent>			<xs:extension base="y:statement-baseType">				<xs:sequence>					<xs:element name="order" maxOccurs="unbounded">						<xs:complexType>							<xs:sequence>								<xs:choice>									<xs:element name="table" type="xs:string"/>									<xs:element name="view" type="xs:string"/>								</xs:choice>								<xs:element name="column" type="xs:string"/>							</xs:sequence>							<xs:attribute name="type" use="optional" default="ascending">								<xs:simpleType>									<xs:restriction base="xs:NMTOKEN">										<xs:enumeration value="ascending"/>										<xs:enumeration value="descending"/>									</xs:restriction>								</xs:simpleType>							</xs:attribute>						</xs:complexType>					</xs:element>					<xs:choice minOccurs="0" maxOccurs="unbounded">						<xs:element name="pad-index"/>						<xs:element name="fill-factor" type="xs:string"/>						<xs:element name="ignore-dup-key"/>						<xs:element name="drop-existing"/>						<xs:element name="statistics-norecompute"/>						<xs:element name="sort-in-tempdb"/>					</xs:choice>				</xs:sequence>				<xs:attribute name="name" type="xs:string" use="required"/>				<xs:attribute name="unique" type="xs:boolean" use="optional" default="true"/>				<xs:attribute name="clustered" type="xs:boolean" use="optional"/>			</xs:extension>		</xs:complexContent>	</xs:complexType>	<xs:complexType name="create-cursorType">		<xs:complexContent>			<xs:extension base="y:statement-baseType"/>		</xs:complexContent>	</xs:complexType>	<xs:complexType name="create-procedureType">		<xs:complexContent>			<xs:extension base="y:statement-baseType">				<xs:sequence>					<xs:element name="parameter" minOccurs="0" maxOccurs="unbounded">						<xs:annotation>							<xs:documentation>@parameter-name = data-type</xs:documentation>						</xs:annotation>						<xs:complexType>							<xs:simpleContent>								<xs:extension base="xs:string">									<xs:attribute name="name" type="xs:string" use="required"/>									<xs:attribute name="default" type="xs:string" use="optional"/>									<xs:attribute name="varying" type="xs:boolean" use="optional"/>									<xs:attribute name="output" type="xs:boolean" use="optional" default="true"/>								</xs:extension>							</xs:simpleContent>						</xs:complexType>					</xs:element>					<xs:element name="body" type="y:procedure-statementsType"/>				</xs:sequence>				<xs:attribute name="name" type="xs:string" use="required"/>				<xs:attribute name="number" type="xs:integer" use="optional"/>				<xs:attribute name="recompile" type="xs:boolean" use="optional" default="true"/>				<xs:attribute name="encryption" type="xs:boolean" use="optional" default="false"/>				<xs:attributeGroup ref="y:replication-params"/>			</xs:extension>		</xs:complexContent>	</xs:complexType>	<xs:complexType name="create-triggerType">		<xs:complexContent>			<xs:extension base="y:statement-baseType">				<xs:sequence>					<xs:choice>						<xs:element name="table" type="xs:string"/>						<xs:element name="view" type="xs:string"/>					</xs:choice>					<xs:element name="event" maxOccurs="unbounded">						<xs:complexType>							<xs:sequence>								<xs:element name="time" minOccurs="0">									<xs:simpleType>										<xs:restriction base="xs:NMTOKEN">											<xs:enumeration value="for"/>											<xs:enumeration value="after"/>											<xs:enumeration value="instead-of"/>										</xs:restriction>									</xs:simpleType>								</xs:element>								<xs:element name="process">									<xs:simpleType>										<xs:restriction base="xs:NMTOKEN">											<xs:enumeration value="insert"/>											<xs:enumeration value="delete"/>											<xs:enumeration value="update"/>										</xs:restriction>									</xs:simpleType>								</xs:element>							</xs:sequence>							<xs:attributeGroup ref="y:replication-params"/>						</xs:complexType>					</xs:element>					<xs:element name="append" type="xs:boolean" minOccurs="0"/>					<xs:element name="condition" type="xs:string" minOccurs="0"/>					<xs:element name="body" type="y:groupType"/>				</xs:sequence>				<xs:attribute name="name" type="xs:string" use="required"/>				<xs:attribute name="encryption" type="xs:boolean" use="optional" default="false"/>			</xs:extension>		</xs:complexContent>	</xs:complexType>	<xs:complexType name="create-schemaType">		<xs:complexContent>			<xs:extension base="y:statement-baseType"/>		</xs:complexContent>	</xs:complexType>	<xs:complexType name="drop-databaseType">		<xs:complexContent>			<xs:extension base="y:statement-baseType">				<xs:sequence>					<xs:element name="name" type="xs:string" maxOccurs="unbounded"/>				</xs:sequence>			</xs:extension>		</xs:complexContent>	</xs:complexType>	<xs:complexType name="drop-tableType">		<xs:complexContent>			<xs:extension base="y:statement-baseType">				<xs:sequence>					<xs:element name="name" type="xs:string" maxOccurs="unbounded"/>				</xs:sequence>			</xs:extension>		</xs:complexContent>	</xs:complexType>	<xs:complexType name="drop-viewType">		<xs:complexContent>			<xs:extension base="y:statement-baseType">				<xs:sequence>					<xs:element name="name" type="xs:string" maxOccurs="unbounded"/>				</xs:sequence>			</xs:extension>		</xs:complexContent>	</xs:complexType>	<xs:complexType name="drop-schemaType">		<xs:complexContent>			<xs:extension base="y:statement-baseType">				<xs:sequence>					<xs:element name="name" type="xs:string" maxOccurs="unbounded"/>				</xs:sequence>			</xs:extension>		</xs:complexContent>	</xs:complexType>	<xs:complexType name="drop-triggerType">		<xs:complexContent>			<xs:extension base="y:statement-baseType">				<xs:sequence>					<xs:element name="name" type="xs:string" maxOccurs="unbounded"/>				</xs:sequence>			</xs:extension>		</xs:complexContent>	</xs:complexType>	<xs:complexType name="drop-procedureType">		<xs:complexContent>			<xs:extension base="y:statement-baseType">				<xs:sequence>					<xs:element name="name" type="xs:string" maxOccurs="unbounded"/>				</xs:sequence>			</xs:extension>		</xs:complexContent>	</xs:complexType>	<xs:complexType name="drop-cursorType">		<xs:complexContent>			<xs:extension base="y:statement-baseType">				<xs:sequence>					<xs:element name="name" type="xs:string" maxOccurs="unbounded"/>				</xs:sequence>			</xs:extension>		</xs:complexContent>	</xs:complexType>	<xs:complexType name="drop-indexType">		<xs:complexContent>			<xs:extension base="y:statement-baseType">				<xs:sequence>					<xs:element name="name" type="xs:string" maxOccurs="unbounded"/>				</xs:sequence>			</xs:extension>		</xs:complexContent>	</xs:complexType>	<xs:complexType name="selectType">		<xs:complexContent>			<xs:extension base="y:statement-baseType">				<xs:sequence>					<xs:element name="into" type="xs:string" minOccurs="0">						<xs:annotation>							<xs:documentation>into new-table-name</xs:documentation>						</xs:annotation>					</xs:element>					<xs:element name="cut" minOccurs="0">						<xs:annotation>							<xs:documentation>limit records</xs:documentation>						</xs:annotation>						<xs:complexType>							<xs:choice>								<xs:element name="top" type="xs:string"/>								<xs:element name="bottom" type="xs:string"/>							</xs:choice>						</xs:complexType>					</xs:element>					<xs:element name="columns" minOccurs="0">						<xs:annotation>							<xs:documentation>default is *</xs:documentation>						</xs:annotation>						<xs:complexType>							<xs:choice minOccurs="0" maxOccurs="unbounded">								<xs:element name="column">									<xs:annotation>										<xs:documentation>table-name.column-nameview-name.column-namealias-name.column-name</xs:documentation>									</xs:annotation>									<xs:complexType mixed="true">										<xs:attribute name="alias" type="xs:string" use="optional"/>									</xs:complexType>								</xs:element>								<xs:element name="all-columns">									<xs:annotation>										<xs:documentation>table-name (.*)view-name (.*)alias-name (.*)</xs:documentation>									</xs:annotation>									<xs:complexType>										<xs:simpleContent>											<xs:extension base="xs:string">												<xs:attribute name="alias" type="xs:string" use="optional"/>											</xs:extension>										</xs:simpleContent>									</xs:complexType>								</xs:element>								<xs:element name="expression">									<xs:complexType>										<xs:simpleContent>											<xs:extension base="xs:string">												<xs:attribute name="alias" type="xs:string" use="optional"/>											</xs:extension>										</xs:simpleContent>									</xs:complexType>								</xs:element>								<xs:element name="identity-col">									<xs:complexType>										<xs:attribute name="alias" type="xs:string" use="optional"/>									</xs:complexType>								</xs:element>								<xs:element name="rowguid-col">									<xs:complexType>										<xs:attribute name="alias" type="xs:string" use="optional"/>									</xs:complexType>								</xs:element>							</xs:choice>						</xs:complexType>					</xs:element>					<xs:element name="from" minOccurs="0">						<xs:annotation>							<xs:documentation>from ...</xs:documentation>						</xs:annotation>						<xs:complexType>							<xs:choice maxOccurs="unbounded">								<xs:element name="simple" type="y:table-sourceType"/>								<xs:element name="join">									<xs:complexType>										<xs:complexContent>											<xs:extension base="y:table-joinType">												<xs:attribute name="alias" type="xs:string" use="optional"/>											</xs:extension>										</xs:complexContent>									</xs:complexType>								</xs:element>								<xs:element name="openxml"/>							</xs:choice>						</xs:complexType>					</xs:element>					<xs:element name="condition" type="xs:string" minOccurs="0">						<xs:annotation>							<xs:documentation>where ...</xs:documentation>						</xs:annotation>					</xs:element>					<xs:element name="order" minOccurs="0">						<xs:complexType>							<xs:choice>								<xs:element name="column" type="xs:string"/>								<xs:element name="expression" type="xs:string"/>							</xs:choice>							<xs:attribute name="type" use="optional" default="ascending">								<xs:simpleType>									<xs:restriction base="xs:NMTOKEN">										<xs:enumeration value="ascending"/>										<xs:enumeration value="descending"/>									</xs:restriction>								</xs:simpleType>							</xs:attribute>						</xs:complexType>					</xs:element>					<xs:element name="group-by" minOccurs="0"/>					<xs:element name="having" minOccurs="0"/>					<xs:element name="compute" minOccurs="0"/>					<xs:element name="for" minOccurs="0">						<xs:complexType>							<xs:sequence>								<xs:element name="usage">									<xs:simpleType>										<xs:restriction base="xs:NMTOKEN">											<xs:enumeration value="browse"/>											<xs:enumeration value="xml"/>										</xs:restriction>									</xs:simpleType>								</xs:element>								<xs:element name="type">									<xs:simpleType>										<xs:restriction base="xs:NMTOKEN">											<xs:enumeration value="raw"/>											<xs:enumeration value="auto"/>											<xs:enumeration value="explicit"/>										</xs:restriction>									</xs:simpleType>								</xs:element>								<xs:element name="xmldata" minOccurs="0"/>								<xs:element name="elements" minOccurs="0"/>								<xs:element name="binary" minOccurs="0">									<xs:complexType>										<xs:attribute name="encoding" type="xs:string" use="optional" default="base64"/>									</xs:complexType>								</xs:element>							</xs:sequence>						</xs:complexType>					</xs:element>				</xs:sequence>				<xs:attribute name="distinct" type="xs:boolean" use="optional"/>			</xs:extension>		</xs:complexContent>	</xs:complexType>	<xs:complexType name="updateType">		<xs:complexContent>			<xs:extension base="y:statement-baseType"/>		</xs:complexContent>	</xs:complexType>	<xs:complexType name="insertType">		<xs:complexContent>			<xs:extension base="y:statement-baseType"/>		</xs:complexContent>	</xs:complexType>	<xs:complexType name="deleteType">		<xs:complexContent>			<xs:extension base="y:statement-baseType"/>		</xs:complexContent>	</xs:complexType>	<xs:complexType name="readtextType">		<xs:complexContent>			<xs:extension base="y:statement-baseType"/>		</xs:complexContent>	</xs:complexType>	<xs:complexType name="writetextType">		<xs:complexContent>			<xs:extension base="y:statement-baseType"/>		</xs:complexContent>	</xs:complexType>	<xs:complexType name="updatetextType">		<xs:complexContent>			<xs:extension base="y:statement-baseType"/>		</xs:complexContent>	</xs:complexType>	<xs:complexType name="grantType">		<xs:complexContent>			<xs:extension base="y:statement-baseType"/>		</xs:complexContent>	</xs:complexType>	<xs:complexType name="revokeType">		<xs:complexContent>			<xs:extension base="y:statement-baseType"/>		</xs:complexContent>	</xs:complexType>	<xs:complexType name="useType">		<xs:complexContent>			<xs:extension base="y:statement-baseType"/>		</xs:complexContent>	</xs:complexType>	<xs:complexType name="declareType">		<xs:complexContent>			<xs:extension base="y:statement-baseType"/>		</xs:complexContent>	</xs:complexType>	<xs:complexType name="setType">		<xs:complexContent>			<xs:extension base="y:statement-baseType"/>		</xs:complexContent>	</xs:complexType>	<xs:complexType name="call-procedureType">		<xs:complexContent>			<xs:extension base="y:statement-baseType"/>		</xs:complexContent>	</xs:complexType>	<xs:complexType name="commentType">		<xs:complexContent>			<xs:extension base="y:statement-baseType"/>		</xs:complexContent>	</xs:complexType>	<xs:complexType name="rawType">		<xs:complexContent>			<xs:extension base="y:statement-baseType"/>		</xs:complexContent>	</xs:complexType>	<xs:complexType name="constraintType">		<xs:choice>			<xs:element name="nullable" type="xs:string" default="true"/>			<xs:element name="key">				<xs:complexType>					<xs:sequence>						<xs:element name="fill-factor" type="xs:string" minOccurs="0"/>					</xs:sequence>					<xs:attribute name="type" use="required">						<xs:simpleType>							<xs:restriction base="xs:NMTOKEN">								<xs:enumeration value="primary-key"/>								<xs:enumeration value="unique-key"/>							</xs:restriction>						</xs:simpleType>					</xs:attribute>					<xs:attribute name="clustered" type="xs:boolean" use="optional" default="false"/>					<xs:attribute name="device" type="xs:string" use="optional" default="default"/>				</xs:complexType>			</xs:element>			<xs:element name="foreign-key">				<xs:complexType>					<xs:sequence>						<xs:element name="references">							<xs:complexType>								<xs:sequence>									<xs:element name="table" type="xs:string"/>									<xs:element name="column" type="xs:string" minOccurs="0"/>								</xs:sequence>							</xs:complexType>						</xs:element>						<xs:element name="on-delete">							<xs:complexType>								<xs:attribute name="cascade" type="xs:boolean" use="optional"/>							</xs:complexType>						</xs:element>						<xs:element name="on-update">							<xs:complexType>								<xs:attribute name="cascade" type="xs:boolean" use="optional"/>							</xs:complexType>						</xs:element>					</xs:sequence>					<xs:attributeGroup ref="y:replication-params"/>				</xs:complexType>			</xs:element>			<xs:element name="check" type="xs:string">				<xs:annotation>					<xs:documentation>logical expression</xs:documentation>				</xs:annotation>			</xs:element>		</xs:choice>		<xs:attribute name="name" type="xs:string" use="optional"/>	</xs:complexType>	<xs:complexType name="table-constraintType">		<xs:choice minOccurs="0">			<xs:element name="key">				<xs:complexType>					<xs:sequence>						<xs:element name="column" type="xs:string"/>						<xs:element name="fill-factor" type="xs:string" minOccurs="0"/>					</xs:sequence>					<xs:attribute name="type" use="required">						<xs:simpleType>							<xs:restriction base="xs:NMTOKEN">								<xs:enumeration value="primary-key"/>								<xs:enumeration value="unique-key"/>							</xs:restriction>						</xs:simpleType>					</xs:attribute>					<xs:attribute name="clustered" type="xs:boolean" use="optional" default="false"/>					<xs:attribute name="device" type="xs:string" use="optional" default="default"/>				</xs:complexType>			</xs:element>			<xs:element name="foreign-key">				<xs:complexType>					<xs:sequence>						<xs:element name="column" type="xs:string"/>						<xs:element name="references">							<xs:complexType>								<xs:sequence>									<xs:element name="table" type="xs:string"/>									<xs:element name="column" type="xs:string" minOccurs="0"/>								</xs:sequence>							</xs:complexType>						</xs:element>						<xs:element name="on-delete">							<xs:complexType>								<xs:attribute name="cascade" type="xs:boolean" use="optional"/>							</xs:complexType>						</xs:element>						<xs:element name="on-update">							<xs:complexType>								<xs:attribute name="cascade" type="xs:boolean" use="optional"/>							</xs:complexType>						</xs:element>					</xs:sequence>					<xs:attributeGroup ref="y:replication-params"/>				</xs:complexType>			</xs:element>			<xs:element name="check" type="xs:string">				<xs:annotation>					<xs:documentation>logical expression</xs:documentation>				</xs:annotation>			</xs:element>		</xs:choice>		<xs:attribute name="name" type="xs:string" use="optional"/>	</xs:complexType>	<xs:complexType name="table-sourceType">		<xs:choice>			<xs:element name="table">				<xs:complexType>					<xs:sequence>						<xs:element name="hint" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>					</xs:sequence>					<xs:attribute name="name" type="xs:string" use="required"/>				</xs:complexType>			</xs:element>			<xs:element name="view">				<xs:complexType>					<xs:attribute name="name" type="xs:string" use="required"/>				</xs:complexType>			</xs:element>			<xs:element name="rowset">				<xs:annotation>					<xs:documentation>rowset-function</xs:documentation>				</xs:annotation>				<xs:complexType>					<xs:simpleContent>						<xs:extension base="xs:string"/>					</xs:simpleContent>				</xs:complexType>			</xs:element>			<xs:element name="derived-table">				<xs:complexType>					<xs:sequence>						<xs:element name="column-alias" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>					</xs:sequence>					<xs:attribute name="name" type="xs:string" use="required"/>				</xs:complexType>			</xs:element>		</xs:choice>		<xs:attribute name="alias" type="xs:string" use="optional"/>	</xs:complexType>	<xs:complexType name="table-joinType">		<xs:sequence>			<xs:element name="lhs">				<xs:complexType>					<xs:complexContent>						<xs:extension base="y:table-sourceType">							<xs:choice>								<xs:element name="join" type="y:table-joinType"/>							</xs:choice>						</xs:extension>					</xs:complexContent>				</xs:complexType>			</xs:element>			<xs:element name="rhs">				<xs:complexType>					<xs:complexContent>						<xs:extension base="y:table-sourceType">							<xs:choice>								<xs:element name="join" type="y:table-joinType"/>							</xs:choice>						</xs:extension>					</xs:complexContent>				</xs:complexType>			</xs:element>			<xs:element name="on-condition" type="xs:string" minOccurs="0"/>		</xs:sequence>		<xs:attribute name="type" use="required">			<xs:simpleType>				<xs:restriction base="xs:NMTOKEN">					<xs:enumeration value="inner"/>					<xs:enumeration value="left"/>					<xs:enumeration value="right"/>					<xs:enumeration value="full"/>					<xs:enumeration value="outer"/>				</xs:restriction>			</xs:simpleType>		</xs:attribute>	</xs:complexType>	<xs:attributeGroup name="device-alloc">		<xs:attribute name="data-on" type="xs:string" use="optional" default="default"/>		<xs:attribute name="log-on" type="xs:string" use="optional" default="default"/>	</xs:attributeGroup>	<xs:attributeGroup name="collation">		<xs:attribute name="collate" type="xs:string" use="optional"/>	</xs:attributeGroup>	<xs:attributeGroup name="schema-params">		<xs:attribute name="database" type="xs:string" use="optional"/>		<xs:attribute name="owner" type="xs:string" use="optional" default="dbo"/>	</xs:attributeGroup>	<xs:attributeGroup name="replication-params">		<xs:attribute name="enabled" type="xs:boolean" use="optional" default="true"/>		<!-- set enabled := false for 'not-for-replication' -->	</xs:attributeGroup></xs:schema>