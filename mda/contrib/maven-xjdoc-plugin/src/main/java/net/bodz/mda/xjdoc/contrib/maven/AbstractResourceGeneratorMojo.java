package net.bodz.mda.xjdoc.contrib.maven;

import java.io.File;

public abstract class AbstractResourceGeneratorMojo
        extends AbstractProjectProcessorMojo {

    /**
     * The directory where the JavaCC grammar files (<code>*.jj</code>) are located.
     * 
     * @parameter expression="${sourceDirectory}" default-value="${basedir}/src/main/java"
     */
    private File sourceDirectory;

    /**
     * The directory where the parser files generated by JavaCC will be stored. The directory will
     * be registered as a compile source root of the project such that the generated files will
     * participate in later build phases like compiling and packaging.
     * 
     * @parameter expression="${outputDirectory}"
     *            default-value="${project.build.directory}/generated-resources"
     */
    private File outputDirectory;

    /**
     * A set of Ant-like inclusion patterns used to select files from the source directory for
     * processing. By default, the patterns <code>**&#47;*.jj</code> and <code>**&#47;*.JJ</code>
     * are used to select grammar files.
     * 
     * @parameter
     */
    private String[] includes;

    /**
     * A set of Ant-like exclusion patterns used to prevent certain files from being processed. By
     * default, this set is empty such that no files are excluded.
     * 
     * @parameter
     */
    private String[] excludes;

    protected File getSourceDirectory() {
        return sourceDirectory;
    }

    protected void setSourceDirectory(File sourceDirectory) {
        this.sourceDirectory = sourceDirectory;
    }

    protected File getOutputDirectory() {
        return outputDirectory;
    }

    protected void setOutputDirectory(File outputDirectory) {
        this.outputDirectory = outputDirectory;
    }

    protected String[] getIncludes() {
        return includes;
    }

    protected void setIncludes(String[] includes) {
        this.includes = includes;
    }

    protected String[] getExcludes() {
        return excludes;
    }

    protected void setExcludes(String[] excludes) {
        this.excludes = excludes;
    }

}
