<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.bodz.lily.schema.vapp.dao.VApiMapper">

    <resultMap id="objlist_map" type="net.bodz.lily.schema.vapp.VApi">
        <id property="id" column="id" />
        <result property="creationDate" column="creation" />
        <result property="lastModifiedDate" column="lastmod" />
        <result property="version" column="version" />
        <result property="properties.jsonStr" column="props" />
        <result property="callback" column="callback" />
        <result property="appId" column="app" />
        <result property="apiId" column="api" />
        <association property="api" columnPrefix="api_"
            javaType="net.bodz.lily.schema.vapp.ApiType" 
            resultMap="net.bodz.lily.schema.vapp.dao.ApiTypeMapper.objlist_map" />
        <association property="app" columnPrefix="app_"
            javaType="net.bodz.lily.schema.vapp.VApp" 
            resultMap="net.bodz.lily.schema.vapp.dao.VAppMapper.objlist_map" />
    </resultMap>

    <sql id="objlist_sql"><![CDATA[
        select
            a.id, 
            a.creation, 
            a.lastmod, 
            a."version", 
            a.props, 
            a.app, 
            a.api, 
            a.callback, 
            api.id api_id, 
            api.label api_label, 
            api.description api_description, 
            api.priority api_priority, 
            api.flags api_flags, 
            api."state" api_state, 
            api.creation api_creation, 
            api.lastmod api_lastmod, 
            api."version" api_version, 
            api.code api_code, 
            api.props api_props, 
            api.uom api_uom, 
            app.id app_id, 
            app.uid app_uid, 
            app.gid app_gid, 
            app.mode app_mode, 
            app.acl app_acl, 
            app.label app_label, 
            app.description app_description, 
            app.priority app_priority, 
            app.flags app_flags, 
            app."state" app_state, 
            app.creation app_creation, 
            app.lastmod app_lastmod, 
            app."version" app_version, 
            app.code app_code, 
            app.props app_props, 
            app.req app_req, 
            app.cat app_cat, 
            app.secret app_secret
        from vapi a
            left join apitype api on a.api = api.id
            left join vapp app on a.app = app.id
        ]]>
    </sql>

    <sql id="objedit_sql"><![CDATA[
        select
            a.id, 
            a.creation, 
            a.lastmod, 
            a."version", 
            a.props, 
            a.app, 
            a.api, 
            a.callback, 
            api.id api_id, 
            api.label api_label, 
            api.description api_description, 
            api.priority api_priority, 
            api.flags api_flags, 
            api."state" api_state, 
            api.creation api_creation, 
            api.lastmod api_lastmod, 
            api."version" api_version, 
            api.code api_code, 
            api.props api_props, 
            api.uom api_uom, 
            app.id app_id, 
            app.uid app_uid, 
            app.gid app_gid, 
            app.mode app_mode, 
            app.acl app_acl, 
            app.label app_label, 
            app.description app_description, 
            app.priority app_priority, 
            app.flags app_flags, 
            app."state" app_state, 
            app.creation app_creation, 
            app.lastmod app_lastmod, 
            app."version" app_version, 
            app.code app_code, 
            app.props app_props, 
            app.req app_req, 
            app.cat app_cat, 
            app.secret app_secret
        from vapi a
            left join apitype api on a.api = api.id
            left join vapp app on a.app = app.id
        ]]>
    </sql>

    <sql id="filtconds">
        <if test="m.id != null">and a.id = #{m.id}</if>
        <if test="m.idRange!= null">
            <if test="m.idRange.hasStartIncl">and a.id >= #{m.idRange.start}</if>
            <if test="m.idRange.hasStartExcl">and a.id > #{m.idRange.start}</if>
            <if test="m.idRange.hasEndIncl">and a.id &lt;= #{m.idRange.end}</if>
            <if test="m.idRange.hasEndExcl">and a.id &lt; #{m.idRange.end}</if>
        </if>
        <if test="m.creationDate != null">and a.creation = #{m.creationDate}</if>
        <if test="m.lastModifiedDate != null">and a.lastmod = #{m.lastModifiedDate}</if>
        <if test="m.version != null">and a."version" = #{m.version}</if>
        <if test="m.versionRange!= null">
            <if test="m.versionRange.hasStartIncl">and a."version" >= #{m.versionRange.start}</if>
            <if test="m.versionRange.hasStartExcl">and a."version" > #{m.versionRange.start}</if>
            <if test="m.versionRange.hasEndIncl">and a."version" &lt;= #{m.versionRange.end}</if>
            <if test="m.versionRange.hasEndExcl">and a."version" &lt; #{m.versionRange.end}</if>
        </if>
        <if test="m.properties != null">and a.props = #{m.properties}</if>
        <if test="m.appId != null">and a.app = #{m.appId}</if>
        <if test="m.appIdRange!= null">
            <if test="m.appIdRange.hasStartIncl">and a.app >= #{m.appIdRange.start}</if>
            <if test="m.appIdRange.hasStartExcl">and a.app > #{m.appIdRange.start}</if>
            <if test="m.appIdRange.hasEndIncl">and a.app &lt;= #{m.appIdRange.end}</if>
            <if test="m.appIdRange.hasEndExcl">and a.app &lt; #{m.appIdRange.end}</if>
        </if>
        <if test="m.apiId != null">and a.api = #{m.apiId}</if>
        <if test="m.apiIdRange!= null">
            <if test="m.apiIdRange.hasStartIncl">and a.api >= #{m.apiIdRange.start}</if>
            <if test="m.apiIdRange.hasStartExcl">and a.api > #{m.apiIdRange.start}</if>
            <if test="m.apiIdRange.hasEndIncl">and a.api &lt;= #{m.apiIdRange.end}</if>
            <if test="m.apiIdRange.hasEndExcl">and a.api &lt; #{m.apiIdRange.end}</if>
        </if>
        <if test="m.callback != null">and a.callback = #{m.callback}</if>
        <if test="m.callbackPattern != null">and a.callback like '${m.callbackPattern}'</if>
    </sql>

    <select id="all" resultMap="objlist_map">
        <include refid="objlist_sql" />
        <include refid="co.opts" />
    </select>

    <select id="filter" resultMap="objlist_map">
        <include refid="objlist_sql" />
        <where>
            <include refid="filtconds" />
        </where>
        <include refid="co.opts" />
    </select>

    <select id="select" resultMap="objlist_map">
        <include refid="objedit_sql" />
        <where>
            <if test="_parameter != null">a.id = #{id}</if>
        </where>
    </select>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id"><![CDATA[
        insert into vapi(
            creation,
            lastmod,
            "version",
            props,
            app,
            api,
            callback
        ) values(
            #{creationDate},
            #{lastModifiedDate},
            #{version},
            #{properties.jsonStr}::jsonb,
            #{appId},
            #{apiId},
            #{callback}
        );
    ]]></insert>

    <update id="update">
        update vapi
        <set>
            creation = #{creationDate},
            lastmod = #{lastModifiedDate},
            "version" = #{version},
            props = #{properties.jsonStr}::jsonb,
            app = #{appId},
            api = #{apiId},
            callback = #{callback},
        </set>
        <where>
            id = #{id}
        </where>
    </update>

    <delete id="delete">
        delete from vapi
        <where>
            id = #{id}
        </where>
    </delete>

    <select id="count" resultType="long">
        select count(*) "rows" from vapi
        <where>
            <if test="_parameter != null">
                <include refid="filtconds" />
            </if>
        </where>
    </select>

</mapper>
