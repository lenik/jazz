<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.bodz.lily.schema.account.dao.UserSecretMapper">

    <resultMap id="objlist_map" type="net.bodz.lily.schema.account.UserSecret">
        <id property="id" column="id" />
        <result property="creationDate" column="creation" />
        <result property="lastModified" column="lastmod" />
        <result property="version" column="version" />
        <result property="properties" column="props" />
        <result property="password" column="passwd" />
        <result property="question" column="question" />
        <result property="answer" column="answer" />
        <result property="userId" column="user" />
        <association property="user" columnPrefix="user_" notNullColumn="id" 
            javaType="net.bodz.lily.schema.account.User" 
            resultMap="net.bodz.lily.schema.account.dao.UserMapper.objlist_map" />
    </resultMap>

    <sql id="objlist_sql"><![CDATA[
        select
            a.id, 
            a.creation, 
            a.lastmod, 
            a."version", 
            a.props, 
            a."user", 
            a.passwd, 
            a.question, 
            a.answer, 
            "user".id user_id, 
            "user"."type" user_type, 
            "user"."name" user_name, 
            "user".label user_label, 
            "user".description user_description, 
            "user".icon user_icon, 
            "user".priority user_priority, 
            "user".flags user_flags, 
            "user"."state" user_state, 
            "user".creation user_creation, 
            "user".lastmod user_lastmod, 
            "user"."version" user_version, 
            "user".props user_props, 
            "user".gid0 user_gid0, 
            "user".referer user_referer, 
            "user".person user_person
        from usersec a
            left join "user" "user" on a."user" = "user".id
        ]]>
    </sql>

    <sql id="objedit_sql"><![CDATA[
        select
            a.id, 
            a.creation, 
            a.lastmod, 
            a."version", 
            a.props, 
            a."user", 
            a.passwd, 
            a.question, 
            a.answer, 
            "user".id user_id, 
            "user"."type" user_type, 
            "user"."name" user_name, 
            "user".label user_label, 
            "user".description user_description, 
            "user".icon user_icon, 
            "user".priority user_priority, 
            "user".flags user_flags, 
            "user"."state" user_state, 
            "user".creation user_creation, 
            "user".lastmod user_lastmod, 
            "user"."version" user_version, 
            "user".props user_props, 
            "user".gid0 user_gid0, 
            "user".referer user_referer, 
            "user".person user_person
        from usersec a
            left join "user" "user" on a."user" = "user".id
        ]]>
    </sql>

    <sql id="filtconds">
        ${c.sqlCondition}
    </sql>

    <select id="all" resultMap="objlist_map">
        <include refid="objlist_sql" />
        <include refid="co.opts" />
    </select>

    <select id="filter" resultMap="objlist_map">
        <include refid="objlist_sql" />
        <where>
            <include refid="filtconds" />
        </where>
        <include refid="co.opts" />
    </select>

    <select id="select" resultMap="objlist_map">
        <include refid="objedit_sql" />
        <where>
            <if test="_parameter != null">a.id = #{id}</if>
        </where>
    </select>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id" keyColumn="id"><![CDATA[
        insert into usersec(
            creation,
            lastmod,
            "version",
            props,
            "user",
            passwd,
            question,
            answer
        ) values(
            #{creationDate},
            #{lastModified},
            #{version},
            #{properties},
            #{userId},
            #{password},
            #{question},
            #{answer}
        );
    ]]></insert>

    <update id="update">
        update usersec
        <set>
            creation = #{creationDate},
            lastmod = #{lastModified},
            "version" = #{version},
            props = #{properties},
            "user" = #{userId},
            passwd = #{password},
            question = #{question},
            answer = #{answer},
        </set>
        <where>
            id = #{id}
        </where>
    </update>

    <delete id="delete">
        delete from usersec
        <where>
            id = #{id}
        </where>
    </delete>

    <select id="count" resultType="long">
        select count(*) "rows" from usersec a
        <where>
            <if test="_parameter != null">
                <include refid="filtconds" />
            </if>
        </where>
    </select>

</mapper>
