<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.bodz.lily.schema.meta.dao.FormParameterMapper">

    <resultMap id="objlist_map" type="net.bodz.lily.schema.meta.FormParameter">
        <id property="id" column="id" />
        <result property="name" column="name" />
        <result property="value" column="value" />
        <result property="formId" column="form" />
        <association property="form" columnPrefix="form_"
            javaType="net.bodz.lily.schema.meta.FormDef" 
            resultMap="net.bodz.lily.schema.meta.dao.FormDefMapper.objlist_map" />
    </resultMap>

    <sql id="objlist_sql"><![CDATA[
        select
            a.id, 
            a.form, 
            a."name", 
            a."value", 
            form.id form_id, 
            form.code form_code, 
            form.label form_label, 
            form.description form_description, 
            form.priority form_priority, 
            form.flags form_flags, 
            form."state" form_state, 
            form.creation form_creation, 
            form.lastmod form_lastmod, 
            form."version" form_version, 
            form."schema" form_schema, 
            form.subject form_subject, 
            form.text form_text
        from _formparm a
            left join _form form on a.form = form.id
        ]]>
    </sql>

    <sql id="objedit_sql"><![CDATA[
        select
            a.id, 
            a.form, 
            a."name", 
            a."value", 
            form.id form_id, 
            form.code form_code, 
            form.label form_label, 
            form.description form_description, 
            form.priority form_priority, 
            form.flags form_flags, 
            form."state" form_state, 
            form.creation form_creation, 
            form.lastmod form_lastmod, 
            form."version" form_version, 
            form."schema" form_schema, 
            form.subject form_subject, 
            form.text form_text
        from _formparm a
            left join _form form on a.form = form.id
        ]]>
    </sql>

    <sql id="filtconds">
        <if test="m.id != null">and a.id = #{m.id}</if>
        <if test="m.idRange!= null">
            <if test="m.idRange.hasStartIncl">and a.id >= #{m.idRange.start}</if>
            <if test="m.idRange.hasStartExcl">and a.id > #{m.idRange.start}</if>
            <if test="m.idRange.hasEndIncl">and a.id &lt;= #{m.idRange.end}</if>
            <if test="m.idRange.hasEndExcl">and a.id &lt; #{m.idRange.end}</if>
        </if>
        <if test="m.formId != null">and a.form = #{m.formId}</if>
        <if test="m.formIdRange!= null">
            <if test="m.formIdRange.hasStartIncl">and a.form >= #{m.formIdRange.start}</if>
            <if test="m.formIdRange.hasStartExcl">and a.form > #{m.formIdRange.start}</if>
            <if test="m.formIdRange.hasEndIncl">and a.form &lt;= #{m.formIdRange.end}</if>
            <if test="m.formIdRange.hasEndExcl">and a.form &lt; #{m.formIdRange.end}</if>
        </if>
        <if test="m.name != null">and a."name" = #{m.name}</if>
        <if test="m.namePattern != null">and a."name" like '${m.namePattern}'</if>
        <if test="m.value != null">and a."value" = #{m.value}</if>
        <if test="m.valuePattern != null">and a."value" like '${m.valuePattern}'</if>
    </sql>

    <select id="all" resultMap="objlist_map">
        <include refid="objlist_sql" />
        <include refid="co.opts" />
    </select>

    <select id="filter" resultMap="objlist_map">
        <include refid="objlist_sql" />
        <where>
            <include refid="filtconds" />
        </where>
        <include refid="co.opts" />
    </select>

    <select id="select" resultMap="objlist_map">
        <include refid="objedit_sql" />
        <where>
            <if test="_parameter != null">a.id = #{id}</if>
        </where>
    </select>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id"><![CDATA[
        insert into _formparm(
            form,
            "name",
            "value"
        ) values(
            #{formId},
            #{name},
            #{value}
        );
    ]]></insert>

    <update id="update">
        update _formparm
        <set>
            form = #{formId},
            "name" = #{name},
            "value" = #{value},
        </set>
        <where>
            id = #{id}
        </where>
    </update>

    <delete id="delete">
        delete from _formparm
        <where>
            id = #{id}
        </where>
    </delete>

    <select id="count" resultType="long">
        select count(*) "rows" from _formparm
        <where>
            <if test="_parameter != null">
                <include refid="filtconds" />
            </if>
        </where>
    </select>

</mapper>
