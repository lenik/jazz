<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.bodz.lily.schema.account.dao.UserMapper">

    <resultMap id="objlist_map" type="net.bodz.lily.schema.account.User">
        <id property="id" column="id" />
        <result property="name" column="name" />
        <result property="label" column="label" />
        <result property="description" column="description" />
        <result property="priority" column="priority" />
        <result property="flags" column="flags" />
        <result property="state" column="state" />
        <result property="creationDate" column="creation" />
        <result property="lastModifiedDate" column="lastmod" />
        <result property="version" column="version" />
        <result property="properties.jsonStr" column="props" />
        <result property="typeId" column="type" />
        <result property="primaryGroupId" column="gid0" />
        <result property="refererId" column="referer" />
        <association property="primaryGroup" columnPrefix="gid0_"
            javaType="net.bodz.lily.schema.account.Group" 
            resultMap="net.bodz.lily.schema.account.dao.GroupMapper.objlist_map" />
        <association property="referer" columnPrefix="referer_"
            javaType="net.bodz.lily.schema.account.User" 
            resultMap="objlist_map" />
        <association property="type" columnPrefix="type_"
            javaType="net.bodz.lily.schema.account.UserType" 
            resultMap="net.bodz.lily.schema.account.dao.UserTypeMapper.objlist_map" />
    </resultMap>

    <sql id="objlist_sql"><![CDATA[
        select
            a.id, 
            a."type", 
            a."name", 
            a.label, 
            a.description, 
            a.priority, 
            a.flags, 
            a."state", 
            a.creation, 
            a.lastmod, 
            a."version", 
            a.props, 
            a.gid0, 
            a.referer, 
            gid0.id gid0_id, 
            gid0."name" gid0_name, 
            gid0."type" gid0_type, 
            gid0.label gid0_label, 
            gid0.description gid0_description, 
            gid0.priority gid0_priority, 
            gid0.flags gid0_flags, 
            gid0."state" gid0_state, 
            gid0.creation gid0_creation, 
            gid0.lastmod gid0_lastmod, 
            gid0."version" gid0_version, 
            gid0.props gid0_props, 
            gid0.parent gid0_parent, 
            referer.id referer_id, 
            referer."type" referer_type, 
            referer."name" referer_name, 
            referer.label referer_label, 
            referer.description referer_description, 
            referer.priority referer_priority, 
            referer.flags referer_flags, 
            referer."state" referer_state, 
            referer.creation referer_creation, 
            referer.lastmod referer_lastmod, 
            referer."version" referer_version, 
            referer.props referer_props, 
            referer.gid0 referer_gid0, 
            referer.referer referer_referer, 
            "type".id type_id, 
            "type"."name" type_name, 
            "type".label type_label, 
            "type".description type_description, 
            "type".priority type_priority, 
            "type".flags type_flags, 
            "type"."state" type_state, 
            "type".creation type_creation, 
            "type".lastmod type_lastmod, 
            "type"."version" type_version, 
            "type".props type_props, 
            "type".dummy type_dummy
        from user a
            left join "group" gid0 on a.gid0 = gid0.id
            left join "user" referer on a.referer = referer.id
            left join usertype "type" on a."type" = "type".id
        ]]>
    </sql>

    <sql id="objedit_sql"><![CDATA[
        select
            a.id, 
            a."type", 
            a."name", 
            a.label, 
            a.description, 
            a.priority, 
            a.flags, 
            a."state", 
            a.creation, 
            a.lastmod, 
            a."version", 
            a.props, 
            a.gid0, 
            a.referer, 
            gid0.id gid0_id, 
            gid0."name" gid0_name, 
            gid0."type" gid0_type, 
            gid0.label gid0_label, 
            gid0.description gid0_description, 
            gid0.priority gid0_priority, 
            gid0.flags gid0_flags, 
            gid0."state" gid0_state, 
            gid0.creation gid0_creation, 
            gid0.lastmod gid0_lastmod, 
            gid0."version" gid0_version, 
            gid0.props gid0_props, 
            gid0.parent gid0_parent, 
            referer.id referer_id, 
            referer."type" referer_type, 
            referer."name" referer_name, 
            referer.label referer_label, 
            referer.description referer_description, 
            referer.priority referer_priority, 
            referer.flags referer_flags, 
            referer."state" referer_state, 
            referer.creation referer_creation, 
            referer.lastmod referer_lastmod, 
            referer."version" referer_version, 
            referer.props referer_props, 
            referer.gid0 referer_gid0, 
            referer.referer referer_referer, 
            "type".id type_id, 
            "type"."name" type_name, 
            "type".label type_label, 
            "type".description type_description, 
            "type".priority type_priority, 
            "type".flags type_flags, 
            "type"."state" type_state, 
            "type".creation type_creation, 
            "type".lastmod type_lastmod, 
            "type"."version" type_version, 
            "type".props type_props, 
            "type".dummy type_dummy
        from user a
            left join "group" gid0 on a.gid0 = gid0.id
            left join "user" referer on a.referer = referer.id
            left join usertype "type" on a."type" = "type".id
        ]]>
    </sql>

    <sql id="filtconds">
        ${c.sqlCondition}
    </sql>

    <select id="all" resultMap="objlist_map">
        <include refid="objlist_sql" />
        <include refid="co.opts" />
    </select>

    <select id="filter" resultMap="objlist_map">
        <include refid="objlist_sql" />
        <where>
            <include refid="filtconds" />
        </where>
        <include refid="co.opts" />
    </select>

    <select id="select" resultMap="objlist_map">
        <include refid="objedit_sql" />
        <where>
            <if test="_parameter != null">a.id = #{id}</if>
        </where>
    </select>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id"><![CDATA[
        insert into "user"(
            "type",
            "name",
            label,
            description,
            priority,
            flags,
            "state",
            creation,
            lastmod,
            "version",
            props,
            gid0,
            referer
        ) values(
            #{typeId},
            #{name},
            #{label},
            #{description},
            #{priority},
            #{flags},
            #{state},
            #{creationDate},
            #{lastModifiedDate},
            #{version},
            #{properties.jsonStr}::jsonb,
            #{primaryGroupId},
            #{refererId}
        );
    ]]></insert>

    <update id="update">
        update "user"
        <set>
            "type" = #{typeId},
            "name" = #{name},
            label = #{label},
            description = #{description},
            priority = #{priority},
            flags = #{flags},
            "state" = #{state},
            creation = #{creationDate},
            lastmod = #{lastModifiedDate},
            "version" = #{version},
            props = #{properties.jsonStr}::jsonb,
            gid0 = #{primaryGroupId},
            referer = #{refererId},
        </set>
        <where>
            id = #{id}
        </where>
    </update>

    <delete id="delete">
        delete from "user"
        <where>
            id = #{id}
        </where>
    </delete>

    <select id="count" resultType="long">
        select count(*) "rows" from user
        <where>
            <if test="_parameter != null">
                <include refid="filtconds" />
            </if>
        </where>
    </select>

</mapper>
