<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.bodz.lily.schema.account.dao.PolicyMapper">

    <resultMap id="objlist_map" type="net.bodz.lily.schema.account.Policy">
        <id property="id" column="id" />
        <result property="name" column="name" />
        <result property="label" column="label" />
        <result property="description" column="description" />
        <result property="icon" column="icon" />
        <result property="priority" column="priority" />
        <result property="flags" column="flags" />
        <result property="state" column="state" />
        <result property="creationDate" column="creation" />
        <result property="lastModified" column="lastmod" />
        <result property="version" column="version" />
        <result property="properties" column="props" />
        <result property="controlClass" column="cclass" />
        <result property="methodName" column="method" />
        <result property="allowBits" column="allow" />
        <result property="denyBits" column="deny" />
    </resultMap>

    <sql id="objlist_sql"><![CDATA[
        select
            a.id, 
            a."name", 
            a.label, 
            a.description, 
            a.icon, 
            a.priority, 
            a.flags, 
            a."state", 
            a.creation, 
            a.lastmod, 
            a."version", 
            a.props, 
            a.cclass, 
            a."method", 
            a.allow, 
            a.deny
        from policy a
        ]]>
    </sql>

    <sql id="objedit_sql"><![CDATA[
        select
            a.id, 
            a."name", 
            a.label, 
            a.description, 
            a.icon, 
            a.priority, 
            a.flags, 
            a."state", 
            a.creation, 
            a.lastmod, 
            a."version", 
            a.props, 
            a.cclass, 
            a."method", 
            a.allow, 
            a.deny
        from policy a
        ]]>
    </sql>

    <sql id="filtconds">
        ${c.sqlCondition}
    </sql>

    <select id="all" resultMap="objlist_map">
        <include refid="objlist_sql" />
        <include refid="co.opts" />
    </select>

    <select id="filter" resultMap="objlist_map">
        <include refid="objlist_sql" />
        <where>
            <include refid="filtconds" />
        </where>
        <include refid="co.opts" />
    </select>

    <select id="select" resultMap="objlist_map">
        <include refid="objedit_sql" />
        <where>
            <if test="_parameter != null">a.id = #{id}</if>
        </where>
    </select>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id" keyColumn="id"><![CDATA[
        insert into policy(
            "name",
            label,
            description,
            icon,
            priority,
            flags,
            "state",
            creation,
            lastmod,
            "version",
            props,
            cclass,
            "method",
            allow,
            deny
        ) values(
            #{name},
            #{label},
            #{description},
            #{icon},
            #{priority},
            #{flags},
            #{state},
            #{creationDate},
            #{lastModified},
            #{version},
            #{properties},
            #{controlClass},
            #{methodName},
            #{allowBits},
            #{denyBits}
        );
    ]]></insert>

    <update id="update">
        update policy
        <set>
            "name" = #{name},
            label = #{label},
            description = #{description},
            icon = #{icon},
            priority = #{priority},
            flags = #{flags},
            "state" = #{state},
            creation = #{creationDate},
            lastmod = #{lastModified},
            "version" = #{version},
            props = #{properties},
            cclass = #{controlClass},
            "method" = #{methodName},
            allow = #{allowBits},
            deny = #{denyBits},
        </set>
        <where>
            id = #{id}
        </where>
    </update>

    <delete id="delete">
        delete from policy
        <where>
            id = #{id}
        </where>
    </delete>

    <select id="count" resultType="long">
        select count(*) "rows" from policy a
        <where>
            <if test="_parameter != null">
                <include refid="filtconds" />
            </if>
        </where>
    <include refid="co.countOpts" />
    </select>

</mapper>
