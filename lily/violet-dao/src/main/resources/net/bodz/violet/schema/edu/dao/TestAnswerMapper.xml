<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.bodz.violet.schema.edu.dao.TestAnswerMapper">

    <resultMap id="objlist_map" type="net.bodz.violet.schema.edu.TestAnswer">
        <id property="id" column="id" />
        <result property="label" column="label" />
        <result property="description" column="description" />
        <result property="icon" column="icon" />
        <result property="priority" column="priority" />
        <result property="flags" column="flags" />
        <result property="state" column="state" />
        <result property="creationDate" column="creation" />
        <result property="lastModified" column="lastmod" />
        <result property="version" column="version" />
        <result property="properties" column="props" />
        <result property="valid" column="valid" />
        <result property="questionId" column="q" />
        <association property="question" columnPrefix="q_" notNullColumn="id" 
            javaType="net.bodz.violet.schema.edu.TestQuestion" 
            resultMap="net.bodz.violet.schema.edu.dao.TestQuestionMapper.objlist_map" />
    </resultMap>

    <sql id="objlist_sql"><![CDATA[
        select
            a.id, 
            a.label, 
            a.description, 
            a.icon, 
            a.priority, 
            a.flags, 
            a."state", 
            a.creation, 
            a.lastmod, 
            a."version", 
            a.props, 
            a.q, 
            a."valid", 
            q.id q_id, 
            q.uid q_uid, 
            q.gid q_gid, 
            q.mode q_mode, 
            q.acl q_acl, 
            q.priority q_priority, 
            q.flags q_flags, 
            q."state" q_state, 
            q.creation q_creation, 
            q.lastmod q_lastmod, 
            q."version" q_version, 
            q.subject q_subject, 
            q.op q_op, 
            q.text q_text, 
            q.form q_form, 
            q.formargs q_formargs, 
            q.course q_course, 
            q.props q_props, 
            q.nfav q_nfav, 
            q.nvote q_nvote, 
            q.nhate q_nhate, 
            q.pos q_pos, 
            q.answer q_answer
        from testans a
            left join testq q on a.q = q.id
        ]]>
    </sql>

    <sql id="objedit_sql"><![CDATA[
        select
            a.id, 
            a.label, 
            a.description, 
            a.icon, 
            a.priority, 
            a.flags, 
            a."state", 
            a.creation, 
            a.lastmod, 
            a."version", 
            a.props, 
            a.q, 
            a."valid", 
            q.id q_id, 
            q.uid q_uid, 
            q.gid q_gid, 
            q.mode q_mode, 
            q.acl q_acl, 
            q.priority q_priority, 
            q.flags q_flags, 
            q."state" q_state, 
            q.creation q_creation, 
            q.lastmod q_lastmod, 
            q."version" q_version, 
            q.subject q_subject, 
            q.op q_op, 
            q.text q_text, 
            q.form q_form, 
            q.formargs q_formargs, 
            q.course q_course, 
            q.props q_props, 
            q.nfav q_nfav, 
            q.nvote q_nvote, 
            q.nhate q_nhate, 
            q.pos q_pos, 
            q.answer q_answer
        from testans a
            left join testq q on a.q = q.id
        ]]>
    </sql>

    <sql id="filtconds">
        ${c.andSqlCondition}
    </sql>

    <select id="all" resultMap="objlist_map">
        <include refid="objlist_sql" />
        <include refid="co.opts" />
    </select>

    <select id="filter" resultMap="objlist_map">
        <include refid="objlist_sql" />
        <where>
            <include refid="filtconds" />
        </where>
        <include refid="co.opts" />
    </select>

    <select id="select" resultMap="objlist_map">
        <include refid="objedit_sql" />
        <where>
            <if test="_parameter != null">a.id = #{id}</if>
        </where>
    </select>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id" keyColumn="id"><![CDATA[
        insert into testans(
            label,
            description,
            icon,
            priority,
            flags,
            "state",
            creation,
            lastmod,
            "version",
            props,
            q,
            "valid"
        ) values(
            #{label},
            #{description},
            #{icon},
            #{priority},
            #{flags},
            #{state},
            #{creationDate},
            #{lastModified},
            #{version},
            #{properties},
            #{questionId},
            #{valid}
        );
    ]]></insert>

    <update id="update">
        update testans
        <set>
            label = #{label},
            description = #{description},
            icon = #{icon},
            priority = #{priority},
            flags = #{flags},
            "state" = #{state},
            creation = #{creationDate},
            lastmod = #{lastModified},
            "version" = #{version},
            props = #{properties},
            q = #{questionId},
            "valid" = #{valid},
        </set>
        <where>
            id = #{id}
        </where>
    </update>

    <delete id="delete">
        delete from testans
        <where>
            id = #{id}
        </where>
    </delete>

    <select id="count" resultType="long">
        select count(*) "rows" from testans a
        <where>
            <if test="_parameter != null">
                <include refid="filtconds" />
            </if>
        </where>
        <include refid="co.countOpts" />
    </select>

</mapper>
