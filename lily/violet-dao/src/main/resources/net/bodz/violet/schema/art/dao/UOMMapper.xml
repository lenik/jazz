<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.bodz.violet.schema.art.dao.UOMMapper">

    <resultMap id="objlist_map" type="net.bodz.violet.schema.art.UOM">
        <id property="id" column="id" />
        <result property="code" column="code" />
        <result property="label" column="label" />
        <result property="description" column="description" />
        <result property="properties.jsonStr" column="props" />
        <result property="prop" column="prop" />
        <result property="scale" column="scale" />
        <result property="stdId" column="std" />
        <association property="std" columnPrefix="std_"
            javaType="net.bodz.violet.schema.art.UOM" 
            resultMap="objlist_map" />
    </resultMap>

    <sql id="objlist_sql"><![CDATA[
        select
            a.id, 
            a.code, 
            a.label, 
            a.description, 
            a.props, 
            a.prop, 
            a.std, 
            a."scale", 
            std.id std_id, 
            std.code std_code, 
            std.label std_label, 
            std.description std_description, 
            std.props std_props, 
            std.prop std_prop, 
            std.std std_std, 
            std."scale" std_scale
        from uom a
            left join uom std on a.std = std.id
        ]]>
    </sql>

    <sql id="objedit_sql"><![CDATA[
        select
            a.id, 
            a.code, 
            a.label, 
            a.description, 
            a.props, 
            a.prop, 
            a.std, 
            a."scale", 
            std.id std_id, 
            std.code std_code, 
            std.label std_label, 
            std.description std_description, 
            std.props std_props, 
            std.prop std_prop, 
            std.std std_std, 
            std."scale" std_scale
        from uom a
            left join uom std on a.std = std.id
        ]]>
    </sql>

    <sql id="filtconds">
        ${c.sqlCondition}
    </sql>

    <select id="all" resultMap="objlist_map">
        <include refid="objlist_sql" />
        <include refid="co.opts" />
    </select>

    <select id="filter" resultMap="objlist_map">
        <include refid="objlist_sql" />
        <where>
            <include refid="filtconds" />
        </where>
        <include refid="co.opts" />
    </select>

    <select id="select" resultMap="objlist_map">
        <include refid="objedit_sql" />
        <where>
            <if test="_parameter != null">a.id = #{id}</if>
        </where>
    </select>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id"><![CDATA[
        insert into uom(
            code,
            label,
            description,
            props,
            prop,
            std,
            "scale"
        ) values(
            #{code},
            #{label},
            #{description},
            #{properties.jsonStr}::jsonb,
            #{prop},
            #{stdId},
            #{scale}
        );
    ]]></insert>

    <update id="update">
        update uom
        <set>
            code = #{code},
            label = #{label},
            description = #{description},
            props = #{properties.jsonStr}::jsonb,
            prop = #{prop},
            std = #{stdId},
            "scale" = #{scale},
        </set>
        <where>
            id = #{id}
        </where>
    </update>

    <delete id="delete">
        delete from uom
        <where>
            id = #{id}
        </where>
    </delete>

    <select id="count" resultType="long">
        select count(*) "rows" from uom
        <where>
            <if test="_parameter != null">
                <include refid="filtconds" />
            </if>
        </where>
    </select>

</mapper>
