<?xml version="1.0" encoding="UTF-8" ?> 
<!DOCTYPE mapper 
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.bodz.violet.shop.impl.ShopItemMapper">

    <resultMap id="map1" type="net.bodz.violet.shop.ShopItem" extends="co.MAP_UVX">
        <result property="beginTime" column="t0" />
        <result property="endTime" column="t1" />
        <result property="properties.jsonForm" column="props" />
        <result property="quantity" column="qty" />
        <result property="price" column="price" />
        <association property="shop" javaType="net.bodz.violet.shop.Shop">
            <id property="id" column="shop" />
            <result property="label" column="shop_label" />
        </association>
        <association property="category" javaType="net.bodz.violet.shop.ShopItemCategory">
            <id property="id" column="cat" />
            <result property="label" column="cat_label" />
        </association>
        <association property="artifact" javaType="net.bodz.violet.art.Artifact">
            <id property="id" column="art" />
            <result property="label" column="art_label" />
            <result property="properties.jsonForm" column="art_props" />
            <association property="category" javaType="net.bodz.violet.art.ArtifactCategory">
                <id property="id" column="art_cat" />
                <result property="label" column="art_cat_label" />
            </association>
        </association>
    </resultMap>

    <sql id="select1"><![CDATA[
        select
            a.*,
            shop.label "shop_label",
            cat.label "cat_label",
            art.label "art_label",
            art.props "art_props",
            art.cat "art_cat",
            artcat.label "art_cat_label",
            u.label "uid_label",
            g.label "gid_label"
        from shopitem a
            left join shop on a.shop = shop.id
            left join shopitemcat cat on a.cat = cat.id
            left join art on a.art = art.id
            left join artcat on art.cat = artcat.id
            left join "user" u on shop.uid = u.id
            left join "group" g on shop.gid = g.id
    ]]></sql>

    <sql id="select2"><![CDATA[
        select
            a.*,
            shop.label "shop_label",
            cat.label "cat_label",
            art.label "art_label",
            u.label "uid_label",
            g.label "gid_label"
        from shopitem a
            left join shop on a.shop = shop.id
            left join shopitemcat cat on a.cat = cat.id
            left join art on a.art = art.id
            left join "user" u on shop.uid = u.id
            left join "group" g on shop.gid = g.id
        ]]>
    </sql>

    <sql id="filtconds">
        <!-- co -->
        <include refid="co.modefilt" />
    </sql>

    <select id="all" resultMap="map1">
        <include refid="select1" />
    </select>

    <select id="filter" resultMap="map1">
        <include refid="select1" />
        <where>
            <include refid="filtconds" />
        </where>
    </select>

    <select id="select" parameterType="int" resultMap="map1">
        <include refid="select2" />
        <where>
            <if test="_parameter != null">a.id = #{id}</if>
        </where>
    </select>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id"><![CDATA[
        insert into shopitem(
            label, description,
            priority, flags, state,
            t0, t1,
            props,
            shop, cat, art, price, qty
        ) values(
            #{label}, #{description},
            #{priority}, #{flags}, #{state},
            #{beginTime}, #{endTime},
            #{properties.jsonForm},
            #{shop.id}, #{category.id}, #{artifact.id}, #{price}, #{quantity}
        ) returning id; --
    ]]></insert>

    <update id="update">
        update shopitem
        <set>
            <include refid="co.setUS" />
            t0 = #{beginTime},
            t1 = #{endTime},
            props = #{properties.jsonForm},
            shop = #{shop.id},
            cat = #{category.id},
            art = #{artifact.id},
            price = #{price},
            qty = #{quantity},
        </set>
        <where>
            id = #{id}
        </where>
    </update>

    <delete id="delete">
        delete from shopitem where id = #{id}
    </delete>

    <select id="count" resultType="hashmap">
        select count(*) "rows" from shopitem
        <where>
            <if test="_parameter != null">
                <include refid="filtconds" />
            </if>
        </where>
    </select>

</mapper>
