<?xml version="1.0" encoding="UTF-8" ?> 
<!DOCTYPE mapper 
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.bodz.violet.edu.impl.TestQuestionMapper">

    <resultMap id="map1" type="net.bodz.violet.edu.TestQuestion" extends="co.MAP_UVX">
        <result property="properties.jsonForm" column="props" />
        <result property="insertPos" column="pos" />
        <result property="answer" column="answer" />
        <association property="course" javaType="net.bodz.violet.edu.Course">
            <id property="id" column="course" />
            <result property="label" column="course_label" />
        </association>
    </resultMap>

    <sql id="select1"><![CDATA[
        select
            a.*,
            course.label "course_label",
            u.label "uid_label",
            g.label "gid_label"
        from testq a
            left join course on a.course = course.id
            left join "user" u on a.uid = u.id
            left join "group" g on a.gid = g.id
        ]]>
    </sql>

    <sql id="select2"><![CDATA[
        select
            a.*,
            course.label "course_label",
            u.label "uid_label",
            g.label "gid_label"
        from testq a
            left join course on a.course = course.id
            left join "user" u on a.uid = u.id
            left join "group" g on a.gid = g.id
        ]]>
    </sql>

    <sql id="filtconds">
        <!-- co -->
        <include refid="co.modefilt" />
    </sql>

    <select id="all" resultMap="map1">
        <include refid="select1" />
    </select>

    <select id="filter" resultMap="map1">
        <include refid="select1" />
        <where>
            <include refid="filtconds" />
        </where>
    </select>

    <select id="select" parameterType="int" resultMap="map1">
        <include refid="select2" />
        <where>
            <if test="_parameter != null">a.id = #{id}</if>
        </where>
    </select>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id"><![CDATA[
        insert into testq(
            label, description,
            uid, gid, mode, acl,
            priority, flags, state, 
            op, subject, text,
            props, 
            course,
            pos, answer
        ) values(
            #{label}, #{description},
            #{ownerUser.id}, #{ownerGroup.id}, #{accessMode}, #{acl},
            #{priority}, #{flags}, #{state}, 
            #{op.id}, #{subject}, #{text}, 
            #{properties.jsonForm},
            #{course.id},
            #{insertPos}, #{answer}
        ) returning id; --
    ]]></insert>

    <update id="update">
        update testq
        <set>
            <include refid="co.setUSA" />
            <include refid="message.setUM" />
            props = #{properties.jsonForm},
            course = #{course.id},
            pos = #{insertPos},
            answer = #{answer},
        </set>
        <where>
            id = #{id}
        </where>
    </update>

    <delete id="delete">
        delete from testq where id = #{id}
    </delete>

    <select id="count" resultType="hashmap">
        select count(*) "rows" from testq
        <where>
            <if test="_parameter != null">
                <include refid="filtconds" />
            </if>
        </where>
    </select>

</mapper>
