<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.bodz.violet.schema.fab.dao.FabStdTestParameterMapper">

    <resultMap id="objlist_map" type="net.bodz.violet.schema.fab.FabStdTestParameter">
        <id property="id" column="id" />
        <result property="creationDate" column="creation" />
        <result property="lastModified" column="lastmod" />
        <result property="version" column="version" />
        <result property="required" column="required" />
        <result property="properties" column="props" />
        <result property="expected" column="expected" />
        <result property="testId" column="test" />
        <association property="test" columnPrefix="test_" notNullColumn="id" 
            javaType="net.bodz.violet.schema.fab.FabStdTest" 
            resultMap="net.bodz.violet.schema.fab.dao.FabStdTestMapper.objlist_map" />
    </resultMap>

    <sql id="objlist_sql"><![CDATA[
        select
            a.id, 
            a.creation, 
            a.lastmod, 
            a."version", 
            a.test, 
            a.required, 
            a.props, 
            a.expected, 
            test.id test_id, 
            test.code test_code, 
            test.uid test_uid, 
            test.gid test_gid, 
            test.mode test_mode, 
            test.acl test_acl, 
            test.label test_label, 
            test.description test_description, 
            test.icon test_icon, 
            test.priority test_priority, 
            test.flags test_flags, 
            test."state" test_state, 
            test.creation test_creation, 
            test.lastmod test_lastmod, 
            test."version" test_version, 
            test.props test_props, 
            test.cat test_cat, 
            test.parent test_parent, 
            test."depth" test_depth, 
            test.nref test_nref
        from fabstdtest_parm a
            left join fabstdtest test on a.test = test.id
        ]]>
    </sql>

    <sql id="objedit_sql"><![CDATA[
        select
            a.id, 
            a.creation, 
            a.lastmod, 
            a."version", 
            a.test, 
            a.required, 
            a.props, 
            a.expected, 
            test.id test_id, 
            test.code test_code, 
            test.uid test_uid, 
            test.gid test_gid, 
            test.mode test_mode, 
            test.acl test_acl, 
            test.label test_label, 
            test.description test_description, 
            test.icon test_icon, 
            test.priority test_priority, 
            test.flags test_flags, 
            test."state" test_state, 
            test.creation test_creation, 
            test.lastmod test_lastmod, 
            test."version" test_version, 
            test.props test_props, 
            test.cat test_cat, 
            test.parent test_parent, 
            test."depth" test_depth, 
            test.nref test_nref
        from fabstdtest_parm a
            left join fabstdtest test on a.test = test.id
        ]]>
    </sql>

    <sql id="filtconds">
        ${c.sqlCondition}
    </sql>

    <select id="all" resultMap="objlist_map">
        <include refid="objlist_sql" />
        <include refid="co.opts" />
    </select>

    <select id="filter" resultMap="objlist_map">
        <include refid="objlist_sql" />
        <where>
            <include refid="filtconds" />
        </where>
        <include refid="co.opts" />
    </select>

    <select id="select" resultMap="objlist_map">
        <include refid="objedit_sql" />
        <where>
            <if test="_parameter != null">a.id = #{id}</if>
        </where>
    </select>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id" keyColumn="id"><![CDATA[
        insert into fabstdtest_parm(
            creation,
            lastmod,
            "version",
            test,
            required,
            props,
            expected
        ) values(
            #{creationDate},
            #{lastModified},
            #{version},
            #{testId},
            #{required},
            #{properties},
            #{expected}
        );
    ]]></insert>

    <update id="update">
        update fabstdtest_parm
        <set>
            creation = #{creationDate},
            lastmod = #{lastModified},
            "version" = #{version},
            test = #{testId},
            required = #{required},
            props = #{properties},
            expected = #{expected},
        </set>
        <where>
            id = #{id}
        </where>
    </update>

    <delete id="delete">
        delete from fabstdtest_parm
        <where>
            id = #{id}
        </where>
    </delete>

    <select id="count" resultType="long">
        select count(*) "rows" from fabstdtest_parm a
        <where>
            <if test="_parameter != null">
                <include refid="filtconds" />
            </if>
        </where>
    </select>

</mapper>
