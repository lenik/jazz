<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.bodz.violet.schema.fab.dao.FabProcessMapper">

    <resultMap id="objlist_map" type="net.bodz.violet.schema.fab.FabProcess">
        <id property="id" column="id" />
        <result property="accessMode" column="mode" />
        <result property="acl" column="acl" />
        <result property="label" column="label" />
        <result property="description" column="description" />
        <result property="icon" column="icon" />
        <result property="priority" column="priority" />
        <result property="flags" column="flags" />
        <result property="state" column="state" />
        <result property="creationDate" column="creation" />
        <result property="lastModified" column="lastmod" />
        <result property="version" column="version" />
        <result property="beginTime" column="t0" />
        <result property="endTime" column="t1" />
        <result property="year" column="year" />
        <result property="quantity" column="qty" />
        <result property="batch" column="batch" />
        <result property="since" column="since" />
        <result property="deadline" column="deadline" />
        <result property="trackCount" column="ntrack" />
        <result property="ownerUserId" column="uid" />
        <result property="ownerGroupId" column="gid" />
        <result property="taskId" column="task" />
        <result property="parentId" column="parent" />
        <result property="outputId" column="output" />
        <result property="standardId" column="std" />
        <association property="standard" columnPrefix="std_" notNullColumn="id" 
            javaType="net.bodz.violet.schema.fab.FabStdProcess" 
            resultMap="net.bodz.violet.schema.fab.dao.FabStdProcessMapper.objlist_map" />
        <association property="ownerUser" columnPrefix="ownerUser_" notNullColumn="id" 
            javaType="net.bodz.lily.schema.account.User" 
            resultMap="net.bodz.lily.schema.account.dao.UserMapper.objlist_map" />
        <association property="parent" columnPrefix="parent_" notNullColumn="id" 
            javaType="net.bodz.violet.schema.fab.FabProcess" 
            resultMap="objlist_map" />
        <association property="output" columnPrefix="output_" notNullColumn="id" 
            javaType="net.bodz.violet.schema.art.ArtifactModel" 
            resultMap="net.bodz.violet.schema.art.dao.ArtifactModelMapper.objlist_map" />
        <association property="ownerGroup" columnPrefix="ownerGroup_" notNullColumn="id" 
            javaType="net.bodz.lily.schema.account.Group" 
            resultMap="net.bodz.lily.schema.account.dao.GroupMapper.objlist_map" />
        <association property="task" columnPrefix="task_" notNullColumn="id" 
            javaType="net.bodz.violet.schema.fab.FabTask" 
            resultMap="net.bodz.violet.schema.fab.dao.FabTaskMapper.objlist_map" />
    </resultMap>

    <sql id="objlist_sql"><![CDATA[
        select
            a.id, 
            a.uid, 
            a.gid, 
            a.mode, 
            a.acl, 
            a.label, 
            a.description, 
            a.icon, 
            a.priority, 
            a.flags, 
            a."state", 
            a.creation, 
            a.lastmod, 
            a."version", 
            a.t0, 
            a.t1, 
            a."year", 
            a.task, 
            a.parent, 
            a."output", 
            a.std, 
            a.qty, 
            a.batch, 
            a.since, 
            a.deadline, 
            a.ntrack, 
            std.id std_id, 
            std.uid std_uid, 
            std.gid std_gid, 
            std.mode std_mode, 
            std.acl std_acl, 
            std.label std_label, 
            std.description std_description, 
            std.icon std_icon, 
            std.priority std_priority, 
            std.flags std_flags, 
            std."state" std_state, 
            std.creation std_creation, 
            std.lastmod std_lastmod, 
            std."version" std_version, 
            std."valid" std_valid, 
            std.validsince std_validsince, 
            std.validuntil std_validuntil, 
            std.props std_props, 
            std."output" std_output, 
            std.fn std_fn, 
            std.duration std_duration, 
            std.strict std_strict, 
            std.test std_test, 
            ownerUser.id ownerUser_id, 
            ownerUser."type" ownerUser_type, 
            ownerUser."name" ownerUser_name, 
            ownerUser.label ownerUser_label, 
            ownerUser.description ownerUser_description, 
            ownerUser.icon ownerUser_icon, 
            ownerUser.priority ownerUser_priority, 
            ownerUser.flags ownerUser_flags, 
            ownerUser."state" ownerUser_state, 
            ownerUser.creation ownerUser_creation, 
            ownerUser.lastmod ownerUser_lastmod, 
            ownerUser."version" ownerUser_version, 
            ownerUser.props ownerUser_props, 
            ownerUser.gid0 ownerUser_gid0, 
            ownerUser.referer ownerUser_referer, 
            ownerUser.person ownerUser_person, 
            parent.id parent_id, 
            parent.uid parent_uid, 
            parent.gid parent_gid, 
            parent.mode parent_mode, 
            parent.acl parent_acl, 
            parent.label parent_label, 
            parent.description parent_description, 
            parent.icon parent_icon, 
            parent.priority parent_priority, 
            parent.flags parent_flags, 
            parent."state" parent_state, 
            parent.creation parent_creation, 
            parent.lastmod parent_lastmod, 
            parent."version" parent_version, 
            parent.t0 parent_t0, 
            parent.t1 parent_t1, 
            parent."year" parent_year, 
            parent.task parent_task, 
            parent.parent parent_parent, 
            parent."output" parent_output, 
            parent.std parent_std, 
            parent.qty parent_qty, 
            parent.batch parent_batch, 
            parent.since parent_since, 
            parent.deadline parent_deadline, 
            parent.ntrack parent_ntrack, 
            "output".id output_id, 
            "output".uid output_uid, 
            "output".gid output_gid, 
            "output".mode output_mode, 
            "output".acl output_acl, 
            "output".label output_label, 
            "output".description output_description, 
            "output".icon output_icon, 
            "output".priority output_priority, 
            "output".flags output_flags, 
            "output"."state" output_state, 
            "output".creation output_creation, 
            "output".lastmod output_lastmod, 
            "output"."version" output_version, 
            "output".t0 output_t0, 
            "output".t1 output_t1, 
            "output"."year" output_year, 
            "output".props output_props, 
            "output"."valid" output_valid, 
            "output".validsince output_validsince, 
            "output".validuntil output_validuntil, 
            "output".obsolete output_obsolete, 
            "output".art output_art, 
            "output".model output_model, 
            ownerGroup.id ownerGroup_id, 
            ownerGroup."name" ownerGroup_name, 
            ownerGroup."type" ownerGroup_type, 
            ownerGroup.label ownerGroup_label, 
            ownerGroup.description ownerGroup_description, 
            ownerGroup.icon ownerGroup_icon, 
            ownerGroup.priority ownerGroup_priority, 
            ownerGroup.flags ownerGroup_flags, 
            ownerGroup."state" ownerGroup_state, 
            ownerGroup.creation ownerGroup_creation, 
            ownerGroup.lastmod ownerGroup_lastmod, 
            ownerGroup."version" ownerGroup_version, 
            ownerGroup.props ownerGroup_props, 
            ownerGroup.parent ownerGroup_parent, 
            task.id task_id, 
            task.uid task_uid, 
            task.gid task_gid, 
            task.mode task_mode, 
            task.acl task_acl, 
            task.label task_label, 
            task.description task_description, 
            task.icon task_icon, 
            task.priority task_priority, 
            task.flags task_flags, 
            task."state" task_state, 
            task.creation task_creation, 
            task.lastmod task_lastmod, 
            task."version" task_version, 
            task.t0 task_t0, 
            task.t1 task_t1, 
            task."year" task_year, 
            task.odr task_odr, 
            task.since task_since, 
            task.deadline task_deadline, 
            task.nproc task_nproc, 
            task.ntrack task_ntrack
        from fabproc a
            left join fabstdproc std on a.std = std.id
            left join lily."user" ownerUser on a.uid = ownerUser.id
            left join fabproc parent on a.parent = parent.id
            left join artmodel "output" on a."output" = "output".id
            left join lily."group" ownerGroup on a.gid = ownerGroup.id
            left join fabtask task on a.task = task.id
        ]]>
    </sql>

    <sql id="objedit_sql"><![CDATA[
        select
            a.id, 
            a.uid, 
            a.gid, 
            a.mode, 
            a.acl, 
            a.label, 
            a.description, 
            a.icon, 
            a.priority, 
            a.flags, 
            a."state", 
            a.creation, 
            a.lastmod, 
            a."version", 
            a.t0, 
            a.t1, 
            a."year", 
            a.task, 
            a.parent, 
            a."output", 
            a.std, 
            a.qty, 
            a.batch, 
            a.since, 
            a.deadline, 
            a.ntrack, 
            std.id std_id, 
            std.uid std_uid, 
            std.gid std_gid, 
            std.mode std_mode, 
            std.acl std_acl, 
            std.label std_label, 
            std.description std_description, 
            std.icon std_icon, 
            std.priority std_priority, 
            std.flags std_flags, 
            std."state" std_state, 
            std.creation std_creation, 
            std.lastmod std_lastmod, 
            std."version" std_version, 
            std."valid" std_valid, 
            std.validsince std_validsince, 
            std.validuntil std_validuntil, 
            std.props std_props, 
            std."output" std_output, 
            std.fn std_fn, 
            std.duration std_duration, 
            std.strict std_strict, 
            std.test std_test, 
            ownerUser.id ownerUser_id, 
            ownerUser."type" ownerUser_type, 
            ownerUser."name" ownerUser_name, 
            ownerUser.label ownerUser_label, 
            ownerUser.description ownerUser_description, 
            ownerUser.icon ownerUser_icon, 
            ownerUser.priority ownerUser_priority, 
            ownerUser.flags ownerUser_flags, 
            ownerUser."state" ownerUser_state, 
            ownerUser.creation ownerUser_creation, 
            ownerUser.lastmod ownerUser_lastmod, 
            ownerUser."version" ownerUser_version, 
            ownerUser.props ownerUser_props, 
            ownerUser.gid0 ownerUser_gid0, 
            ownerUser.referer ownerUser_referer, 
            ownerUser.person ownerUser_person, 
            parent.id parent_id, 
            parent.uid parent_uid, 
            parent.gid parent_gid, 
            parent.mode parent_mode, 
            parent.acl parent_acl, 
            parent.label parent_label, 
            parent.description parent_description, 
            parent.icon parent_icon, 
            parent.priority parent_priority, 
            parent.flags parent_flags, 
            parent."state" parent_state, 
            parent.creation parent_creation, 
            parent.lastmod parent_lastmod, 
            parent."version" parent_version, 
            parent.t0 parent_t0, 
            parent.t1 parent_t1, 
            parent."year" parent_year, 
            parent.task parent_task, 
            parent.parent parent_parent, 
            parent."output" parent_output, 
            parent.std parent_std, 
            parent.qty parent_qty, 
            parent.batch parent_batch, 
            parent.since parent_since, 
            parent.deadline parent_deadline, 
            parent.ntrack parent_ntrack, 
            "output".id output_id, 
            "output".uid output_uid, 
            "output".gid output_gid, 
            "output".mode output_mode, 
            "output".acl output_acl, 
            "output".label output_label, 
            "output".description output_description, 
            "output".icon output_icon, 
            "output".priority output_priority, 
            "output".flags output_flags, 
            "output"."state" output_state, 
            "output".creation output_creation, 
            "output".lastmod output_lastmod, 
            "output"."version" output_version, 
            "output".t0 output_t0, 
            "output".t1 output_t1, 
            "output"."year" output_year, 
            "output".props output_props, 
            "output"."valid" output_valid, 
            "output".validsince output_validsince, 
            "output".validuntil output_validuntil, 
            "output".obsolete output_obsolete, 
            "output".art output_art, 
            "output".model output_model, 
            ownerGroup.id ownerGroup_id, 
            ownerGroup."name" ownerGroup_name, 
            ownerGroup."type" ownerGroup_type, 
            ownerGroup.label ownerGroup_label, 
            ownerGroup.description ownerGroup_description, 
            ownerGroup.icon ownerGroup_icon, 
            ownerGroup.priority ownerGroup_priority, 
            ownerGroup.flags ownerGroup_flags, 
            ownerGroup."state" ownerGroup_state, 
            ownerGroup.creation ownerGroup_creation, 
            ownerGroup.lastmod ownerGroup_lastmod, 
            ownerGroup."version" ownerGroup_version, 
            ownerGroup.props ownerGroup_props, 
            ownerGroup.parent ownerGroup_parent, 
            task.id task_id, 
            task.uid task_uid, 
            task.gid task_gid, 
            task.mode task_mode, 
            task.acl task_acl, 
            task.label task_label, 
            task.description task_description, 
            task.icon task_icon, 
            task.priority task_priority, 
            task.flags task_flags, 
            task."state" task_state, 
            task.creation task_creation, 
            task.lastmod task_lastmod, 
            task."version" task_version, 
            task.t0 task_t0, 
            task.t1 task_t1, 
            task."year" task_year, 
            task.odr task_odr, 
            task.since task_since, 
            task.deadline task_deadline, 
            task.nproc task_nproc, 
            task.ntrack task_ntrack
        from fabproc a
            left join fabstdproc std on a.std = std.id
            left join lily."user" ownerUser on a.uid = ownerUser.id
            left join fabproc parent on a.parent = parent.id
            left join artmodel "output" on a."output" = "output".id
            left join lily."group" ownerGroup on a.gid = ownerGroup.id
            left join fabtask task on a.task = task.id
        ]]>
    </sql>

    <sql id="filtconds">
        ${c.sqlCondition}
    </sql>

    <select id="all" resultMap="objlist_map">
        <include refid="objlist_sql" />
        <include refid="co.opts" />
    </select>

    <select id="filter" resultMap="objlist_map">
        <include refid="objlist_sql" />
        <where>
            <include refid="filtconds" />
        </where>
        <include refid="co.opts" />
    </select>

    <select id="select" resultMap="objlist_map">
        <include refid="objedit_sql" />
        <where>
            <if test="_parameter != null">a.id = #{id}</if>
        </where>
    </select>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id" keyColumn="id"><![CDATA[
        insert into fabproc(
            uid,
            gid,
            mode,
            acl,
            label,
            description,
            icon,
            priority,
            flags,
            "state",
            creation,
            lastmod,
            "version",
            t0,
            t1,
            "year",
            task,
            parent,
            "output",
            std,
            qty,
            batch,
            since,
            deadline,
            ntrack
        ) values(
            #{ownerUserId},
            #{ownerGroupId},
            #{accessMode},
            #{acl},
            #{label},
            #{description},
            #{icon},
            #{priority},
            #{flags},
            #{state},
            #{creationDate},
            #{lastModified},
            #{version},
            #{beginTime},
            #{endTime},
            #{year},
            #{taskId},
            #{parentId},
            #{outputId},
            #{standardId},
            #{quantity},
            #{batch},
            #{since},
            #{deadline},
            #{trackCount}
        );
    ]]></insert>

    <update id="update">
        update fabproc
        <set>
            uid = #{ownerUserId},
            gid = #{ownerGroupId},
            mode = #{accessMode},
            acl = #{acl},
            label = #{label},
            description = #{description},
            icon = #{icon},
            priority = #{priority},
            flags = #{flags},
            "state" = #{state},
            creation = #{creationDate},
            lastmod = #{lastModified},
            "version" = #{version},
            t0 = #{beginTime},
            t1 = #{endTime},
            "year" = #{year},
            task = #{taskId},
            parent = #{parentId},
            "output" = #{outputId},
            std = #{standardId},
            qty = #{quantity},
            batch = #{batch},
            since = #{since},
            deadline = #{deadline},
            ntrack = #{trackCount},
        </set>
        <where>
            id = #{id}
        </where>
    </update>

    <delete id="delete">
        delete from fabproc
        <where>
            id = #{id}
        </where>
    </delete>

    <select id="count" resultType="long">
        select count(*) "rows" from fabproc a
        <where>
            <if test="_parameter != null">
                <include refid="filtconds" />
            </if>
        </where>
    <include refid="co.countOpts" />
    </select>

</mapper>
