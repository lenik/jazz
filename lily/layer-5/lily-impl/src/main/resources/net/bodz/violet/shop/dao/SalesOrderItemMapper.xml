<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.bodz.violet.shop.dao.SalesOrderItemMapper">

    <resultMap id="objlist_map" type="net.bodz.violet.shop.SalesOrderItem">
        <id property="id" column="id" />
        <result property="priority" column="priority" />
        <result property="flags" column="flags" />
        <result property="state" column="state" />
        <result property="beginTime" column="t0" />
        <result property="endTime" column="t1" />
        <result property="year" column="year" />
        <result property="properties.jsonStr" column="props" />
        <result property="batch.jsonStr" column="batch" />
        <result property="quantity" column="qty" />
        <result property="price" column="price" />
        <result property="amount" column="amount" />
        <result property="n1" column="n1" />
        <result property="odrId" column="odr" />
        <result property="shopItemId" column="shopitem" />
        <result property="artifactId" column="art" />
        <association property="odr" columnPrefix="odr_"
            javaType="net.bodz.violet.shop.SalesOrder" 
            resultMap="net.bodz.violet.shop.dao.SalesOrderMapper.objlist_map" />
        <association property="shopItem" columnPrefix="shopitem_"
            javaType="net.bodz.violet.shop.ShopItem" 
            resultMap="net.bodz.violet.shop.dao.ShopItemMapper.objlist_map" />
        <association property="artifact" columnPrefix="art_"
            javaType="net.bodz.violet.art.Artifact" 
            resultMap="net.bodz.violet.art.dao.ArtifactMapper.objlist_map" />
    </resultMap>

    <sql id="objlist_sql"><![CDATA[
        select
            a.id, 
            a.priority, 
            a.flags, 
            a."state", 
            a.t0, 
            a.t1, 
            a."year", 
            a.props, 
            a.odr, 
            a.shopitem, 
            a.art, 
            a.batch, 
            a.qty, 
            a.price, 
            a.amount, 
            a.n1, 
            odr.id odr_id, 
            odr.uid odr_uid, 
            odr.gid odr_gid, 
            odr.mode odr_mode, 
            odr.acl odr_acl, 
            odr.priority odr_priority, 
            odr.flags odr_flags, 
            odr."state" odr_state, 
            odr.creation odr_creation, 
            odr.lastmod odr_lastmod, 
            odr."version" odr_version, 
            odr.t0 odr_t0, 
            odr.t1 odr_t1, 
            odr."year" odr_year, 
            odr.subject odr_subject, 
            odr.op odr_op, 
            odr.text odr_text, 
            odr.form odr_form, 
            odr.formargs odr_formargs, 
            odr.props odr_props, 
            odr.cat odr_cat, 
            odr.phase odr_phase, 
            odr.prev odr_prev, 
            odr.plan odr_plan, 
            odr.customer_org odr_customer_org, 
            odr.customer odr_customer, 
            odr."length" odr_length, 
            odr.sum_qty odr_sum_qty, 
            odr.sum_amount odr_sum_amount, 
            shopitem.id shopitem_id, 
            shopitem.label shopitem_label, 
            shopitem.description shopitem_description, 
            shopitem.priority shopitem_priority, 
            shopitem.flags shopitem_flags, 
            shopitem."state" shopitem_state, 
            shopitem.t0 shopitem_t0, 
            shopitem.t1 shopitem_t1, 
            shopitem."year" shopitem_year, 
            shopitem.creation shopitem_creation, 
            shopitem.lastmod shopitem_lastmod, 
            shopitem."version" shopitem_version, 
            shopitem.props shopitem_props, 
            shopitem.shop shopitem_shop, 
            shopitem.cat shopitem_cat, 
            shopitem.art shopitem_art, 
            shopitem.batch shopitem_batch, 
            shopitem.price shopitem_price, 
            shopitem.qty shopitem_qty, 
            art.id art_id, 
            art.sku art_sku, 
            art.barcode art_barcode, 
            art.rfid art_rfid, 
            art.uid art_uid, 
            art.gid art_gid, 
            art.mode art_mode, 
            art.acl art_acl, 
            art.label art_label, 
            art.description art_description, 
            art.priority art_priority, 
            art.flags art_flags, 
            art."state" art_state, 
            art.creation art_creation, 
            art.lastmod art_lastmod, 
            art."version" art_version, 
            art.model art_model, 
            art.proto art_proto, 
            art.cat art_cat, 
            art.phase art_phase, 
            art.uom art_uom, 
            art.props art_props, 
            art.finish art_finish, 
            art.price art_price
        from saleodrl a
            left join saleodr odr on a.odr = odr.id
            left join shopitem shopitem on a.shopitem = shopitem.id
            left join art art on a.art = art.id
        ]]>
    </sql>

    <sql id="objedit_sql"><![CDATA[
        select
            a.id, 
            a.priority, 
            a.flags, 
            a."state", 
            a.t0, 
            a.t1, 
            a."year", 
            a.props, 
            a.odr, 
            a.shopitem, 
            a.art, 
            a.batch, 
            a.qty, 
            a.price, 
            a.amount, 
            a.n1, 
            odr.id odr_id, 
            odr.uid odr_uid, 
            odr.gid odr_gid, 
            odr.mode odr_mode, 
            odr.acl odr_acl, 
            odr.priority odr_priority, 
            odr.flags odr_flags, 
            odr."state" odr_state, 
            odr.creation odr_creation, 
            odr.lastmod odr_lastmod, 
            odr."version" odr_version, 
            odr.t0 odr_t0, 
            odr.t1 odr_t1, 
            odr."year" odr_year, 
            odr.subject odr_subject, 
            odr.op odr_op, 
            odr.text odr_text, 
            odr.form odr_form, 
            odr.formargs odr_formargs, 
            odr.props odr_props, 
            odr.cat odr_cat, 
            odr.phase odr_phase, 
            odr.prev odr_prev, 
            odr.plan odr_plan, 
            odr.customer_org odr_customer_org, 
            odr.customer odr_customer, 
            odr."length" odr_length, 
            odr.sum_qty odr_sum_qty, 
            odr.sum_amount odr_sum_amount, 
            shopitem.id shopitem_id, 
            shopitem.label shopitem_label, 
            shopitem.description shopitem_description, 
            shopitem.priority shopitem_priority, 
            shopitem.flags shopitem_flags, 
            shopitem."state" shopitem_state, 
            shopitem.t0 shopitem_t0, 
            shopitem.t1 shopitem_t1, 
            shopitem."year" shopitem_year, 
            shopitem.creation shopitem_creation, 
            shopitem.lastmod shopitem_lastmod, 
            shopitem."version" shopitem_version, 
            shopitem.props shopitem_props, 
            shopitem.shop shopitem_shop, 
            shopitem.cat shopitem_cat, 
            shopitem.art shopitem_art, 
            shopitem.batch shopitem_batch, 
            shopitem.price shopitem_price, 
            shopitem.qty shopitem_qty, 
            art.id art_id, 
            art.sku art_sku, 
            art.barcode art_barcode, 
            art.rfid art_rfid, 
            art.uid art_uid, 
            art.gid art_gid, 
            art.mode art_mode, 
            art.acl art_acl, 
            art.label art_label, 
            art.description art_description, 
            art.priority art_priority, 
            art.flags art_flags, 
            art."state" art_state, 
            art.creation art_creation, 
            art.lastmod art_lastmod, 
            art."version" art_version, 
            art.model art_model, 
            art.proto art_proto, 
            art.cat art_cat, 
            art.phase art_phase, 
            art.uom art_uom, 
            art.props art_props, 
            art.finish art_finish, 
            art.price art_price
        from saleodrl a
            left join saleodr odr on a.odr = odr.id
            left join shopitem shopitem on a.shopitem = shopitem.id
            left join art art on a.art = art.id
        ]]>
    </sql>

    <sql id="filtconds">
        <if test="m.id != null">and a.id = #{m.id}</if>
        <if test="m.idRange!= null">
            <if test="m.idRange.hasStartIncl">and a.id >= #{m.idRange.start}</if>
            <if test="m.idRange.hasStartExcl">and a.id > #{m.idRange.start}</if>
            <if test="m.idRange.hasEndIncl">and a.id &lt;= #{m.idRange.end}</if>
            <if test="m.idRange.hasEndExcl">and a.id &lt; #{m.idRange.end}</if>
        </if>
        <if test="m.priority != null">and a.priority = #{m.priority}</if>
        <if test="m.priorityRange!= null">
            <if test="m.priorityRange.hasStartIncl">and a.priority >= #{m.priorityRange.start}</if>
            <if test="m.priorityRange.hasStartExcl">and a.priority > #{m.priorityRange.start}</if>
            <if test="m.priorityRange.hasEndIncl">and a.priority &lt;= #{m.priorityRange.end}</if>
            <if test="m.priorityRange.hasEndExcl">and a.priority &lt; #{m.priorityRange.end}</if>
        </if>
        <if test="m.flags != null">and a.flags = #{m.flags}</if>
        <if test="m.flagsRange!= null">
            <if test="m.flagsRange.hasStartIncl">and a.flags >= #{m.flagsRange.start}</if>
            <if test="m.flagsRange.hasStartExcl">and a.flags > #{m.flagsRange.start}</if>
            <if test="m.flagsRange.hasEndIncl">and a.flags &lt;= #{m.flagsRange.end}</if>
            <if test="m.flagsRange.hasEndExcl">and a.flags &lt; #{m.flagsRange.end}</if>
        </if>
        <if test="m.state != null">and a."state" = #{m.state}</if>
        <if test="m.stateRange!= null">
            <if test="m.stateRange.hasStartIncl">and a."state" >= #{m.stateRange.start}</if>
            <if test="m.stateRange.hasStartExcl">and a."state" > #{m.stateRange.start}</if>
            <if test="m.stateRange.hasEndIncl">and a."state" &lt;= #{m.stateRange.end}</if>
            <if test="m.stateRange.hasEndExcl">and a."state" &lt; #{m.stateRange.end}</if>
        </if>
        <if test="m.beginTime != null">and a.t0 = #{m.beginTime}</if>
        <if test="m.endTime != null">and a.t1 = #{m.endTime}</if>
        <if test="m.year != null">and a."year" = #{m.year}</if>
        <if test="m.yearRange!= null">
            <if test="m.yearRange.hasStartIncl">and a."year" >= #{m.yearRange.start}</if>
            <if test="m.yearRange.hasStartExcl">and a."year" > #{m.yearRange.start}</if>
            <if test="m.yearRange.hasEndIncl">and a."year" &lt;= #{m.yearRange.end}</if>
            <if test="m.yearRange.hasEndExcl">and a."year" &lt; #{m.yearRange.end}</if>
        </if>
        <if test="m.properties != null">and a.props = #{m.properties}</if>
        <if test="m.odrId != null">and a.odr = #{m.odrId}</if>
        <if test="m.odrIdRange!= null">
            <if test="m.odrIdRange.hasStartIncl">and a.odr >= #{m.odrIdRange.start}</if>
            <if test="m.odrIdRange.hasStartExcl">and a.odr > #{m.odrIdRange.start}</if>
            <if test="m.odrIdRange.hasEndIncl">and a.odr &lt;= #{m.odrIdRange.end}</if>
            <if test="m.odrIdRange.hasEndExcl">and a.odr &lt; #{m.odrIdRange.end}</if>
        </if>
        <if test="m.shopItemId != null">and a.shopitem = #{m.shopItemId}</if>
        <if test="m.shopItemIdRange!= null">
            <if test="m.shopItemIdRange.hasStartIncl">and a.shopitem >= #{m.shopItemIdRange.start}</if>
            <if test="m.shopItemIdRange.hasStartExcl">and a.shopitem > #{m.shopItemIdRange.start}</if>
            <if test="m.shopItemIdRange.hasEndIncl">and a.shopitem &lt;= #{m.shopItemIdRange.end}</if>
            <if test="m.shopItemIdRange.hasEndExcl">and a.shopitem &lt; #{m.shopItemIdRange.end}</if>
        </if>
        <if test="m.artifactId != null">and a.art = #{m.artifactId}</if>
        <if test="m.artifactIdRange!= null">
            <if test="m.artifactIdRange.hasStartIncl">and a.art >= #{m.artifactIdRange.start}</if>
            <if test="m.artifactIdRange.hasStartExcl">and a.art > #{m.artifactIdRange.start}</if>
            <if test="m.artifactIdRange.hasEndIncl">and a.art &lt;= #{m.artifactIdRange.end}</if>
            <if test="m.artifactIdRange.hasEndExcl">and a.art &lt; #{m.artifactIdRange.end}</if>
        </if>
        <if test="m.batch != null">and a.batch = #{m.batch}</if>
        <if test="m.quantity != null">and a.qty = #{m.quantity}</if>
        <if test="m.quantityRange!= null">
            <if test="m.quantityRange.hasStartIncl">and a.qty >= #{m.quantityRange.start}</if>
            <if test="m.quantityRange.hasStartExcl">and a.qty > #{m.quantityRange.start}</if>
            <if test="m.quantityRange.hasEndIncl">and a.qty &lt;= #{m.quantityRange.end}</if>
            <if test="m.quantityRange.hasEndExcl">and a.qty &lt; #{m.quantityRange.end}</if>
        </if>
        <if test="m.price != null">and a.price = #{m.price}</if>
        <if test="m.priceRange!= null">
            <if test="m.priceRange.hasStartIncl">and a.price >= #{m.priceRange.start}</if>
            <if test="m.priceRange.hasStartExcl">and a.price > #{m.priceRange.start}</if>
            <if test="m.priceRange.hasEndIncl">and a.price &lt;= #{m.priceRange.end}</if>
            <if test="m.priceRange.hasEndExcl">and a.price &lt; #{m.priceRange.end}</if>
        </if>
        <if test="m.amount != null">and a.amount = #{m.amount}</if>
        <if test="m.amountRange!= null">
            <if test="m.amountRange.hasStartIncl">and a.amount >= #{m.amountRange.start}</if>
            <if test="m.amountRange.hasStartExcl">and a.amount > #{m.amountRange.start}</if>
            <if test="m.amountRange.hasEndIncl">and a.amount &lt;= #{m.amountRange.end}</if>
            <if test="m.amountRange.hasEndExcl">and a.amount &lt; #{m.amountRange.end}</if>
        </if>
        <if test="m.n1 != null">and a.n1 = #{m.n1}</if>
        <if test="m.n1Range!= null">
            <if test="m.n1Range.hasStartIncl">and a.n1 >= #{m.n1Range.start}</if>
            <if test="m.n1Range.hasStartExcl">and a.n1 > #{m.n1Range.start}</if>
            <if test="m.n1Range.hasEndIncl">and a.n1 &lt;= #{m.n1Range.end}</if>
            <if test="m.n1Range.hasEndExcl">and a.n1 &lt; #{m.n1Range.end}</if>
        </if>
    </sql>

    <select id="all" resultMap="objlist_map">
        <include refid="objlist_sql" />
        <include refid="co.opts" />
    </select>

    <select id="filter" resultMap="objlist_map">
        <include refid="objlist_sql" />
        <where>
            <include refid="filtconds" />
        </where>
        <include refid="co.opts" />
    </select>

    <select id="select" resultMap="objlist_map">
        <include refid="objedit_sql" />
        <where>
            <if test="_parameter != null">a.id = #{id}</if>
        </where>
    </select>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id"><![CDATA[
        insert into saleodrl(
            priority,
            flags,
            "state",
            t0,
            t1,
            "year",
            props,
            odr,
            shopitem,
            art,
            batch,
            qty,
            price,
            amount,
            n1
        ) values(
            #{priority},
            #{flags},
            #{state},
            #{beginTime},
            #{endTime},
            #{year},
            #{properties.jsonStr}::jsonb,
            #{odrId},
            #{shopItemId},
            #{artifactId},
            #{batch.jsonStr}::jsonb,
            #{quantity},
            #{price},
            #{amount},
            #{n1}
        );
    ]]></insert>

    <update id="update">
        update saleodrl
        <set>
            priority = #{priority},
            flags = #{flags},
            "state" = #{state},
            t0 = #{beginTime},
            t1 = #{endTime},
            "year" = #{year},
            props = #{properties.jsonStr}::jsonb,
            odr = #{odrId},
            shopitem = #{shopItemId},
            art = #{artifactId},
            batch = #{batch.jsonStr}::jsonb,
            qty = #{quantity},
            price = #{price},
            amount = #{amount},
            n1 = #{n1},
        </set>
        <where>
            id = #{id}
        </where>
    </update>

    <delete id="delete">
        delete from saleodrl
        <where>
            id = #{id}
        </where>
    </delete>

    <select id="count" resultType="long">
        select count(*) "rows" from saleodrl
        <where>
            <if test="_parameter != null">
                <include refid="filtconds" />
            </if>
        </where>
    </select>

</mapper>
