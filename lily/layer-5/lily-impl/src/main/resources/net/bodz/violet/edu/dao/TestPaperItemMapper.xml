<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.bodz.violet.edu.dao.TestPaperItemMapper">

    <resultMap id="objlist_map" type="net.bodz.violet.edu.TestPaperItem">
        <id property="id" column="id" />
        <result property="priority" column="priority" />
        <result property="flags" column="flags" />
        <result property="state" column="state" />
        <result property="creationDate" column="creation" />
        <result property="lastModifiedDate" column="lastmod" />
        <result property="version" column="version" />
        <result property="properties.jsonStr" column="props" />
        <result property="score" column="score" />
        <result property="paperId" column="paper" />
        <result property="questionId" column="q" />
        <association property="question" columnPrefix="q_"
            javaType="net.bodz.violet.edu.TestQuestion" 
            resultMap="net.bodz.violet.edu.dao.TestQuestionMapper.objlist_map" />
        <association property="paper" columnPrefix="paper_"
            javaType="net.bodz.violet.edu.TestPaper" 
            resultMap="net.bodz.violet.edu.dao.TestPaperMapper.objlist_map" />
    </resultMap>

    <sql id="objlist_sql"><![CDATA[
        select
            a.id, 
            a.priority, 
            a.flags, 
            a."state", 
            a.creation, 
            a.lastmod, 
            a."version", 
            a.props, 
            a.paper, 
            a.q, 
            a.score, 
            q.id q_id, 
            q.uid q_uid, 
            q.gid q_gid, 
            q.mode q_mode, 
            q.acl q_acl, 
            q.priority q_priority, 
            q.flags q_flags, 
            q."state" q_state, 
            q.creation q_creation, 
            q.lastmod q_lastmod, 
            q."version" q_version, 
            q.subject q_subject, 
            q.op q_op, 
            q.text q_text, 
            q.form q_form, 
            q.formargs q_formargs, 
            q.course q_course, 
            q.props q_props, 
            q.nfav q_nfav, 
            q.nvote q_nvote, 
            q.nhate q_nhate, 
            q.pos q_pos, 
            q.answer q_answer, 
            paper.id paper_id, 
            paper.uid paper_uid, 
            paper.gid paper_gid, 
            paper.mode paper_mode, 
            paper.acl paper_acl, 
            paper.label paper_label, 
            paper.description paper_description, 
            paper.priority paper_priority, 
            paper.flags paper_flags, 
            paper."state" paper_state, 
            paper.creation paper_creation, 
            paper.lastmod paper_lastmod, 
            paper."version" paper_version, 
            paper.course paper_course, 
            paper.timeout paper_timeout, 
            paper.totalscore paper_totalscore
        from testpaperl a
            left join testq q on a.q = q.id
            left join testpaper paper on a.paper = paper.id
        ]]>
    </sql>

    <sql id="objedit_sql"><![CDATA[
        select
            a.id, 
            a.priority, 
            a.flags, 
            a."state", 
            a.creation, 
            a.lastmod, 
            a."version", 
            a.props, 
            a.paper, 
            a.q, 
            a.score, 
            q.id q_id, 
            q.uid q_uid, 
            q.gid q_gid, 
            q.mode q_mode, 
            q.acl q_acl, 
            q.priority q_priority, 
            q.flags q_flags, 
            q."state" q_state, 
            q.creation q_creation, 
            q.lastmod q_lastmod, 
            q."version" q_version, 
            q.subject q_subject, 
            q.op q_op, 
            q.text q_text, 
            q.form q_form, 
            q.formargs q_formargs, 
            q.course q_course, 
            q.props q_props, 
            q.nfav q_nfav, 
            q.nvote q_nvote, 
            q.nhate q_nhate, 
            q.pos q_pos, 
            q.answer q_answer, 
            paper.id paper_id, 
            paper.uid paper_uid, 
            paper.gid paper_gid, 
            paper.mode paper_mode, 
            paper.acl paper_acl, 
            paper.label paper_label, 
            paper.description paper_description, 
            paper.priority paper_priority, 
            paper.flags paper_flags, 
            paper."state" paper_state, 
            paper.creation paper_creation, 
            paper.lastmod paper_lastmod, 
            paper."version" paper_version, 
            paper.course paper_course, 
            paper.timeout paper_timeout, 
            paper.totalscore paper_totalscore
        from testpaperl a
            left join testq q on a.q = q.id
            left join testpaper paper on a.paper = paper.id
        ]]>
    </sql>

    <sql id="filtconds">
        <if test="m.id != null">and a.id = #{m.id}</if>
        <if test="m.idRange!= null">
            <if test="m.idRange.hasStartIncl">and a.id >= #{m.idRange.start}</if>
            <if test="m.idRange.hasStartExcl">and a.id > #{m.idRange.start}</if>
            <if test="m.idRange.hasEndIncl">and a.id &lt;= #{m.idRange.end}</if>
            <if test="m.idRange.hasEndExcl">and a.id &lt; #{m.idRange.end}</if>
        </if>
        <if test="m.priority != null">and a.priority = #{m.priority}</if>
        <if test="m.priorityRange!= null">
            <if test="m.priorityRange.hasStartIncl">and a.priority >= #{m.priorityRange.start}</if>
            <if test="m.priorityRange.hasStartExcl">and a.priority > #{m.priorityRange.start}</if>
            <if test="m.priorityRange.hasEndIncl">and a.priority &lt;= #{m.priorityRange.end}</if>
            <if test="m.priorityRange.hasEndExcl">and a.priority &lt; #{m.priorityRange.end}</if>
        </if>
        <if test="m.flags != null">and a.flags = #{m.flags}</if>
        <if test="m.flagsRange!= null">
            <if test="m.flagsRange.hasStartIncl">and a.flags >= #{m.flagsRange.start}</if>
            <if test="m.flagsRange.hasStartExcl">and a.flags > #{m.flagsRange.start}</if>
            <if test="m.flagsRange.hasEndIncl">and a.flags &lt;= #{m.flagsRange.end}</if>
            <if test="m.flagsRange.hasEndExcl">and a.flags &lt; #{m.flagsRange.end}</if>
        </if>
        <if test="m.state != null">and a."state" = #{m.state}</if>
        <if test="m.stateRange!= null">
            <if test="m.stateRange.hasStartIncl">and a."state" >= #{m.stateRange.start}</if>
            <if test="m.stateRange.hasStartExcl">and a."state" > #{m.stateRange.start}</if>
            <if test="m.stateRange.hasEndIncl">and a."state" &lt;= #{m.stateRange.end}</if>
            <if test="m.stateRange.hasEndExcl">and a."state" &lt; #{m.stateRange.end}</if>
        </if>
        <if test="m.creationDate != null">and a.creation = #{m.creationDate}</if>
        <if test="m.lastModifiedDate != null">and a.lastmod = #{m.lastModifiedDate}</if>
        <if test="m.version != null">and a."version" = #{m.version}</if>
        <if test="m.versionRange!= null">
            <if test="m.versionRange.hasStartIncl">and a."version" >= #{m.versionRange.start}</if>
            <if test="m.versionRange.hasStartExcl">and a."version" > #{m.versionRange.start}</if>
            <if test="m.versionRange.hasEndIncl">and a."version" &lt;= #{m.versionRange.end}</if>
            <if test="m.versionRange.hasEndExcl">and a."version" &lt; #{m.versionRange.end}</if>
        </if>
        <if test="m.properties != null">and a.props = #{m.properties}</if>
        <if test="m.paperId != null">and a.paper = #{m.paperId}</if>
        <if test="m.paperIdRange!= null">
            <if test="m.paperIdRange.hasStartIncl">and a.paper >= #{m.paperIdRange.start}</if>
            <if test="m.paperIdRange.hasStartExcl">and a.paper > #{m.paperIdRange.start}</if>
            <if test="m.paperIdRange.hasEndIncl">and a.paper &lt;= #{m.paperIdRange.end}</if>
            <if test="m.paperIdRange.hasEndExcl">and a.paper &lt; #{m.paperIdRange.end}</if>
        </if>
        <if test="m.questionId != null">and a.q = #{m.questionId}</if>
        <if test="m.questionIdRange!= null">
            <if test="m.questionIdRange.hasStartIncl">and a.q >= #{m.questionIdRange.start}</if>
            <if test="m.questionIdRange.hasStartExcl">and a.q > #{m.questionIdRange.start}</if>
            <if test="m.questionIdRange.hasEndIncl">and a.q &lt;= #{m.questionIdRange.end}</if>
            <if test="m.questionIdRange.hasEndExcl">and a.q &lt; #{m.questionIdRange.end}</if>
        </if>
        <if test="m.score != null">and a.score = #{m.score}</if>
        <if test="m.scoreRange!= null">
            <if test="m.scoreRange.hasStartIncl">and a.score >= #{m.scoreRange.start}</if>
            <if test="m.scoreRange.hasStartExcl">and a.score > #{m.scoreRange.start}</if>
            <if test="m.scoreRange.hasEndIncl">and a.score &lt;= #{m.scoreRange.end}</if>
            <if test="m.scoreRange.hasEndExcl">and a.score &lt; #{m.scoreRange.end}</if>
        </if>
    </sql>

    <select id="all" resultMap="objlist_map">
        <include refid="objlist_sql" />
        <include refid="co.opts" />
    </select>

    <select id="filter" resultMap="objlist_map">
        <include refid="objlist_sql" />
        <where>
            <include refid="filtconds" />
        </where>
        <include refid="co.opts" />
    </select>

    <select id="select" resultMap="objlist_map">
        <include refid="objedit_sql" />
        <where>
            <if test="_parameter != null">a.id = #{id}</if>
        </where>
    </select>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id"><![CDATA[
        insert into testpaperl(
            priority,
            flags,
            "state",
            creation,
            lastmod,
            "version",
            props,
            paper,
            q,
            score
        ) values(
            #{priority},
            #{flags},
            #{state},
            #{creationDate},
            #{lastModifiedDate},
            #{version},
            #{properties.jsonStr}::jsonb,
            #{paperId},
            #{questionId},
            #{score}
        );
    ]]></insert>

    <update id="update">
        update testpaperl
        <set>
            priority = #{priority},
            flags = #{flags},
            "state" = #{state},
            creation = #{creationDate},
            lastmod = #{lastModifiedDate},
            "version" = #{version},
            props = #{properties.jsonStr}::jsonb,
            paper = #{paperId},
            q = #{questionId},
            score = #{score},
        </set>
        <where>
            id = #{id}
        </where>
    </update>

    <delete id="delete">
        delete from testpaperl
        <where>
            id = #{id}
        </where>
    </delete>

    <select id="count" resultType="long">
        select count(*) "rows" from testpaperl
        <where>
            <if test="_parameter != null">
                <include refid="filtconds" />
            </if>
        </where>
    </select>

</mapper>
