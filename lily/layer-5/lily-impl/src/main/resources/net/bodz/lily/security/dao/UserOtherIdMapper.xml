<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.bodz.lily.security.dao.UserOtherIdMapper">

    <resultMap id="objlist_map" type="net.bodz.lily.security.UserOtherId">
        <id property="id" column="id" />
        <result property="label" column="label" />
        <result property="description" column="description" />
        <result property="priority" column="priority" />
        <result property="flags" column="flags" />
        <result property="state" column="state" />
        <result property="creationDate" column="creation" />
        <result property="lastModifiedDate" column="lastmod" />
        <result property="version" column="version" />
        <result property="beginTime" column="t0" />
        <result property="endTime" column="t1" />
        <result property="year" column="year" />
        <result property="properties.jsonStr" column="props" />
        <result property="otherId" column="oid" />
        <result property="auth.jsonStr" column="auth" />
        <result property="userId" column="user" />
        <result property="typeId" column="type" />
        <association property="type" columnPrefix="type_"
            javaType="net.bodz.lily.security.UserOtherIdType" 
            resultMap="net.bodz.lily.security.dao.UserOtherIdTypeMapper.objlist_map" />
        <association property="user" columnPrefix="user_"
            javaType="net.bodz.lily.security.User" 
            resultMap="net.bodz.lily.security.dao.UserMapper.objlist_map" />
    </resultMap>

    <sql id="objlist_sql"><![CDATA[
        select
            a.id, 
            a.label, 
            a.description, 
            a.priority, 
            a.flags, 
            a."state", 
            a.creation, 
            a.lastmod, 
            a."version", 
            a.t0, 
            a.t1, 
            a."year", 
            a.props, 
            a."user", 
            a."type", 
            a.oid, 
            a.auth, 
            "type".id type_id, 
            "type".label type_label, 
            "type".description type_description, 
            "type".priority type_priority, 
            "type".flags type_flags, 
            "type"."state" type_state, 
            "type".creation type_creation, 
            "type".lastmod type_lastmod, 
            "type"."version" type_version, 
            "type".dummy type_dummy, 
            "user".id user_id, 
            "user"."type" user_type, 
            "user"."name" user_name, 
            "user".label user_label, 
            "user".description user_description, 
            "user".priority user_priority, 
            "user".flags user_flags, 
            "user"."state" user_state, 
            "user".creation user_creation, 
            "user".lastmod user_lastmod, 
            "user"."version" user_version, 
            "user".props user_props, 
            "user".gid0 user_gid0, 
            "user".referer user_referer, 
            "user".person user_person
        from useroid a
            left join useroidtype "type" on a."type" = "type".id
            left join "user" "user" on a."user" = "user".id
        ]]>
    </sql>

    <sql id="objedit_sql"><![CDATA[
        select
            a.id, 
            a.label, 
            a.description, 
            a.priority, 
            a.flags, 
            a."state", 
            a.creation, 
            a.lastmod, 
            a."version", 
            a.t0, 
            a.t1, 
            a."year", 
            a.props, 
            a."user", 
            a."type", 
            a.oid, 
            a.auth, 
            "type".id type_id, 
            "type".label type_label, 
            "type".description type_description, 
            "type".priority type_priority, 
            "type".flags type_flags, 
            "type"."state" type_state, 
            "type".creation type_creation, 
            "type".lastmod type_lastmod, 
            "type"."version" type_version, 
            "type".dummy type_dummy, 
            "user".id user_id, 
            "user"."type" user_type, 
            "user"."name" user_name, 
            "user".label user_label, 
            "user".description user_description, 
            "user".priority user_priority, 
            "user".flags user_flags, 
            "user"."state" user_state, 
            "user".creation user_creation, 
            "user".lastmod user_lastmod, 
            "user"."version" user_version, 
            "user".props user_props, 
            "user".gid0 user_gid0, 
            "user".referer user_referer, 
            "user".person user_person
        from useroid a
            left join useroidtype "type" on a."type" = "type".id
            left join "user" "user" on a."user" = "user".id
        ]]>
    </sql>

    <sql id="filtconds">
        <if test="m.id != null">and a.id = #{m.id}</if>
        <if test="m.idRange!= null">
            <if test="m.idRange.hasStartIncl">and a.id >= #{m.idRange.start}</if>
            <if test="m.idRange.hasStartExcl">and a.id > #{m.idRange.start}</if>
            <if test="m.idRange.hasEndIncl">and a.id &lt;= #{m.idRange.end}</if>
            <if test="m.idRange.hasEndExcl">and a.id &lt; #{m.idRange.end}</if>
        </if>
        <if test="m.label != null">and a.label = #{m.label}</if>
        <if test="m.labelPattern != null">and a.label like '${m.labelPattern}'</if>
        <if test="m.description != null">and a.description = #{m.description}</if>
        <if test="m.descriptionPattern != null">and a.description like '${m.descriptionPattern}'</if>
        <if test="m.priority != null">and a.priority = #{m.priority}</if>
        <if test="m.priorityRange!= null">
            <if test="m.priorityRange.hasStartIncl">and a.priority >= #{m.priorityRange.start}</if>
            <if test="m.priorityRange.hasStartExcl">and a.priority > #{m.priorityRange.start}</if>
            <if test="m.priorityRange.hasEndIncl">and a.priority &lt;= #{m.priorityRange.end}</if>
            <if test="m.priorityRange.hasEndExcl">and a.priority &lt; #{m.priorityRange.end}</if>
        </if>
        <if test="m.flags != null">and a.flags = #{m.flags}</if>
        <if test="m.flagsRange!= null">
            <if test="m.flagsRange.hasStartIncl">and a.flags >= #{m.flagsRange.start}</if>
            <if test="m.flagsRange.hasStartExcl">and a.flags > #{m.flagsRange.start}</if>
            <if test="m.flagsRange.hasEndIncl">and a.flags &lt;= #{m.flagsRange.end}</if>
            <if test="m.flagsRange.hasEndExcl">and a.flags &lt; #{m.flagsRange.end}</if>
        </if>
        <if test="m.state != null">and a."state" = #{m.state}</if>
        <if test="m.stateRange!= null">
            <if test="m.stateRange.hasStartIncl">and a."state" >= #{m.stateRange.start}</if>
            <if test="m.stateRange.hasStartExcl">and a."state" > #{m.stateRange.start}</if>
            <if test="m.stateRange.hasEndIncl">and a."state" &lt;= #{m.stateRange.end}</if>
            <if test="m.stateRange.hasEndExcl">and a."state" &lt; #{m.stateRange.end}</if>
        </if>
        <if test="m.creationDate != null">and a.creation = #{m.creationDate}</if>
        <if test="m.lastModifiedDate != null">and a.lastmod = #{m.lastModifiedDate}</if>
        <if test="m.version != null">and a."version" = #{m.version}</if>
        <if test="m.versionRange!= null">
            <if test="m.versionRange.hasStartIncl">and a."version" >= #{m.versionRange.start}</if>
            <if test="m.versionRange.hasStartExcl">and a."version" > #{m.versionRange.start}</if>
            <if test="m.versionRange.hasEndIncl">and a."version" &lt;= #{m.versionRange.end}</if>
            <if test="m.versionRange.hasEndExcl">and a."version" &lt; #{m.versionRange.end}</if>
        </if>
        <if test="m.beginTime != null">and a.t0 = #{m.beginTime}</if>
        <if test="m.endTime != null">and a.t1 = #{m.endTime}</if>
        <if test="m.year != null">and a."year" = #{m.year}</if>
        <if test="m.yearRange!= null">
            <if test="m.yearRange.hasStartIncl">and a."year" >= #{m.yearRange.start}</if>
            <if test="m.yearRange.hasStartExcl">and a."year" > #{m.yearRange.start}</if>
            <if test="m.yearRange.hasEndIncl">and a."year" &lt;= #{m.yearRange.end}</if>
            <if test="m.yearRange.hasEndExcl">and a."year" &lt; #{m.yearRange.end}</if>
        </if>
        <if test="m.properties != null">and a.props = #{m.properties}</if>
        <if test="m.userId != null">and a."user" = #{m.userId}</if>
        <if test="m.userIdRange!= null">
            <if test="m.userIdRange.hasStartIncl">and a."user" >= #{m.userIdRange.start}</if>
            <if test="m.userIdRange.hasStartExcl">and a."user" > #{m.userIdRange.start}</if>
            <if test="m.userIdRange.hasEndIncl">and a."user" &lt;= #{m.userIdRange.end}</if>
            <if test="m.userIdRange.hasEndExcl">and a."user" &lt; #{m.userIdRange.end}</if>
        </if>
        <if test="m.typeId != null">and a."type" = #{m.typeId}</if>
        <if test="m.typeIdRange!= null">
            <if test="m.typeIdRange.hasStartIncl">and a."type" >= #{m.typeIdRange.start}</if>
            <if test="m.typeIdRange.hasStartExcl">and a."type" > #{m.typeIdRange.start}</if>
            <if test="m.typeIdRange.hasEndIncl">and a."type" &lt;= #{m.typeIdRange.end}</if>
            <if test="m.typeIdRange.hasEndExcl">and a."type" &lt; #{m.typeIdRange.end}</if>
        </if>
        <if test="m.otherId != null">and a.oid = #{m.otherId}</if>
        <if test="m.otherIdPattern != null">and a.oid like '${m.otherIdPattern}'</if>
        <if test="m.auth != null">and a.auth = #{m.auth}</if>
    </sql>

    <select id="all" resultMap="objlist_map">
        <include refid="objlist_sql" />
        <include refid="co.opts" />
    </select>

    <select id="filter" resultMap="objlist_map">
        <include refid="objlist_sql" />
        <where>
            <include refid="filtconds" />
        </where>
        <include refid="co.opts" />
    </select>

    <select id="select" resultMap="objlist_map">
        <include refid="objedit_sql" />
        <where>
            <if test="_parameter != null">a.id = #{id}</if>
        </where>
    </select>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id"><![CDATA[
        insert into useroid(
            label,
            description,
            priority,
            flags,
            "state",
            creation,
            lastmod,
            "version",
            t0,
            t1,
            "year",
            props,
            "user",
            "type",
            oid,
            auth
        ) values(
            #{label},
            #{description},
            #{priority},
            #{flags},
            #{state},
            #{creationDate},
            #{lastModifiedDate},
            #{version},
            #{beginTime},
            #{endTime},
            #{year},
            #{properties.jsonStr}::jsonb,
            #{userId},
            #{typeId},
            #{otherId},
            #{auth.jsonStr}::jsonb
        );
    ]]></insert>

    <update id="update">
        update useroid
        <set>
            label = #{label},
            description = #{description},
            priority = #{priority},
            flags = #{flags},
            "state" = #{state},
            creation = #{creationDate},
            lastmod = #{lastModifiedDate},
            "version" = #{version},
            t0 = #{beginTime},
            t1 = #{endTime},
            "year" = #{year},
            props = #{properties.jsonStr}::jsonb,
            "user" = #{userId},
            "type" = #{typeId},
            oid = #{otherId},
            auth = #{auth.jsonStr}::jsonb,
        </set>
        <where>
            id = #{id}
        </where>
    </update>

    <delete id="delete">
        delete from useroid
        <where>
            id = #{id}
        </where>
    </delete>

    <select id="count" resultType="long">
        select count(*) "rows" from useroid
        <where>
            <if test="_parameter != null">
                <include refid="filtconds" />
            </if>
        </where>
    </select>

</mapper>
