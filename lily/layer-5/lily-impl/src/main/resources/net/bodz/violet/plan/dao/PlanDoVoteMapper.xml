<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.bodz.violet.plan.dao.PlanDoVoteMapper">

    <resultMap id="objlist_map" type="net.bodz.violet.plan.PlanDoVote">
        <id property="id" column="id" />
        <result property="voteScore" column="votes" />
        <result property="parentId" column="parent" />
        <result property="userId" column="user" />
        <association property="user" columnPrefix="user_"
            javaType="net.bodz.lily.security.User" 
            resultMap="net.bodz.lily.security.dao.UserMapper.objlist_map" />
        <association property="parent" columnPrefix="parent_"
            javaType="net.bodz.violet.plan.PlanDo" 
            resultMap="net.bodz.violet.plan.dao.PlanDoMapper.objlist_map" />
    </resultMap>

    <sql id="objlist_sql"><![CDATA[
        select
            a.id, 
            a.parent, 
            a."user", 
            a.votes, 
            "user".id user_id, 
            "user"."type" user_type, 
            "user"."name" user_name, 
            "user".label user_label, 
            "user".description user_description, 
            "user".priority user_priority, 
            "user".flags user_flags, 
            "user"."state" user_state, 
            "user".creation user_creation, 
            "user".lastmod user_lastmod, 
            "user"."version" user_version, 
            "user".props user_props, 
            "user".gid0 user_gid0, 
            "user".referer user_referer, 
            "user".person user_person, 
            parent.id parent_id, 
            parent.uid parent_uid, 
            parent.gid parent_gid, 
            parent.mode parent_mode, 
            parent.acl parent_acl, 
            parent.priority parent_priority, 
            parent.flags parent_flags, 
            parent."state" parent_state, 
            parent.t0 parent_t0, 
            parent.t1 parent_t1, 
            parent."year" parent_year, 
            parent.subject parent_subject, 
            parent.op parent_op, 
            parent.text parent_text, 
            parent.form parent_form, 
            parent.formargs parent_formargs, 
            parent.creation parent_creation, 
            parent.lastmod parent_lastmod, 
            parent."version" parent_version, 
            parent.nvote parent_nvote, 
            parent.plan parent_plan, 
            parent.parent parent_parent, 
            parent.changes parent_changes
        from plando_vote a
            left join lily."user" "user" on a."user" = "user".id
            left join plando parent on a.parent = parent.id
        ]]>
    </sql>

    <sql id="objedit_sql"><![CDATA[
        select
            a.id, 
            a.parent, 
            a."user", 
            a.votes, 
            "user".id user_id, 
            "user"."type" user_type, 
            "user"."name" user_name, 
            "user".label user_label, 
            "user".description user_description, 
            "user".priority user_priority, 
            "user".flags user_flags, 
            "user"."state" user_state, 
            "user".creation user_creation, 
            "user".lastmod user_lastmod, 
            "user"."version" user_version, 
            "user".props user_props, 
            "user".gid0 user_gid0, 
            "user".referer user_referer, 
            "user".person user_person, 
            parent.id parent_id, 
            parent.uid parent_uid, 
            parent.gid parent_gid, 
            parent.mode parent_mode, 
            parent.acl parent_acl, 
            parent.priority parent_priority, 
            parent.flags parent_flags, 
            parent."state" parent_state, 
            parent.t0 parent_t0, 
            parent.t1 parent_t1, 
            parent."year" parent_year, 
            parent.subject parent_subject, 
            parent.op parent_op, 
            parent.text parent_text, 
            parent.form parent_form, 
            parent.formargs parent_formargs, 
            parent.creation parent_creation, 
            parent.lastmod parent_lastmod, 
            parent."version" parent_version, 
            parent.nvote parent_nvote, 
            parent.plan parent_plan, 
            parent.parent parent_parent, 
            parent.changes parent_changes
        from plando_vote a
            left join lily."user" "user" on a."user" = "user".id
            left join plando parent on a.parent = parent.id
        ]]>
    </sql>

    <sql id="filtconds">
        <if test="m.id != null">and a.id = #{m.id}</if>
        <if test="m.idRange!= null">
            <if test="m.idRange.hasStartIncl">and a.id >= #{m.idRange.start}</if>
            <if test="m.idRange.hasStartExcl">and a.id > #{m.idRange.start}</if>
            <if test="m.idRange.hasEndIncl">and a.id &lt;= #{m.idRange.end}</if>
            <if test="m.idRange.hasEndExcl">and a.id &lt; #{m.idRange.end}</if>
        </if>
        <if test="m.parentId != null">and a.parent = #{m.parentId}</if>
        <if test="m.parentIdRange!= null">
            <if test="m.parentIdRange.hasStartIncl">and a.parent >= #{m.parentIdRange.start}</if>
            <if test="m.parentIdRange.hasStartExcl">and a.parent > #{m.parentIdRange.start}</if>
            <if test="m.parentIdRange.hasEndIncl">and a.parent &lt;= #{m.parentIdRange.end}</if>
            <if test="m.parentIdRange.hasEndExcl">and a.parent &lt; #{m.parentIdRange.end}</if>
        </if>
        <if test="m.userId != null">and a."user" = #{m.userId}</if>
        <if test="m.userIdRange!= null">
            <if test="m.userIdRange.hasStartIncl">and a."user" >= #{m.userIdRange.start}</if>
            <if test="m.userIdRange.hasStartExcl">and a."user" > #{m.userIdRange.start}</if>
            <if test="m.userIdRange.hasEndIncl">and a."user" &lt;= #{m.userIdRange.end}</if>
            <if test="m.userIdRange.hasEndExcl">and a."user" &lt; #{m.userIdRange.end}</if>
        </if>
        <if test="m.voteScore != null">and a.votes = #{m.voteScore}</if>
        <if test="m.voteScoreRange!= null">
            <if test="m.voteScoreRange.hasStartIncl">and a.votes >= #{m.voteScoreRange.start}</if>
            <if test="m.voteScoreRange.hasStartExcl">and a.votes > #{m.voteScoreRange.start}</if>
            <if test="m.voteScoreRange.hasEndIncl">and a.votes &lt;= #{m.voteScoreRange.end}</if>
            <if test="m.voteScoreRange.hasEndExcl">and a.votes &lt; #{m.voteScoreRange.end}</if>
        </if>
    </sql>

    <select id="all" resultMap="objlist_map">
        <include refid="objlist_sql" />
        <include refid="co.opts" />
    </select>

    <select id="filter" resultMap="objlist_map">
        <include refid="objlist_sql" />
        <where>
            <include refid="filtconds" />
        </where>
        <include refid="co.opts" />
    </select>

    <select id="select" resultMap="objlist_map">
        <include refid="objedit_sql" />
        <where>
            <if test="_parameter != null">a.id = #{id}</if>
        </where>
    </select>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id"><![CDATA[
        insert into plando_vote(
            parent,
            "user",
            votes
        ) values(
            #{parentId},
            #{userId},
            #{voteScore}
        );
    ]]></insert>

    <update id="update">
        update plando_vote
        <set>
            parent = #{parentId},
            "user" = #{userId},
            votes = #{voteScore},
        </set>
        <where>
            id = #{id}
        </where>
    </update>

    <delete id="delete">
        delete from plando_vote
        <where>
            id = #{id}
        </where>
    </delete>

    <select id="count" resultType="long">
        select count(*) "rows" from plando_vote
        <where>
            <if test="_parameter != null">
                <include refid="filtconds" />
            </if>
        </where>
    </select>

</mapper>
