<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.bodz.lily.security.dao.UserMapper">

    <resultMap id="objlist_map" type="net.bodz.lily.security.User">
        <id property="id" column="id" />
        <result property="uniqName" column="name" />
        <result property="label" column="label" />
        <result property="description" column="description" />
        <result property="priority" column="priority" />
        <result property="flags" column="flags" />
        <result property="state" column="state" />
        <result property="creationDate" column="creation" />
        <result property="lastModifiedDate" column="lastmod" />
        <result property="version" column="version" />
        <result property="properties.jsonStr" column="props" />
        <result property="typeId" column="type" />
        <result property="primaryGroupId" column="gid0" />
        <result property="refererId" column="referer" />
        <result property="personId" column="person" />
        <association property="person" columnPrefix="person_"
            javaType="net.bodz.lily.contact.Person" 
            resultMap="net.bodz.lily.contact.dao.PersonMapper.objlist_map" />
        <association property="primaryGroup" columnPrefix="gid0_"
            javaType="net.bodz.lily.security.Group" 
            resultMap="net.bodz.lily.security.dao.GroupMapper.objlist_map" />
        <association property="referer" columnPrefix="referer_"
            javaType="net.bodz.lily.security.User" 
            resultMap="objlist_map" />
        <association property="type" columnPrefix="type_"
            javaType="net.bodz.lily.security.UserType" 
            resultMap="net.bodz.lily.security.dao.UserTypeMapper.objlist_map" />
    </resultMap>

    <sql id="objlist_sql"><![CDATA[
        select
            a.id, 
            a."type", 
            a."name", 
            a.label, 
            a.description, 
            a.priority, 
            a.flags, 
            a."state", 
            a.creation, 
            a.lastmod, 
            a."version", 
            a.props, 
            a.gid0, 
            a.referer, 
            a.person, 
            person.id person_id, 
            person.uid person_uid, 
            person.gid person_gid, 
            person.mode person_mode, 
            person.acl person_acl, 
            person.label person_label, 
            person.description person_description, 
            person.priority person_priority, 
            person.flags person_flags, 
            person."state" person_state, 
            person.creation person_creation, 
            person.lastmod person_lastmod, 
            person."version" person_version, 
            person.alias person_alias, 
            person.ctprops person_ctprops, 
            person.address1 person_address1, 
            person.address2 person_address2, 
            person."zone" person_zone, 
            person.tel person_tel, 
            person.telok person_telok, 
            person.email person_email, 
            person.emailok person_emailok, 
            person.props person_props, 
            person.cat person_cat, 
            person.birthday person_birthday, 
            person.locale person_locale, 
            person.timezone person_timezone, 
            person.nrole person_nrole, 
            person.customer person_customer, 
            person.supplier person_supplier, 
            person.employee person_employee, 
            person.subject person_subject, 
            person.nbank person_nbank, 
            person.gender person_gender, 
            person.homeland person_homeland, 
            person.passport person_passport, 
            person.ssn person_ssn, 
            person.dln person_dln, 
            gid0.id gid0_id, 
            gid0."name" gid0_name, 
            gid0."type" gid0_type, 
            gid0.label gid0_label, 
            gid0.description gid0_description, 
            gid0.priority gid0_priority, 
            gid0.flags gid0_flags, 
            gid0."state" gid0_state, 
            gid0.creation gid0_creation, 
            gid0.lastmod gid0_lastmod, 
            gid0."version" gid0_version, 
            gid0.props gid0_props, 
            gid0.parent gid0_parent, 
            referer.id referer_id, 
            referer."type" referer_type, 
            referer."name" referer_name, 
            referer.label referer_label, 
            referer.description referer_description, 
            referer.priority referer_priority, 
            referer.flags referer_flags, 
            referer."state" referer_state, 
            referer.creation referer_creation, 
            referer.lastmod referer_lastmod, 
            referer."version" referer_version, 
            referer.props referer_props, 
            referer.gid0 referer_gid0, 
            referer.referer referer_referer, 
            referer.person referer_person, 
            "type".id type_id, 
            "type"."name" type_name, 
            "type".label type_label, 
            "type".description type_description, 
            "type".priority type_priority, 
            "type".flags type_flags, 
            "type"."state" type_state, 
            "type".creation type_creation, 
            "type".lastmod type_lastmod, 
            "type"."version" type_version, 
            "type".props type_props, 
            "type".dummy type_dummy
        from "user" a
            left join person person on a.person = person.id
            left join "group" gid0 on a.gid0 = gid0.id
            left join "user" referer on a.referer = referer.id
            left join usertype "type" on a."type" = "type".id
        ]]>
    </sql>

    <sql id="objedit_sql"><![CDATA[
        select
            a.id, 
            a."type", 
            a."name", 
            a.label, 
            a.description, 
            a.priority, 
            a.flags, 
            a."state", 
            a.creation, 
            a.lastmod, 
            a."version", 
            a.props, 
            a.gid0, 
            a.referer, 
            a.person, 
            person.id person_id, 
            person.uid person_uid, 
            person.gid person_gid, 
            person.mode person_mode, 
            person.acl person_acl, 
            person.label person_label, 
            person.description person_description, 
            person.priority person_priority, 
            person.flags person_flags, 
            person."state" person_state, 
            person.creation person_creation, 
            person.lastmod person_lastmod, 
            person."version" person_version, 
            person.alias person_alias, 
            person.ctprops person_ctprops, 
            person.address1 person_address1, 
            person.address2 person_address2, 
            person."zone" person_zone, 
            person.tel person_tel, 
            person.telok person_telok, 
            person.email person_email, 
            person.emailok person_emailok, 
            person.props person_props, 
            person.cat person_cat, 
            person.birthday person_birthday, 
            person.locale person_locale, 
            person.timezone person_timezone, 
            person.nrole person_nrole, 
            person.customer person_customer, 
            person.supplier person_supplier, 
            person.employee person_employee, 
            person.subject person_subject, 
            person.nbank person_nbank, 
            person.gender person_gender, 
            person.homeland person_homeland, 
            person.passport person_passport, 
            person.ssn person_ssn, 
            person.dln person_dln, 
            gid0.id gid0_id, 
            gid0."name" gid0_name, 
            gid0."type" gid0_type, 
            gid0.label gid0_label, 
            gid0.description gid0_description, 
            gid0.priority gid0_priority, 
            gid0.flags gid0_flags, 
            gid0."state" gid0_state, 
            gid0.creation gid0_creation, 
            gid0.lastmod gid0_lastmod, 
            gid0."version" gid0_version, 
            gid0.props gid0_props, 
            gid0.parent gid0_parent, 
            referer.id referer_id, 
            referer."type" referer_type, 
            referer."name" referer_name, 
            referer.label referer_label, 
            referer.description referer_description, 
            referer.priority referer_priority, 
            referer.flags referer_flags, 
            referer."state" referer_state, 
            referer.creation referer_creation, 
            referer.lastmod referer_lastmod, 
            referer."version" referer_version, 
            referer.props referer_props, 
            referer.gid0 referer_gid0, 
            referer.referer referer_referer, 
            referer.person referer_person, 
            "type".id type_id, 
            "type"."name" type_name, 
            "type".label type_label, 
            "type".description type_description, 
            "type".priority type_priority, 
            "type".flags type_flags, 
            "type"."state" type_state, 
            "type".creation type_creation, 
            "type".lastmod type_lastmod, 
            "type"."version" type_version, 
            "type".props type_props, 
            "type".dummy type_dummy
        from "user" a
            left join person person on a.person = person.id
            left join "group" gid0 on a.gid0 = gid0.id
            left join "user" referer on a.referer = referer.id
            left join usertype "type" on a."type" = "type".id
        ]]>
    </sql>

    <sql id="filtconds">
        <if test="m.id != null">and a.id = #{m.id}</if>
        <if test="m.idRange!= null">
            <if test="m.idRange.hasStartIncl">and a.id >= #{m.idRange.start}</if>
            <if test="m.idRange.hasStartExcl">and a.id > #{m.idRange.start}</if>
            <if test="m.idRange.hasEndIncl">and a.id &lt;= #{m.idRange.end}</if>
            <if test="m.idRange.hasEndExcl">and a.id &lt; #{m.idRange.end}</if>
        </if>
        <if test="m.typeId != null">and a."type" = #{m.typeId}</if>
        <if test="m.typeIdRange!= null">
            <if test="m.typeIdRange.hasStartIncl">and a."type" >= #{m.typeIdRange.start}</if>
            <if test="m.typeIdRange.hasStartExcl">and a."type" > #{m.typeIdRange.start}</if>
            <if test="m.typeIdRange.hasEndIncl">and a."type" &lt;= #{m.typeIdRange.end}</if>
            <if test="m.typeIdRange.hasEndExcl">and a."type" &lt; #{m.typeIdRange.end}</if>
        </if>
        <if test="m.uniqName != null">and a."name" = #{m.uniqName}</if>
        <if test="m.uniqNamePattern != null">and a."name" like '${m.uniqNamePattern}'</if>
        <if test="m.label != null">and a.label = #{m.label}</if>
        <if test="m.labelPattern != null">and a.label like '${m.labelPattern}'</if>
        <if test="m.description != null">and a.description = #{m.description}</if>
        <if test="m.descriptionPattern != null">and a.description like '${m.descriptionPattern}'</if>
        <if test="m.priority != null">and a.priority = #{m.priority}</if>
        <if test="m.priorityRange!= null">
            <if test="m.priorityRange.hasStartIncl">and a.priority >= #{m.priorityRange.start}</if>
            <if test="m.priorityRange.hasStartExcl">and a.priority > #{m.priorityRange.start}</if>
            <if test="m.priorityRange.hasEndIncl">and a.priority &lt;= #{m.priorityRange.end}</if>
            <if test="m.priorityRange.hasEndExcl">and a.priority &lt; #{m.priorityRange.end}</if>
        </if>
        <if test="m.flags != null">and a.flags = #{m.flags}</if>
        <if test="m.flagsRange!= null">
            <if test="m.flagsRange.hasStartIncl">and a.flags >= #{m.flagsRange.start}</if>
            <if test="m.flagsRange.hasStartExcl">and a.flags > #{m.flagsRange.start}</if>
            <if test="m.flagsRange.hasEndIncl">and a.flags &lt;= #{m.flagsRange.end}</if>
            <if test="m.flagsRange.hasEndExcl">and a.flags &lt; #{m.flagsRange.end}</if>
        </if>
        <if test="m.state != null">and a."state" = #{m.state}</if>
        <if test="m.stateRange!= null">
            <if test="m.stateRange.hasStartIncl">and a."state" >= #{m.stateRange.start}</if>
            <if test="m.stateRange.hasStartExcl">and a."state" > #{m.stateRange.start}</if>
            <if test="m.stateRange.hasEndIncl">and a."state" &lt;= #{m.stateRange.end}</if>
            <if test="m.stateRange.hasEndExcl">and a."state" &lt; #{m.stateRange.end}</if>
        </if>
        <if test="m.creationDate != null">and a.creation = #{m.creationDate}</if>
        <if test="m.lastModifiedDate != null">and a.lastmod = #{m.lastModifiedDate}</if>
        <if test="m.version != null">and a."version" = #{m.version}</if>
        <if test="m.versionRange!= null">
            <if test="m.versionRange.hasStartIncl">and a."version" >= #{m.versionRange.start}</if>
            <if test="m.versionRange.hasStartExcl">and a."version" > #{m.versionRange.start}</if>
            <if test="m.versionRange.hasEndIncl">and a."version" &lt;= #{m.versionRange.end}</if>
            <if test="m.versionRange.hasEndExcl">and a."version" &lt; #{m.versionRange.end}</if>
        </if>
        <if test="m.properties != null">and a.props = #{m.properties}</if>
        <if test="m.primaryGroupId != null">and a.gid0 = #{m.primaryGroupId}</if>
        <if test="m.primaryGroupIdRange!= null">
            <if test="m.primaryGroupIdRange.hasStartIncl">and a.gid0 >= #{m.primaryGroupIdRange.start}</if>
            <if test="m.primaryGroupIdRange.hasStartExcl">and a.gid0 > #{m.primaryGroupIdRange.start}</if>
            <if test="m.primaryGroupIdRange.hasEndIncl">and a.gid0 &lt;= #{m.primaryGroupIdRange.end}</if>
            <if test="m.primaryGroupIdRange.hasEndExcl">and a.gid0 &lt; #{m.primaryGroupIdRange.end}</if>
        </if>
        <if test="m.refererId != null">and a.referer = #{m.refererId}</if>
        <if test="m.refererIdRange!= null">
            <if test="m.refererIdRange.hasStartIncl">and a.referer >= #{m.refererIdRange.start}</if>
            <if test="m.refererIdRange.hasStartExcl">and a.referer > #{m.refererIdRange.start}</if>
            <if test="m.refererIdRange.hasEndIncl">and a.referer &lt;= #{m.refererIdRange.end}</if>
            <if test="m.refererIdRange.hasEndExcl">and a.referer &lt; #{m.refererIdRange.end}</if>
        </if>
        <if test="m.personId != null">and a.person = #{m.personId}</if>
        <if test="m.personIdRange!= null">
            <if test="m.personIdRange.hasStartIncl">and a.person >= #{m.personIdRange.start}</if>
            <if test="m.personIdRange.hasStartExcl">and a.person > #{m.personIdRange.start}</if>
            <if test="m.personIdRange.hasEndIncl">and a.person &lt;= #{m.personIdRange.end}</if>
            <if test="m.personIdRange.hasEndExcl">and a.person &lt; #{m.personIdRange.end}</if>
        </if>
    </sql>

    <select id="all" resultMap="objlist_map">
        <include refid="objlist_sql" />
        <include refid="co.opts" />
    </select>

    <select id="filter" resultMap="objlist_map">
        <include refid="objlist_sql" />
        <where>
            <include refid="filtconds" />
        </where>
        <include refid="co.opts" />
    </select>

    <select id="select" resultMap="objlist_map">
        <include refid="objedit_sql" />
        <where>
            <if test="_parameter != null">a.id = #{id}</if>
        </where>
    </select>

    <select id="selectByName" parameterType="String" resultMap="objlist_map">
        <include refid="objedit_sql" />
        <where>
            <if test="_parameter != null">a.name = #{name}</if>
        </where>
    </select>

    <select id="selectByOtherId" resultMap="objlist_map">
        <include refid="objedit_sql" />
            left join useroid o on a.id=o."user"
        <where>
            and o.type = #{type.id}
            and o.oid = #{oid}
            <!-- and o.state = VALIDATED -->
        </where>
    </select>

    <select id="selectByOtherId2" resultMap="objlist_map">
        <include refid="objedit_sql" />
            left join useroid o on a.id=o."user"
        <where>
            and o.type = #{typeId}
            and o.oid = #{oid}
            <!-- and o.state = VALIDATED -->
        </where>
    </select>

    <select id="selectByPhoneNumber" resultMap="objlist_map">
        <include refid="objedit_sql" />
            left join useroid o on a.id=o."user"
        <where>
            and o.type = 1
            and o.oid = #{phone}
            <!-- and o.state = VALIDATED -->
        </where>
    </select>

    <select id="selectByEmail" resultMap="objlist_map">
        <include refid="objedit_sql" />
            left join useroid o on a.id=o."user"
        <where>
            and o.type = 2
            and o.oid = #{email}
            <!-- and o.state = VALIDATED -->
        </where>
    </select>

    <select id="findForLogin" resultMap="objlist_map">
        <include refid="objedit_sql" />
            left join usersec s on a.id=s."user"
        <where>
            <if test="name != null">and a.name = #{name}</if>
            <if test="password != null">and s.passwd = #{password}</if>
        </where>
    </select>

    <select id="forGroupId" resultMap="objlist_map">
        select
            u.*
        from group_user x
            left join "user" u on x."user" = u.id
        <where>
            x."group" = #{id}
        </where>
    </select>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id"><![CDATA[
        insert into "user"(
            "type",
            "name",
            label,
            description,
            priority,
            flags,
            "state",
            creation,
            lastmod,
            "version",
            props,
            gid0,
            referer,
            person
        ) values(
            #{typeId},
            #{uniqName},
            #{label},
            #{description},
            #{priority},
            #{flags},
            #{state},
            #{creationDate},
            #{lastModifiedDate},
            #{version},
            #{properties.jsonStr}::jsonb,
            #{primaryGroupId},
            #{refererId},
            #{personId}
        );
    ]]></insert>

    <update id="update">
        update "user"
        <set>
            "type" = #{typeId},
            "name" = #{uniqName},
            label = #{label},
            description = #{description},
            priority = #{priority},
            flags = #{flags},
            "state" = #{state},
            creation = #{creationDate},
            lastmod = #{lastModifiedDate},
            "version" = #{version},
            props = #{properties.jsonStr}::jsonb,
            gid0 = #{primaryGroupId},
            referer = #{refererId},
            person = #{personId},
        </set>
        <where>
            id = #{id}
        </where>
    </update>

    <delete id="delete">
        delete from "user"
        <where>
            id = #{id}
        </where>
    </delete>

    <select id="count" resultType="long">
        select count(*) "rows" from user
        <where>
            <if test="_parameter != null">
                <include refid="filtconds" />
            </if>
        </where>
    </select>

    <update id="delete_xrefs">
        alter table lily.article drop constraint article_op_fkey;
        alter table lily.article drop constraint article_uid_fkey;
        alter table lily.article_backref drop constraint article_backref_uid_fkey;
        alter table lily.article_fav drop constraint article_fav_user_fkey;
        alter table lily.article_msg drop constraint article_msg_op_fkey;
        alter table lily.article_msg_vote drop constraint article_msg_vote_user_fkey;
        alter table lily.article_vote drop constraint article_vote_user_fkey;
        alter table lily.articlecat drop constraint articlecat_uid_fkey;
        alter table lily.articleparm drop constraint articleparm_uid_fkey;
        alter table lily.articletag drop constraint articletag_uid_fkey;
        alter table lily.extsite drop constraint extsite_uid_fkey;
        alter table lily.group_user drop constraint group_user_user_fkey;
        alter table lily.org drop constraint org_uid_fkey;
        alter table lily.orgunit drop constraint orgunit_uid_fkey;
        alter table lily.partycat drop constraint partycat_uid_fkey;
        alter table lily.person drop constraint person_uid_fkey;
        alter table lily.policy_user drop constraint policy_user_user_fkey;
        alter table lily.post drop constraint post_op_fkey;
        alter table lily.post drop constraint post_uid_fkey;
        alter table lily.post_backref drop constraint post_backref_uid_fkey;
        alter table lily.post_fav drop constraint post_fav_user_fkey;
        alter table lily.post_msg drop constraint post_msg_op_fkey;
        alter table lily.post_msg_vote drop constraint post_msg_vote_user_fkey;
        alter table lily.post_vote drop constraint post_vote_user_fkey;
        alter table lily.postcat drop constraint postcat_uid_fkey;
        alter table lily.postparm drop constraint postparm_uid_fkey;
        alter table lily.posttag drop constraint posttag_uid_fkey;
        alter table lily."user" drop constraint user_referer_fkey;
        alter table lily.user_badge drop constraint user_badge_user_fkey;
        alter table lily.user_run drop constraint user_run_user_fkey;
        alter table lily.useradd drop constraint useradd_whom_fkey;
        alter table lily.useroid drop constraint useroid_user_fkey;
        alter table lily.usersec drop constraint usersec_user_fkey;
        alter table lily.vapp drop constraint vapp_uid_fkey;
        alter table lily.vappcat drop constraint vappcat_uid_fkey;
        alter table lily.vappreq drop constraint vappreq_op_fkey;
        alter table lily.vappreq drop constraint vappreq_uid_fkey;
        alter table lily."zone" drop constraint zone_uid_fkey;
        alter table lily.zonecat drop constraint zonecat_uid_fkey;
        alter table violet.art drop constraint art_uid_fkey;
        alter table violet.art_backref drop constraint art_backref_uid_fkey;
        alter table violet.art_doc drop constraint art_doc_uid_fkey;
        alter table violet.art_doc drop constraint art_doc_op_fkey;
        alter table violet.art_fav drop constraint art_fav_user_fkey;
        alter table violet.art_price drop constraint art_price_uid_fkey;
        alter table violet.art_vote drop constraint art_vote_user_fkey;
        alter table violet.artcat drop constraint artcat_uid_fkey;
        alter table violet.artmodel drop constraint artmodel_uid_fkey;
        alter table violet.artparm drop constraint artparm_uid_fkey;
        alter table violet.artphase drop constraint artphase_uid_fkey;
        alter table violet.arttag drop constraint arttag_uid_fkey;
        alter table violet.asset drop constraint asset_uid_fkey;
        alter table violet.asset drop constraint asset_o_user_fkey;
        alter table violet.asset_group drop constraint asset_group_uid_fkey;
        alter table violet.asset_org drop constraint asset_org_uid_fkey;
        alter table violet.asset_ou drop constraint asset_ou_uid_fkey;
        alter table violet.asset_person drop constraint asset_person_uid_fkey;
        alter table violet.asset_user drop constraint asset_user_owner_fkey;
        alter table violet.asset_user drop constraint asset_user_uid_fkey;
        alter table violet.cartitem drop constraint cartitem_uid_fkey;
        alter table violet.course drop constraint course_uid_fkey;
        alter table violet.course_fav drop constraint course_fav_user_fkey;
        alter table violet.coursecat drop constraint coursecat_uid_fkey;
        alter table violet.coursekit drop constraint coursekit_uid_fkey;
        alter table violet.coursekit_fav drop constraint coursekit_fav_user_fkey;
        alter table violet.coursekitcat drop constraint coursekitcat_uid_fkey;
        alter table violet.coursekittag drop constraint coursekittag_uid_fkey;
        alter table violet.coursetag drop constraint coursetag_uid_fkey;
        alter table violet.diary drop constraint diary_op_fkey;
        alter table violet.diary drop constraint diary_uid_fkey;
        alter table violet.diary_party drop constraint diary_party_user_fkey;
        alter table violet.diary_vote drop constraint diary_vote_user_fkey;
        alter table violet.diarycat drop constraint diarycat_uid_fkey;
        alter table violet.diaryparm drop constraint diaryparm_uid_fkey;
        alter table violet.diaryphase drop constraint diaryphase_uid_fkey;
        alter table violet.diaryrev drop constraint diaryrev_op_fkey;
        alter table violet.diaryrev_vote drop constraint diaryrev_vote_user_fkey;
        alter table violet.diarytag drop constraint diarytag_uid_fkey;
        alter table violet.fabfn drop constraint fabfn_uid_fkey;
        alter table violet.fabodr drop constraint fabodr_uid_fkey;
        alter table violet.fabodr drop constraint fabodr_op_fkey;
        alter table violet.fabproc drop constraint fabproc_uid_fkey;
        alter table violet.fabstdproc drop constraint fabstdproc_uid_fkey;
        alter table violet.fabstdtest drop constraint fabstdtest_uid_fkey;
        alter table violet.fabstdtestcat drop constraint fabstdtestcat_uid_fkey;
        alter table violet.fabstdtester drop constraint fabstdtester_uid_fkey;
        alter table violet.fabtask drop constraint fabtask_uid_fkey;
        alter table violet.fabtrack drop constraint fabtrack_uid_fkey;
        alter table violet.issue drop constraint issue_uid_fkey;
        alter table violet.issue drop constraint issue_op_fkey;
        alter table violet.issue_fav drop constraint issue_fav_user_fkey;
        alter table violet.issue_vote drop constraint issue_vote_user_fkey;
        alter table violet.issuecat drop constraint issuecat_uid_fkey;
        alter table violet.issuel drop constraint issuel_op_fkey;
        alter table violet.issuel drop constraint issuel_uid_fkey;
        alter table violet.issuel_vote drop constraint issuel_vote_user_fkey;
        alter table violet.issueparm drop constraint issueparm_uid_fkey;
        alter table violet.issuephase drop constraint issuephase_uid_fkey;
        alter table violet.issuetag drop constraint issuetag_uid_fkey;
        alter table violet.offstorel drop constraint offstorel_uid_fkey;
        alter table violet.plan drop constraint plan_uid_fkey;
        alter table violet.plan drop constraint plan_op_fkey;
        alter table violet.plan_fav drop constraint plan_fav_user_fkey;
        alter table violet.plan_vote drop constraint plan_vote_user_fkey;
        alter table violet.plancat drop constraint plancat_uid_fkey;
        alter table violet.plando drop constraint plando_op_fkey;
        alter table violet.plando drop constraint plando_uid_fkey;
        alter table violet.plando_vote drop constraint plando_vote_user_fkey;
        alter table violet.plandoparm drop constraint plandoparm_uid_fkey;
        alter table violet.plandotag drop constraint plandotag_uid_fkey;
        alter table violet.planparm drop constraint planparm_uid_fkey;
        alter table violet.planphase drop constraint planphase_uid_fkey;
        alter table violet.plantag drop constraint plantag_uid_fkey;
        alter table violet.region drop constraint region_uid_fkey;
        alter table violet.regioncat drop constraint regioncat_uid_fkey;
        alter table violet.regiontag drop constraint regiontag_uid_fkey;
        alter table violet.salecat drop constraint salecat_uid_fkey;
        alter table violet.saleodr drop constraint saleodr_uid_fkey;
        alter table violet.saleodr drop constraint saleodr_op_fkey;
        alter table violet.salephase drop constraint salephase_uid_fkey;
        alter table violet.shop drop constraint shop_uid_fkey;
        alter table violet.shop_fav drop constraint shop_fav_user_fkey;
        alter table violet.shopcat drop constraint shopcat_uid_fkey;
        alter table violet.shopitem_fav drop constraint shopitem_fav_user_fkey;
        alter table violet.shopitemcat drop constraint shopitemcat_uid_fkey;
        alter table violet.shoptag drop constraint shoptag_uid_fkey;
        alter table violet.storecat drop constraint storecat_uid_fkey;
        alter table violet.storel drop constraint storel_uid_fkey;
        alter table violet.storeodr drop constraint storeodr_uid_fkey;
        alter table violet.storeodr drop constraint storeodr_op_fkey;
        alter table violet.storephase drop constraint storephase_uid_fkey;
        alter table violet.testapply drop constraint testapply_uid_fkey;
        alter table violet.testpaper drop constraint testpaper_uid_fkey;
        alter table violet.testq drop constraint testq_op_fkey;
        alter table violet.testq drop constraint testq_uid_fkey;
        alter table violet.testq_fav drop constraint testq_fav_user_fkey;
        alter table violet.testq_msg drop constraint testq_msg_op_fkey;
        alter table violet.testq_msg_vote drop constraint testq_msg_vote_user_fkey;
        alter table violet.testq_vote drop constraint testq_vote_user_fkey;
        alter table violet.testqtag drop constraint testqtag_uid_fkey;
        alter table violet.trancat drop constraint trancat_uid_fkey;
        alter table violet.tranodr drop constraint tranodr_op_fkey;
        alter table violet.tranodr drop constraint tranodr_uid_fkey;
        alter table violet.tranphase drop constraint tranphase_uid_fkey;
    </update>

    <update id="create_xrefs">
        alter table lily.article
            add constraint article_op_fkey foreign key (op)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table lily.article
            add constraint article_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table lily.article_backref
            add constraint article_backref_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table lily.article_fav
            add constraint article_fav_user_fkey foreign key ("user")
            references lily."user" (id)
            on update cascade
            on delete cascade
            ;
        alter table lily.article_msg
            add constraint article_msg_op_fkey foreign key (op)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table lily.article_msg_vote
            add constraint article_msg_vote_user_fkey foreign key ("user")
            references lily."user" (id)
            on update cascade
            on delete cascade
            ;
        alter table lily.article_vote
            add constraint article_vote_user_fkey foreign key ("user")
            references lily."user" (id)
            on update cascade
            on delete cascade
            ;
        alter table lily.articlecat
            add constraint articlecat_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table lily.articleparm
            add constraint articleparm_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table lily.articletag
            add constraint articletag_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table lily.extsite
            add constraint extsite_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table lily.group_user
            add constraint group_user_user_fkey foreign key ("user")
            references lily."user" (id)
            on update cascade
            on delete cascade
            ;
        alter table lily.org
            add constraint org_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table lily.orgunit
            add constraint orgunit_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table lily.partycat
            add constraint partycat_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table lily.person
            add constraint person_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table lily.policy_user
            add constraint policy_user_user_fkey foreign key ("user")
            references lily."user" (id)
            on update cascade
            on delete cascade
            ;
        alter table lily.post
            add constraint post_op_fkey foreign key (op)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table lily.post
            add constraint post_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table lily.post_backref
            add constraint post_backref_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table lily.post_fav
            add constraint post_fav_user_fkey foreign key ("user")
            references lily."user" (id)
            on update cascade
            on delete cascade
            ;
        alter table lily.post_msg
            add constraint post_msg_op_fkey foreign key (op)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table lily.post_msg_vote
            add constraint post_msg_vote_user_fkey foreign key ("user")
            references lily."user" (id)
            on update cascade
            on delete cascade
            ;
        alter table lily.post_vote
            add constraint post_vote_user_fkey foreign key ("user")
            references lily."user" (id)
            on update cascade
            on delete cascade
            ;
        alter table lily.postcat
            add constraint postcat_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table lily.postparm
            add constraint postparm_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table lily.posttag
            add constraint posttag_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table lily."user"
            add constraint user_referer_fkey foreign key (referer)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table lily.user_badge
            add constraint user_badge_user_fkey foreign key ("user")
            references lily."user" (id)
            on update cascade
            on delete cascade
            ;
        alter table lily.user_run
            add constraint user_run_user_fkey foreign key ("user")
            references lily."user" (id)
            on update cascade
            on delete cascade
            ;
        alter table lily.useradd
            add constraint useradd_whom_fkey foreign key (whom)
            references lily."user" (id)
            on update cascade
            on delete cascade
            ;
        alter table lily.useroid
            add constraint useroid_user_fkey foreign key ("user")
            references lily."user" (id)
            on update cascade
            on delete cascade
            ;
        alter table lily.usersec
            add constraint usersec_user_fkey foreign key ("user")
            references lily."user" (id)
            on update cascade
            on delete cascade
            ;
        alter table lily.vapp
            add constraint vapp_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table lily.vappcat
            add constraint vappcat_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table lily.vappreq
            add constraint vappreq_op_fkey foreign key (op)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table lily.vappreq
            add constraint vappreq_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table lily."zone"
            add constraint zone_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table lily.zonecat
            add constraint zonecat_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.art
            add constraint art_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.art_backref
            add constraint art_backref_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.art_doc
            add constraint art_doc_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.art_doc
            add constraint art_doc_op_fkey foreign key (op)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.art_fav
            add constraint art_fav_user_fkey foreign key ("user")
            references lily."user" (id)
            on update cascade
            on delete cascade
            ;
        alter table violet.art_price
            add constraint art_price_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.art_vote
            add constraint art_vote_user_fkey foreign key ("user")
            references lily."user" (id)
            on update cascade
            on delete cascade
            ;
        alter table violet.artcat
            add constraint artcat_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.artmodel
            add constraint artmodel_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.artparm
            add constraint artparm_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.artphase
            add constraint artphase_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.arttag
            add constraint arttag_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.asset
            add constraint asset_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.asset
            add constraint asset_o_user_fkey foreign key (o_user)
            references lily."user" (id)
            on update cascade
            ;
        alter table violet.asset_group
            add constraint asset_group_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.asset_org
            add constraint asset_org_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.asset_ou
            add constraint asset_ou_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.asset_person
            add constraint asset_person_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.asset_user
            add constraint asset_user_owner_fkey foreign key (owner)
            references lily."user" (id)
            on update cascade
            on delete cascade
            ;
        alter table violet.asset_user
            add constraint asset_user_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.cartitem
            add constraint cartitem_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.course
            add constraint course_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.course_fav
            add constraint course_fav_user_fkey foreign key ("user")
            references lily."user" (id)
            on update cascade
            on delete cascade
            ;
        alter table violet.coursecat
            add constraint coursecat_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.coursekit
            add constraint coursekit_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.coursekit_fav
            add constraint coursekit_fav_user_fkey foreign key ("user")
            references lily."user" (id)
            on update cascade
            on delete cascade
            ;
        alter table violet.coursekitcat
            add constraint coursekitcat_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.coursekittag
            add constraint coursekittag_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.coursetag
            add constraint coursetag_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.diary
            add constraint diary_op_fkey foreign key (op)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.diary
            add constraint diary_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.diary_party
            add constraint diary_party_user_fkey foreign key ("user")
            references lily."user" (id)
            on update cascade
            ;
        alter table violet.diary_vote
            add constraint diary_vote_user_fkey foreign key ("user")
            references lily."user" (id)
            on update cascade
            on delete cascade
            ;
        alter table violet.diarycat
            add constraint diarycat_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.diaryparm
            add constraint diaryparm_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.diaryphase
            add constraint diaryphase_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.diaryrev
            add constraint diaryrev_op_fkey foreign key (op)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.diaryrev_vote
            add constraint diaryrev_vote_user_fkey foreign key ("user")
            references lily."user" (id)
            on update cascade
            on delete cascade
            ;
        alter table violet.diarytag
            add constraint diarytag_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.fabfn
            add constraint fabfn_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.fabodr
            add constraint fabodr_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.fabodr
            add constraint fabodr_op_fkey foreign key (op)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.fabproc
            add constraint fabproc_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.fabstdproc
            add constraint fabstdproc_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.fabstdtest
            add constraint fabstdtest_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.fabstdtestcat
            add constraint fabstdtestcat_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.fabstdtester
            add constraint fabstdtester_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.fabtask
            add constraint fabtask_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.fabtrack
            add constraint fabtrack_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.issue
            add constraint issue_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.issue
            add constraint issue_op_fkey foreign key (op)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.issue_fav
            add constraint issue_fav_user_fkey foreign key ("user")
            references lily."user" (id)
            on update cascade
            on delete cascade
            ;
        alter table violet.issue_vote
            add constraint issue_vote_user_fkey foreign key ("user")
            references lily."user" (id)
            on update cascade
            on delete cascade
            ;
        alter table violet.issuecat
            add constraint issuecat_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.issuel
            add constraint issuel_op_fkey foreign key (op)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.issuel
            add constraint issuel_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.issuel_vote
            add constraint issuel_vote_user_fkey foreign key ("user")
            references lily."user" (id)
            on update cascade
            on delete cascade
            ;
        alter table violet.issueparm
            add constraint issueparm_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.issuephase
            add constraint issuephase_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.issuetag
            add constraint issuetag_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.offstorel
            add constraint offstorel_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.plan
            add constraint plan_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.plan
            add constraint plan_op_fkey foreign key (op)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.plan_fav
            add constraint plan_fav_user_fkey foreign key ("user")
            references lily."user" (id)
            on update cascade
            on delete cascade
            ;
        alter table violet.plan_vote
            add constraint plan_vote_user_fkey foreign key ("user")
            references lily."user" (id)
            on update cascade
            on delete cascade
            ;
        alter table violet.plancat
            add constraint plancat_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.plando
            add constraint plando_op_fkey foreign key (op)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.plando
            add constraint plando_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.plando_vote
            add constraint plando_vote_user_fkey foreign key ("user")
            references lily."user" (id)
            on update cascade
            on delete cascade
            ;
        alter table violet.plandoparm
            add constraint plandoparm_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.plandotag
            add constraint plandotag_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.planparm
            add constraint planparm_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.planphase
            add constraint planphase_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.plantag
            add constraint plantag_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.region
            add constraint region_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.regioncat
            add constraint regioncat_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.regiontag
            add constraint regiontag_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.salecat
            add constraint salecat_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.saleodr
            add constraint saleodr_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.saleodr
            add constraint saleodr_op_fkey foreign key (op)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.salephase
            add constraint salephase_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.shop
            add constraint shop_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.shop_fav
            add constraint shop_fav_user_fkey foreign key ("user")
            references lily."user" (id)
            on update cascade
            on delete cascade
            ;
        alter table violet.shopcat
            add constraint shopcat_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.shopitem_fav
            add constraint shopitem_fav_user_fkey foreign key ("user")
            references lily."user" (id)
            on update cascade
            on delete cascade
            ;
        alter table violet.shopitemcat
            add constraint shopitemcat_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.shoptag
            add constraint shoptag_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.storecat
            add constraint storecat_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.storel
            add constraint storel_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.storeodr
            add constraint storeodr_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.storeodr
            add constraint storeodr_op_fkey foreign key (op)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.storephase
            add constraint storephase_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.testapply
            add constraint testapply_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.testpaper
            add constraint testpaper_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.testq
            add constraint testq_op_fkey foreign key (op)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.testq
            add constraint testq_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.testq_fav
            add constraint testq_fav_user_fkey foreign key ("user")
            references lily."user" (id)
            on update cascade
            on delete cascade
            ;
        alter table violet.testq_msg
            add constraint testq_msg_op_fkey foreign key (op)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.testq_msg_vote
            add constraint testq_msg_vote_user_fkey foreign key ("user")
            references lily."user" (id)
            on update cascade
            on delete cascade
            ;
        alter table violet.testq_vote
            add constraint testq_vote_user_fkey foreign key ("user")
            references lily."user" (id)
            on update cascade
            on delete cascade
            ;
        alter table violet.testqtag
            add constraint testqtag_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.trancat
            add constraint trancat_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.tranodr
            add constraint tranodr_op_fkey foreign key (op)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.tranodr
            add constraint tranodr_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
        alter table violet.tranphase
            add constraint tranphase_uid_fkey foreign key (uid)
            references lily."user" (id)
            on update cascade
            on delete set null
            ;
    </update>

</mapper>
