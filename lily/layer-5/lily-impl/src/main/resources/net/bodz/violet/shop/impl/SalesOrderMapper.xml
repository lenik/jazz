<?xml version="1.0" encoding="UTF-8" ?> 
<!DOCTYPE mapper 
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.bodz.violet.shop.impl.SalesOrderMapper">

    <resultMap id="objlist_map" type="net.bodz.violet.shop.SalesOrder" extends="message.MAP_ALL">
        <result property="itemCount" column="size" />
        <result property="quantity" column="qty" />
        <result property="total" column="total" />
        <association property="category" javaType="net.bodz.violet.shop.SalesCategory">
            <id property="id" column="cat" />
            <result property="label" column="cat_label" />
        </association>
        <association property="phase" javaType="net.bodz.violet.shop.SalesPhase">
            <id property="id" column="phase" />
            <result property="label" column="phase_label" />
        </association>
        <association property="plan" javaType="net.bodz.violet.plan.Plan">
            <id property="id" column="plan" />
            <result property="subject" column="plan_subject" />
        </association>
        <association property="org" javaType="net.bodz.lily.contact.Organization">
            <id property="id" column="cust_org" />
            <result property="label" column="org_label" />
        </association>
        <association property="person" javaType="net.bodz.lily.contact.Person">
            <id property="id" column="cust_person" />
            <result property="label" column="person_label" />
        </association>
    </resultMap>

    <resultMap id="objedit_map" type="net.bodz.violet.store.StoreOrder" extends="objlist_map">
        <collection property="items" javaType="net.bodz.lily.entity.SizedList" ofType="net.bodz.violet.shop.SalesOrderItem">
            <id property="id" column="y_id" />
            <result property="codeName" column="y_name" />
            <result property="label" column="y_label" />
            <result property="description" column="y_description" />
        </collection>
    </resultMap>
    
    <sql id="objlist_sql"><![CDATA[
        select
            a.*,
            u.label "uid_label",
            g.label "gid_label",
            op.label "op_label",
            cat.label "cat_label",
            phase.label "phase_label",
            plan.subject "plan_subject",
            org.label "org_label",
            person.label "person_label"
        from saleodr a
            left join "user" u on a.uid = u.id
            left join "group" g on a.gid = g.id
            left join "user" op on a.op = op.id
            left join storecat cat on a.cat = cat.id
            left join storephase phase on a.phase = phase.id
            left join plan on a.plan = plan.id
            left join org on a.cust_org = org.id
            left join person on a.cust_person = person.id
        ]]>
    </sql>

    <sql id="objedit_sql"><![CDATA[
        select
            a.*,
            u.label "uid_label",
            g.label "gid_label",
            op.label "op_label",
            cat.label "cat_label",
            phase.label "phase_label",
            plan.subject "plan_subject",
            org.label "org_label",
            person.label "person_label"
        from saleodr a
            left join "user" u on a.uid = u.id
            left join "group" g on a.gid = g.id
            left join "user" op on a.op = op.id
            left join storecat cat on a.cat = cat.id
            left join storephase phase on a.phase = phase.id
            left join plan on a.plan = plan.id
            left join org on a.cust_org = org.id
            left join person on a.cust_person = person.id
            left join saleodrl y on y.odr = a.id
        ]]>
    </sql>

    <sql id="filtconds">
        <!-- co -->
        <include refid="co.modefilt" />
        <if test="m.timeRange != null">and a.lastmod between #{m.timeRange.min, jdbcType=DATE} and #{m.timeRange.max, jdbcType=DATE}</if>
        <!-- moment-interval -->
        <if test="m.dateRange != null">and a.t0 between #{m.dateRange.min, jdbcType=DATE} and #{m.dateRange.max, jdbcType=DATE}</if>
        <if test="m.year != null">and extract(year from a.t0)=#{m.year}</if>
        <if test="m.noDate">and a.t0 is null</if>
        <if test="m.noYear">and a.t0 is null</if>
        <!-- message -->
        <if test="m.opId != null">and a.op=#{m.opId}</if>
        <if test="m.voteCountRange != null">and a.nvote between #{m.voteCountRange.min} and #{m.voteCountRange.max}</if>
        <if test="m.likerCountRange != null">and a.nlike between #{m.likerCountRange.min} and #{m.likerCountRange.max}</if>
        <if test="m.readCountRange != null">and a.nread between #{m.readCountRange.min} and #{m.readCountRange.max}</if>
        <if test="m.noOp">and a.op is null</if>
        <if test="m.noCategory">and a.cat is null</if>
        <if test="m.noPhase">and a.phase is null</if>

        <if test="m.planId != null">and a.plan=#{m.planId}</if>
        <if test="m.orgId != null">and a.cust_org=#{m.orgId}</if>
        <if test="m.personId != null">and a.cust_person=#{m.personId}</if>
        <if test="m.tagId != null">and x.tag=#{m.tagId}</if>
        <if test="m.noTag">and x.tag is null</if>
    </sql>

    <select id="all" resultMap="objlist_map">
        <include refid="objlist_sql" />
    </select>

    <select id="filter" resultMap="objlist_map">
        <include refid="objlist_sql" />
        <where>
            <include refid="filtconds" />
        </where>
    </select>

    <select id="select" parameterType="int" resultMap="objlist_map">
        <include refid="objedit_sql" />
        <where>
            <if test="_parameter != null">a.id = #{id}</if>
        </where>
    </select>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id"><![CDATA[
        insert into saleodr(
            uid, gid, mode, acl,
            priority, flags, state, 
            t0, t1,
            op, subject, text, 
            cat, phase,
            prev, plan, cust_org, cust_person,
            length, sum_qty, sum_amount
        ) values(
            #{ownerUser.id}, #{ownerGroup.id}, #{accessMode}, #{acl},
            #{priority}, #{flags}, #{state}, 
            #{beginTime}, #{endTime},
            #{op.id}, #{subject}, #{text}, 
            #{category.id}, #{phase.id},
            #{previousOrder.id}, #{plan.id}, #{org.id}, #{person.id},
            #{length}, #{totalQuantity}, #{totalAmount}
        ) returning id; --
    ]]></insert>

    <update id="update">
        update saleodr
        <set>
            <include refid="co.setVSA" />
            <include refid="mi.setT" />
            <include refid="message.setUM" />
            prev = #{previousOrder.id},
            plan = #{plan.id},
            cust_org = #{org.id},
            cust_person = #{person.id},
            <if test="items != null">
                length = #{length},
                sum_qty = #{totalQuantity},
                sum_amount = #{totalAmount},
            </if>
        </set>
        <where>
            <if test="id != null">id = #{id}</if>
        </where>
    </update>

    <delete id="delete">
        delete from saleodr where id = #{id}
    </delete>

    <select id="count" resultType="hashmap">
        select count(*) "rows" from saleodr
        <where>
            <if test="_parameter != null">
                <include refid="filtconds" />
            </if>
        </where>
    </select>

    <select id="histoByYear" resultType="net.bodz.lily.model.util.F_YearCount"><![CDATA[
        select
            extract(year from t0)::int "year", 
            count(*) "count"
        from saleodr
        group by extract(year from t0)::int
    ]]></select>

</mapper>
