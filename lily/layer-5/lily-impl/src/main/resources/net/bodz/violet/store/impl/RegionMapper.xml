<?xml version="1.0" encoding="UTF-8" ?> 
<!DOCTYPE mapper 
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.bodz.violet.store.impl.RegionMapper">

    <resultMap id="objlist_map" type="net.bodz.violet.store.Region" extends="co.MAP_UVX">
        <result property="properties.jsonStr" column="props" />
        <result property="fullPath" column="path" />
        <association property="level" javaType="net.bodz.violet.store.RegionLevel">
            <id property="id" column="level" />
            <result property="label" column="level_label" />
        </association>
        <association property="category" javaType="net.bodz.violet.store.RegionCategory">
            <id property="id" column="cat" />
            <result property="label" column="cat_label" />
        </association>
        <association property="parent" javaType="net.bodz.violet.store.Region">
            <id property="id" column="parent" />
            <result property="label" column="parent_label" />
        </association>
    </resultMap>

    <sql id="objlist_sql"><![CDATA[
        select
            a.*,
            level.label "level_label",
            cat.label "cat_label",
            parent.label "parent_label",
            u.label "uid_label",
            g.label "gid_label"
        from region a
            left join regionlevel level on a.level = level.id
            left join regioncat cat on a.cat = cat.id
            left join region parent on a.parent = parent.id
            left join "user" u on a.uid=u.id
            left join "group" g on a.gid=g.id
        ]]>
    </sql>

    <sql id="objedit_sql"><![CDATA[
        select
            a.*,
            level.label "level_label",
            cat.label "cat_label",
            parent.label "parent_label",
            u.label "uid_label",
            g.label "gid_label"
        from region a
            left join regionlevel level on a.level = level.id
            left join regioncat cat on a.cat = cat.id
            left join region parent on a.parent = parent.id
            left join "user" u on a.uid=u.id
            left join "group" g on a.gid=g.id
        ]]>
    </sql>

    <sql id="filtconds">
        <include refid="co.modefilt" />
        <include refid="co.filter-id" />
        <include refid="co.filter-ui" />
        <include refid="co.filter-version" />
        <if test="m.parentId != null">and a.parent = #{m.parentId}</if>
        <if test="m.levelId != null">and a.level = #{m.levelId}</if>
        <if test="m.categoryId != null">and a.cat = #{m.categoryId}</if>
    </sql>

    <select id="all" resultMap="objlist_map">
        <include refid="objlist_sql" />
    </select>

    <select id="filter" resultMap="objlist_map">
        <include refid="objlist_sql" />
        <where>
            <include refid="filtconds" />
        </where>
    </select>

    <select id="select" parameterType="int" resultMap="objlist_map">
        <include refid="objedit_sql" />
        <where>
            <if test="_parameter != null">a.id=#{id}</if>
        </where>
    </select>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id"><![CDATA[
        insert into region(
            code, label, description, parent,
            level, cat,
            props,
            path
        ) values(
            #{codeName},#{label},#{description}, #{parent.id},
            #{levelId}, ]]>
            <if test="category == null">default,</if>
            <if test="category != null">#{category.id},</if><![CDATA[
            #{properties.jsonStr}::jsonb,
            #{fullPath}
        );
    ]]></insert>

    <update id="update">
        update region
        <set>
            <include refid="co.setUS" />
            <if test="parent != null">parent = #{parent.id}, </if>
            <if test="level != null">level = #{level.id}, </if>
            <if test="category != null">cat = #{category.id}, </if>
            <if test="properties != null">props = #{properties.jsonStr}::jsonb,</if>
            path = #{fullPath},
        </set>
        <where>
            id = #{id}
        </where>
    </update>

    <delete id="delete">
        delete from region where id = #{id}
    </delete>

    <select id="count" resultType="hashmap">
        select count(*) "total" from region a
        <where>
            <if test="_parameter != null">
                <include refid="filtconds" />
            </if>
        </where>
    </select>
    
</mapper>
