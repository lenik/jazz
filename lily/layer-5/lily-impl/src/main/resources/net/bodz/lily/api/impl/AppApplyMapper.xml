<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.bodz.lily.api.impl.AppApplyMapper">

    <resultMap id="objlist_map" type="net.bodz.lily.api.AppApply" extends="message.MAP_ALL">
    </resultMap>

    <sql id="objlist_sql"><![CDATA[
        select
            a.*,
            op.label "op_label",
            u.label "uid_label",
            g.label "gid_label"
        from apply a
            left join "user" op on a.op = op.id
            left join "user" u on a.uid = u.id
            left join "group" g on a.gid = g.id
        ]]>
    </sql>

    <sql id="objedit_sql"><![CDATA[
        select
            a.*,
            op.label "op_label",
            u.label "uid_label",
            g.label "gid_label"
        from apply a
            left join "user" op on a.op = op.id
            left join "user" u on a.uid = u.id
            left join "group" g on a.gid = g.id
        ]]>
    </sql>

    <sql id="filtconds">
        <!-- co -->
        <include refid="co.modefilt" />
    </sql>

    <select id="all" resultMap="objlist_map">
        <include refid="objlist_sql" />
    </select>

    <select id="filter" resultMap="objlist_map">
        <include refid="objlist_sql" />
        <where>
            <include refid="filtconds" />
        </where>
    </select>

    <select id="select" parameterType="int" resultMap="objlist_map">
        <include refid="objedit_sql" />
        <where>
            <if test="_parameter != null">a.id = #{id}</if>
        </where>
    </select>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id"><![CDATA[
        insert into apply(
            uid, gid, mode, acl,
            priority, flags, state, 
            t0, t1,
            op, subject, text 
        ) values(
            #{ownerUser.id}, #{ownerGroup.id}, #{accessMode}, #{acl},
            #{priority}, #{flags}, #{state}, 
            #{beginTime}, #{endTime},
            #{op.id}, #{subject}, #{text} 
        );
    ]]></insert>

    <update id="update">
        update apply
        <set>
            <include refid="co.setUVSA" />
            <include refid="mi.setT" />
            <include refid="message.setUM" />
        </set>
        <where>
            id = #{id}
        </where>
    </update>

    <delete id="delete">
        delete from apply where id = #{id}
    </delete>

    <select id="count" resultType="hashmap">
        select count(*) "rows" from apply
        <where>
            <if test="_parameter != null">
                <include refid="filtconds" />
            </if>
        </where>
    </select>

</mapper>
