<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.bodz.violet.shop.dao.ShopItemMapper">

    <resultMap id="objlist_map" type="net.bodz.violet.shop.ShopItem">
        <id property="id" column="id" />
        <result property="label" column="label" />
        <result property="description" column="description" />
        <result property="priority" column="priority" />
        <result property="flags" column="flags" />
        <result property="state" column="state" />
        <result property="beginTime" column="t0" />
        <result property="endTime" column="t1" />
        <result property="year" column="year" />
        <result property="creationDate" column="creation" />
        <result property="lastModifiedDate" column="lastmod" />
        <result property="version" column="version" />
        <result property="properties.jsonStr" column="props" />
        <result property="batch.jsonStr" column="batch" />
        <result property="price" column="price" />
        <result property="quantity" column="qty" />
        <result property="shopId" column="shop" />
        <result property="categoryId" column="cat" />
        <result property="artifactId" column="art" />
        <association property="category" columnPrefix="category_"
            javaType="net.bodz.violet.shop.ShopItemCategory" 
            resultMap="net.bodz.violet.shop.dao.ShopItemCategoryMapper.objlist_map" />
        <association property="shop" columnPrefix="shop_"
            javaType="net.bodz.violet.shop.Shop" 
            resultMap="net.bodz.violet.shop.dao.ShopMapper.objlist_map" />
        <association property="artifact" columnPrefix="art_"
            javaType="net.bodz.violet.art.Artifact" 
            resultMap="net.bodz.violet.art.dao.ArtifactMapper.objlist_map" />
    </resultMap>

    <sql id="objlist_sql"><![CDATA[
        select
            a.id, 
            a.label, 
            a.description, 
            a.priority, 
            a.flags, 
            a."state", 
            a.t0, 
            a.t1, 
            a."year", 
            a.creation, 
            a.lastmod, 
            a."version", 
            a.props, 
            a.shop, 
            a.cat, 
            a.art, 
            a.batch, 
            a.price, 
            a.qty, 
            category.id category_id, 
            category."name" category_name, 
            category.uid category_uid, 
            category.gid category_gid, 
            category.mode category_mode, 
            category.acl category_acl, 
            category.label category_label, 
            category.description category_description, 
            category.priority category_priority, 
            category.flags category_flags, 
            category."state" category_state, 
            category.creation category_creation, 
            category.lastmod category_lastmod, 
            category."version" category_version, 
            category.image category_image, 
            category.imagealt category_imagealt, 
            category.props category_props, 
            category.parent category_parent, 
            category."depth" category_depth, 
            category.nref category_nref, 
            shop.id shop_id, 
            shop.uid shop_uid, 
            shop.gid shop_gid, 
            shop.mode shop_mode, 
            shop.acl shop_acl, 
            shop.label shop_label, 
            shop.description shop_description, 
            shop.priority shop_priority, 
            shop.flags shop_flags, 
            shop."state" shop_state, 
            shop.creation shop_creation, 
            shop.lastmod shop_lastmod, 
            shop."version" shop_version, 
            shop.code shop_code, 
            shop.props shop_props, 
            shop.hydm shop_hydm, 
            art.id art_id, 
            art.sku art_sku, 
            art.barcode art_barcode, 
            art.rfid art_rfid, 
            art.uid art_uid, 
            art.gid art_gid, 
            art.mode art_mode, 
            art.acl art_acl, 
            art.label art_label, 
            art.description art_description, 
            art.priority art_priority, 
            art.flags art_flags, 
            art."state" art_state, 
            art.creation art_creation, 
            art.lastmod art_lastmod, 
            art."version" art_version, 
            art.model art_model, 
            art.proto art_proto, 
            art.cat art_cat, 
            art.phase art_phase, 
            art.uom art_uom, 
            art.props art_props, 
            art.finish art_finish, 
            art.price art_price
        from shopitem a
            left join shopitemcat category on a.cat = category.id
            left join shop shop on a.shop = shop.id
            left join art art on a.art = art.id
        ]]>
    </sql>

    <sql id="objedit_sql"><![CDATA[
        select
            a.id, 
            a.label, 
            a.description, 
            a.priority, 
            a.flags, 
            a."state", 
            a.t0, 
            a.t1, 
            a."year", 
            a.creation, 
            a.lastmod, 
            a."version", 
            a.props, 
            a.shop, 
            a.cat, 
            a.art, 
            a.batch, 
            a.price, 
            a.qty, 
            category.id category_id, 
            category."name" category_name, 
            category.uid category_uid, 
            category.gid category_gid, 
            category.mode category_mode, 
            category.acl category_acl, 
            category.label category_label, 
            category.description category_description, 
            category.priority category_priority, 
            category.flags category_flags, 
            category."state" category_state, 
            category.creation category_creation, 
            category.lastmod category_lastmod, 
            category."version" category_version, 
            category.image category_image, 
            category.imagealt category_imagealt, 
            category.props category_props, 
            category.parent category_parent, 
            category."depth" category_depth, 
            category.nref category_nref, 
            shop.id shop_id, 
            shop.uid shop_uid, 
            shop.gid shop_gid, 
            shop.mode shop_mode, 
            shop.acl shop_acl, 
            shop.label shop_label, 
            shop.description shop_description, 
            shop.priority shop_priority, 
            shop.flags shop_flags, 
            shop."state" shop_state, 
            shop.creation shop_creation, 
            shop.lastmod shop_lastmod, 
            shop."version" shop_version, 
            shop.code shop_code, 
            shop.props shop_props, 
            shop.hydm shop_hydm, 
            art.id art_id, 
            art.sku art_sku, 
            art.barcode art_barcode, 
            art.rfid art_rfid, 
            art.uid art_uid, 
            art.gid art_gid, 
            art.mode art_mode, 
            art.acl art_acl, 
            art.label art_label, 
            art.description art_description, 
            art.priority art_priority, 
            art.flags art_flags, 
            art."state" art_state, 
            art.creation art_creation, 
            art.lastmod art_lastmod, 
            art."version" art_version, 
            art.model art_model, 
            art.proto art_proto, 
            art.cat art_cat, 
            art.phase art_phase, 
            art.uom art_uom, 
            art.props art_props, 
            art.finish art_finish, 
            art.price art_price
        from shopitem a
            left join shopitemcat category on a.cat = category.id
            left join shop shop on a.shop = shop.id
            left join art art on a.art = art.id
        ]]>
    </sql>

    <sql id="filtconds">
        <if test="m.id != null">and a.id = #{m.id}</if>
        <if test="m.idRange!= null">
            <if test="m.idRange.hasStartIncl">and a.id >= #{m.idRange.start}</if>
            <if test="m.idRange.hasStartExcl">and a.id > #{m.idRange.start}</if>
            <if test="m.idRange.hasEndIncl">and a.id &lt;= #{m.idRange.end}</if>
            <if test="m.idRange.hasEndExcl">and a.id &lt; #{m.idRange.end}</if>
        </if>
        <if test="m.label != null">and a.label = #{m.label}</if>
        <if test="m.labelPattern != null">and a.label like '${m.labelPattern}'</if>
        <if test="m.description != null">and a.description = #{m.description}</if>
        <if test="m.descriptionPattern != null">and a.description like '${m.descriptionPattern}'</if>
        <if test="m.priority != null">and a.priority = #{m.priority}</if>
        <if test="m.priorityRange!= null">
            <if test="m.priorityRange.hasStartIncl">and a.priority >= #{m.priorityRange.start}</if>
            <if test="m.priorityRange.hasStartExcl">and a.priority > #{m.priorityRange.start}</if>
            <if test="m.priorityRange.hasEndIncl">and a.priority &lt;= #{m.priorityRange.end}</if>
            <if test="m.priorityRange.hasEndExcl">and a.priority &lt; #{m.priorityRange.end}</if>
        </if>
        <if test="m.flags != null">and a.flags = #{m.flags}</if>
        <if test="m.flagsRange!= null">
            <if test="m.flagsRange.hasStartIncl">and a.flags >= #{m.flagsRange.start}</if>
            <if test="m.flagsRange.hasStartExcl">and a.flags > #{m.flagsRange.start}</if>
            <if test="m.flagsRange.hasEndIncl">and a.flags &lt;= #{m.flagsRange.end}</if>
            <if test="m.flagsRange.hasEndExcl">and a.flags &lt; #{m.flagsRange.end}</if>
        </if>
        <if test="m.state != null">and a."state" = #{m.state}</if>
        <if test="m.stateRange!= null">
            <if test="m.stateRange.hasStartIncl">and a."state" >= #{m.stateRange.start}</if>
            <if test="m.stateRange.hasStartExcl">and a."state" > #{m.stateRange.start}</if>
            <if test="m.stateRange.hasEndIncl">and a."state" &lt;= #{m.stateRange.end}</if>
            <if test="m.stateRange.hasEndExcl">and a."state" &lt; #{m.stateRange.end}</if>
        </if>
        <if test="m.beginTime != null">and a.t0 = #{m.beginTime}</if>
        <if test="m.endTime != null">and a.t1 = #{m.endTime}</if>
        <if test="m.year != null">and a."year" = #{m.year}</if>
        <if test="m.yearRange!= null">
            <if test="m.yearRange.hasStartIncl">and a."year" >= #{m.yearRange.start}</if>
            <if test="m.yearRange.hasStartExcl">and a."year" > #{m.yearRange.start}</if>
            <if test="m.yearRange.hasEndIncl">and a."year" &lt;= #{m.yearRange.end}</if>
            <if test="m.yearRange.hasEndExcl">and a."year" &lt; #{m.yearRange.end}</if>
        </if>
        <if test="m.creationDate != null">and a.creation = #{m.creationDate}</if>
        <if test="m.lastModifiedDate != null">and a.lastmod = #{m.lastModifiedDate}</if>
        <if test="m.version != null">and a."version" = #{m.version}</if>
        <if test="m.versionRange!= null">
            <if test="m.versionRange.hasStartIncl">and a."version" >= #{m.versionRange.start}</if>
            <if test="m.versionRange.hasStartExcl">and a."version" > #{m.versionRange.start}</if>
            <if test="m.versionRange.hasEndIncl">and a."version" &lt;= #{m.versionRange.end}</if>
            <if test="m.versionRange.hasEndExcl">and a."version" &lt; #{m.versionRange.end}</if>
        </if>
        <if test="m.properties != null">and a.props = #{m.properties}</if>
        <if test="m.shopId != null">and a.shop = #{m.shopId}</if>
        <if test="m.shopIdRange!= null">
            <if test="m.shopIdRange.hasStartIncl">and a.shop >= #{m.shopIdRange.start}</if>
            <if test="m.shopIdRange.hasStartExcl">and a.shop > #{m.shopIdRange.start}</if>
            <if test="m.shopIdRange.hasEndIncl">and a.shop &lt;= #{m.shopIdRange.end}</if>
            <if test="m.shopIdRange.hasEndExcl">and a.shop &lt; #{m.shopIdRange.end}</if>
        </if>
        <if test="m.categoryId != null">and a.cat = #{m.categoryId}</if>
        <if test="m.categoryIdRange!= null">
            <if test="m.categoryIdRange.hasStartIncl">and a.cat >= #{m.categoryIdRange.start}</if>
            <if test="m.categoryIdRange.hasStartExcl">and a.cat > #{m.categoryIdRange.start}</if>
            <if test="m.categoryIdRange.hasEndIncl">and a.cat &lt;= #{m.categoryIdRange.end}</if>
            <if test="m.categoryIdRange.hasEndExcl">and a.cat &lt; #{m.categoryIdRange.end}</if>
        </if>
        <if test="m.artifactId != null">and a.art = #{m.artifactId}</if>
        <if test="m.artifactIdRange!= null">
            <if test="m.artifactIdRange.hasStartIncl">and a.art >= #{m.artifactIdRange.start}</if>
            <if test="m.artifactIdRange.hasStartExcl">and a.art > #{m.artifactIdRange.start}</if>
            <if test="m.artifactIdRange.hasEndIncl">and a.art &lt;= #{m.artifactIdRange.end}</if>
            <if test="m.artifactIdRange.hasEndExcl">and a.art &lt; #{m.artifactIdRange.end}</if>
        </if>
        <if test="m.batch != null">and a.batch = #{m.batch}</if>
        <if test="m.price != null">and a.price = #{m.price}</if>
        <if test="m.priceRange!= null">
            <if test="m.priceRange.hasStartIncl">and a.price >= #{m.priceRange.start}</if>
            <if test="m.priceRange.hasStartExcl">and a.price > #{m.priceRange.start}</if>
            <if test="m.priceRange.hasEndIncl">and a.price &lt;= #{m.priceRange.end}</if>
            <if test="m.priceRange.hasEndExcl">and a.price &lt; #{m.priceRange.end}</if>
        </if>
        <if test="m.quantity != null">and a.qty = #{m.quantity}</if>
        <if test="m.quantityRange!= null">
            <if test="m.quantityRange.hasStartIncl">and a.qty >= #{m.quantityRange.start}</if>
            <if test="m.quantityRange.hasStartExcl">and a.qty > #{m.quantityRange.start}</if>
            <if test="m.quantityRange.hasEndIncl">and a.qty &lt;= #{m.quantityRange.end}</if>
            <if test="m.quantityRange.hasEndExcl">and a.qty &lt; #{m.quantityRange.end}</if>
        </if>
    </sql>

    <select id="all" resultMap="objlist_map">
        <include refid="objlist_sql" />
        <include refid="co.opts" />
    </select>

    <select id="filter" resultMap="objlist_map">
        <include refid="objlist_sql" />
        <where>
            <include refid="filtconds" />
        </where>
        <include refid="co.opts" />
    </select>

    <select id="select" resultMap="objlist_map">
        <include refid="objedit_sql" />
        <where>
            <if test="_parameter != null">a.id = #{id}</if>
        </where>
    </select>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id"><![CDATA[
        insert into shopitem(
            label,
            description,
            priority,
            flags,
            "state",
            t0,
            t1,
            "year",
            creation,
            lastmod,
            "version",
            props,
            shop,
            cat,
            art,
            batch,
            price,
            qty
        ) values(
            #{label},
            #{description},
            #{priority},
            #{flags},
            #{state},
            #{beginTime},
            #{endTime},
            #{year},
            #{creationDate},
            #{lastModifiedDate},
            #{version},
            #{properties.jsonStr}::jsonb,
            #{shopId},
            #{categoryId},
            #{artifactId},
            #{batch.jsonStr}::jsonb,
            #{price},
            #{quantity}
        );
    ]]></insert>

    <update id="update">
        update shopitem
        <set>
            label = #{label},
            description = #{description},
            priority = #{priority},
            flags = #{flags},
            "state" = #{state},
            t0 = #{beginTime},
            t1 = #{endTime},
            "year" = #{year},
            creation = #{creationDate},
            lastmod = #{lastModifiedDate},
            "version" = #{version},
            props = #{properties.jsonStr}::jsonb,
            shop = #{shopId},
            cat = #{categoryId},
            art = #{artifactId},
            batch = #{batch.jsonStr}::jsonb,
            price = #{price},
            qty = #{quantity},
        </set>
        <where>
            id = #{id}
        </where>
    </update>

    <delete id="delete">
        delete from shopitem
        <where>
            id = #{id}
        </where>
    </delete>

    <select id="count" resultType="long">
        select count(*) "rows" from shopitem
        <where>
            <if test="_parameter != null">
                <include refid="filtconds" />
            </if>
        </where>
    </select>

</mapper>
