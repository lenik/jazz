<?xml version="1.0" encoding="UTF-8" ?> 
<!DOCTYPE mapper 
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.bodz.lily.security.impl.RoleMapper">

    <resultMap id="map1" type="net.bodz.lily.security.Role" extends="co.MAP_ALL">
        <result property="name" column="name" />
        <result property="rank" column="rank" />
        <result property="properties.jsonForm" column="props" />
        <collection property="users" javaType="ArrayList" ofType="net.bodz.lily.security.User">
            <id property="id" column="y_id" />
            <result property="name" column="y_name" />
            <result property="label" column="y_label" />
            <result property="description" column="y_description" />
            <result property="properties.jsonForm" column="y_props" />
        </collection>
    </resultMap>

    <sql id="select1"><![CDATA[
        select
            a.*,
            y.id "y_id",
            y.name "y_name",
            y.label "y_label",
            y.description "y_description",
            y.props "y_props"
        from "role" a
            left join role_user x on x."role"=a.id
            left join "user" y on y.id=x."user" 
        ]]>
    </sql>

    <select id="all" resultMap="map1">
        <include refid="select1" />
    </select>

    <select id="filter" resultMap="map1">
        <include refid="select1" />
        <where>
            <if test="m.codeName != null">and a.name=#{m.name}</if>
        </where>
    </select>

    <select id="select" parameterType="int" resultMap="map1">
        <include refid="select1" />
        <where>
            <if test="_parameter != null">a.id=#{id}</if>
        </where>
    </select>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id"><![CDATA[
        insert into "role"(
            name, label, description,
            priority, flags, state,
            props,
            rank
        ) values(
            #{name}, #{label}, #{description},
            #{priority}, #{flags}, #{state},
            #{properties.jsonForm},
            #{rank}
        ) returning id; --
    ]]></insert>

    <update id="update">
        update "role"
        <set>
            <include refid="co.setUS" />
            name = #{name},
            rank = #{rank},
        </set>
        where id=#{id}
    </update>

    <delete id="delete">
        delete from "role" where id=#{id}
    </delete>

    <select id="count" resultType="hashmap">
        select count(*) "rows" from "role"
    </select>

</mapper>