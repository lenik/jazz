<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.bodz.violet.art.dao.ArtifactMapper">

    <resultMap id="objlist_map" type="net.bodz.violet.art.Artifact">
        <id property="id" column="id" />
        <result property="skuCode" column="sku" />
        <result property="barCode" column="barcode" />
        <result property="rfidCode" column="rfid" />
        <result property="accessMode" column="mode" />
        <result property="acl" column="acl" />
        <result property="label" column="label" />
        <result property="description" column="description" />
        <result property="priority" column="priority" />
        <result property="flags" column="flags" />
        <result property="state" column="state" />
        <result property="creationDate" column="creation" />
        <result property="lastModifiedDate" column="lastmod" />
        <result property="version" column="version" />
        <result property="modelName" column="model" />
        <result property="properties.jsonStr" column="props" />
        <result property="finish" column="finish" />
        <result property="price" column="price" />
        <result property="ownerUserId" column="uid" />
        <result property="ownerGroupId" column="gid" />
        <result property="protoId" column="proto" />
        <result property="categoryId" column="cat" />
        <result property="phaseId" column="phase" />
        <result property="uomId" column="uom" />
        <association property="ownerGroup" columnPrefix="ownerGroup_"
            javaType="net.bodz.lily.security.Group" 
            resultMap="net.bodz.lily.security.dao.GroupMapper.objlist_map" />
        <association property="proto" columnPrefix="proto_"
            javaType="net.bodz.violet.art.Artifact" 
            resultMap="objlist_map" />
        <association property="phase" columnPrefix="phase_"
            javaType="net.bodz.violet.art.ArtifactPhase" 
            resultMap="net.bodz.violet.art.dao.ArtifactPhaseMapper.objlist_map" />
        <association property="uom" columnPrefix="uom_"
            javaType="net.bodz.violet.art.UOM" 
            resultMap="net.bodz.violet.art.dao.UOMMapper.objlist_map" />
        <association property="ownerUser" columnPrefix="ownerUser_"
            javaType="net.bodz.lily.security.User" 
            resultMap="net.bodz.lily.security.dao.UserMapper.objlist_map" />
        <association property="category" columnPrefix="category_"
            javaType="net.bodz.violet.art.ArtifactCategory" 
            resultMap="net.bodz.violet.art.dao.ArtifactCategoryMapper.objlist_map" />
    </resultMap>

    <sql id="objlist_sql"><![CDATA[
        select
            a.id, 
            a.sku, 
            a.barcode, 
            a.rfid, 
            a.uid, 
            a.gid, 
            a.mode, 
            a.acl, 
            a.label, 
            a.description, 
            a.priority, 
            a.flags, 
            a."state", 
            a.creation, 
            a.lastmod, 
            a."version", 
            a.model, 
            a.proto, 
            a.cat, 
            a.phase, 
            a.uom, 
            a.props, 
            a.finish, 
            a.price, 
            ownerGroup.id ownerGroup_id, 
            ownerGroup."name" ownerGroup_name, 
            ownerGroup."type" ownerGroup_type, 
            ownerGroup.label ownerGroup_label, 
            ownerGroup.description ownerGroup_description, 
            ownerGroup.priority ownerGroup_priority, 
            ownerGroup.flags ownerGroup_flags, 
            ownerGroup."state" ownerGroup_state, 
            ownerGroup.creation ownerGroup_creation, 
            ownerGroup.lastmod ownerGroup_lastmod, 
            ownerGroup."version" ownerGroup_version, 
            ownerGroup.props ownerGroup_props, 
            ownerGroup.parent ownerGroup_parent, 
            proto.id proto_id, 
            proto.sku proto_sku, 
            proto.barcode proto_barcode, 
            proto.rfid proto_rfid, 
            proto.uid proto_uid, 
            proto.gid proto_gid, 
            proto.mode proto_mode, 
            proto.acl proto_acl, 
            proto.label proto_label, 
            proto.description proto_description, 
            proto.priority proto_priority, 
            proto.flags proto_flags, 
            proto."state" proto_state, 
            proto.creation proto_creation, 
            proto.lastmod proto_lastmod, 
            proto."version" proto_version, 
            proto.model proto_model, 
            proto.proto proto_proto, 
            proto.cat proto_cat, 
            proto.phase proto_phase, 
            proto.uom proto_uom, 
            proto.props proto_props, 
            proto.finish proto_finish, 
            proto.price proto_price, 
            phase.id phase_id, 
            phase.uid phase_uid, 
            phase.gid phase_gid, 
            phase.mode phase_mode, 
            phase.acl phase_acl, 
            phase.code phase_code, 
            phase.label phase_label, 
            phase.description phase_description, 
            phase.priority phase_priority, 
            phase.flags phase_flags, 
            phase."state" phase_state, 
            phase.creation phase_creation, 
            phase.lastmod phase_lastmod, 
            phase."version" phase_version, 
            phase.nref phase_nref, 
            uom.id uom_id, 
            uom.code uom_code, 
            uom.label uom_label, 
            uom.description uom_description, 
            uom.props uom_props, 
            uom.prop uom_prop, 
            uom.std uom_std, 
            uom."scale" uom_scale, 
            ownerUser.id ownerUser_id, 
            ownerUser."type" ownerUser_type, 
            ownerUser."name" ownerUser_name, 
            ownerUser.label ownerUser_label, 
            ownerUser.description ownerUser_description, 
            ownerUser.priority ownerUser_priority, 
            ownerUser.flags ownerUser_flags, 
            ownerUser."state" ownerUser_state, 
            ownerUser.creation ownerUser_creation, 
            ownerUser.lastmod ownerUser_lastmod, 
            ownerUser."version" ownerUser_version, 
            ownerUser.props ownerUser_props, 
            ownerUser.gid0 ownerUser_gid0, 
            ownerUser.referer ownerUser_referer, 
            ownerUser.person ownerUser_person, 
            category.id category_id, 
            category.code category_code, 
            category.uid category_uid, 
            category.gid category_gid, 
            category.mode category_mode, 
            category.acl category_acl, 
            category.label category_label, 
            category.description category_description, 
            category.priority category_priority, 
            category.flags category_flags, 
            category."state" category_state, 
            category.creation category_creation, 
            category.lastmod category_lastmod, 
            category."version" category_version, 
            category.props category_props, 
            category.parent category_parent, 
            category."depth" category_depth, 
            category.skufmt category_skufmt, 
            category.skufmtfull category_skufmtfull, 
            category.barfmt category_barfmt, 
            category.barfmtfull category_barfmtfull, 
            category.batchfmt category_batchfmt, 
            category.serialfmt category_serialfmt, 
            category."count" category_count
        from art a
            left join lily."group" ownerGroup on a.gid = ownerGroup.id
            left join art proto on a.proto = proto.id
            left join artphase phase on a.phase = phase.id
            left join lily.uom uom on a.uom = uom.id
            left join lily."user" ownerUser on a.uid = ownerUser.id
            left join artcat category on a.cat = category.id
        ]]>
    </sql>

    <sql id="objedit_sql"><![CDATA[
        select
            a.id, 
            a.sku, 
            a.barcode, 
            a.rfid, 
            a.uid, 
            a.gid, 
            a.mode, 
            a.acl, 
            a.label, 
            a.description, 
            a.priority, 
            a.flags, 
            a."state", 
            a.creation, 
            a.lastmod, 
            a."version", 
            a.model, 
            a.proto, 
            a.cat, 
            a.phase, 
            a.uom, 
            a.props, 
            a.finish, 
            a.price, 
            ownerGroup.id ownerGroup_id, 
            ownerGroup."name" ownerGroup_name, 
            ownerGroup."type" ownerGroup_type, 
            ownerGroup.label ownerGroup_label, 
            ownerGroup.description ownerGroup_description, 
            ownerGroup.priority ownerGroup_priority, 
            ownerGroup.flags ownerGroup_flags, 
            ownerGroup."state" ownerGroup_state, 
            ownerGroup.creation ownerGroup_creation, 
            ownerGroup.lastmod ownerGroup_lastmod, 
            ownerGroup."version" ownerGroup_version, 
            ownerGroup.props ownerGroup_props, 
            ownerGroup.parent ownerGroup_parent, 
            proto.id proto_id, 
            proto.sku proto_sku, 
            proto.barcode proto_barcode, 
            proto.rfid proto_rfid, 
            proto.uid proto_uid, 
            proto.gid proto_gid, 
            proto.mode proto_mode, 
            proto.acl proto_acl, 
            proto.label proto_label, 
            proto.description proto_description, 
            proto.priority proto_priority, 
            proto.flags proto_flags, 
            proto."state" proto_state, 
            proto.creation proto_creation, 
            proto.lastmod proto_lastmod, 
            proto."version" proto_version, 
            proto.model proto_model, 
            proto.proto proto_proto, 
            proto.cat proto_cat, 
            proto.phase proto_phase, 
            proto.uom proto_uom, 
            proto.props proto_props, 
            proto.finish proto_finish, 
            proto.price proto_price, 
            phase.id phase_id, 
            phase.uid phase_uid, 
            phase.gid phase_gid, 
            phase.mode phase_mode, 
            phase.acl phase_acl, 
            phase.code phase_code, 
            phase.label phase_label, 
            phase.description phase_description, 
            phase.priority phase_priority, 
            phase.flags phase_flags, 
            phase."state" phase_state, 
            phase.creation phase_creation, 
            phase.lastmod phase_lastmod, 
            phase."version" phase_version, 
            phase.nref phase_nref, 
            uom.id uom_id, 
            uom.code uom_code, 
            uom.label uom_label, 
            uom.description uom_description, 
            uom.props uom_props, 
            uom.prop uom_prop, 
            uom.std uom_std, 
            uom."scale" uom_scale, 
            ownerUser.id ownerUser_id, 
            ownerUser."type" ownerUser_type, 
            ownerUser."name" ownerUser_name, 
            ownerUser.label ownerUser_label, 
            ownerUser.description ownerUser_description, 
            ownerUser.priority ownerUser_priority, 
            ownerUser.flags ownerUser_flags, 
            ownerUser."state" ownerUser_state, 
            ownerUser.creation ownerUser_creation, 
            ownerUser.lastmod ownerUser_lastmod, 
            ownerUser."version" ownerUser_version, 
            ownerUser.props ownerUser_props, 
            ownerUser.gid0 ownerUser_gid0, 
            ownerUser.referer ownerUser_referer, 
            ownerUser.person ownerUser_person, 
            category.id category_id, 
            category.code category_code, 
            category.uid category_uid, 
            category.gid category_gid, 
            category.mode category_mode, 
            category.acl category_acl, 
            category.label category_label, 
            category.description category_description, 
            category.priority category_priority, 
            category.flags category_flags, 
            category."state" category_state, 
            category.creation category_creation, 
            category.lastmod category_lastmod, 
            category."version" category_version, 
            category.props category_props, 
            category.parent category_parent, 
            category."depth" category_depth, 
            category.skufmt category_skufmt, 
            category.skufmtfull category_skufmtfull, 
            category.barfmt category_barfmt, 
            category.barfmtfull category_barfmtfull, 
            category.batchfmt category_batchfmt, 
            category.serialfmt category_serialfmt, 
            category."count" category_count
        from art a
            left join lily."group" ownerGroup on a.gid = ownerGroup.id
            left join art proto on a.proto = proto.id
            left join artphase phase on a.phase = phase.id
            left join lily.uom uom on a.uom = uom.id
            left join lily."user" ownerUser on a.uid = ownerUser.id
            left join artcat category on a.cat = category.id
        ]]>
    </sql>

    <sql id="filtconds">
        <if test="m.id != null">and a.id = #{m.id}</if>
        <if test="m.idRange!= null">
            <if test="m.idRange.hasStartIncl">and a.id >= #{m.idRange.start}</if>
            <if test="m.idRange.hasStartExcl">and a.id > #{m.idRange.start}</if>
            <if test="m.idRange.hasEndIncl">and a.id &lt;= #{m.idRange.end}</if>
            <if test="m.idRange.hasEndExcl">and a.id &lt; #{m.idRange.end}</if>
        </if>
        <if test="m.skuCode != null">and a.sku = #{m.skuCode}</if>
        <if test="m.skuCodePattern != null">and a.sku like '${m.skuCodePattern}'</if>
        <if test="m.barCode != null">and a.barcode = #{m.barCode}</if>
        <if test="m.barCodePattern != null">and a.barcode like '${m.barCodePattern}'</if>
        <if test="m.rfidCode != null">and a.rfid = #{m.rfidCode}</if>
        <if test="m.rfidCodePattern != null">and a.rfid like '${m.rfidCodePattern}'</if>
        <if test="m.ownerUserId != null">and a.uid = #{m.ownerUserId}</if>
        <if test="m.ownerUserIdRange!= null">
            <if test="m.ownerUserIdRange.hasStartIncl">and a.uid >= #{m.ownerUserIdRange.start}</if>
            <if test="m.ownerUserIdRange.hasStartExcl">and a.uid > #{m.ownerUserIdRange.start}</if>
            <if test="m.ownerUserIdRange.hasEndIncl">and a.uid &lt;= #{m.ownerUserIdRange.end}</if>
            <if test="m.ownerUserIdRange.hasEndExcl">and a.uid &lt; #{m.ownerUserIdRange.end}</if>
        </if>
        <if test="m.ownerGroupId != null">and a.gid = #{m.ownerGroupId}</if>
        <if test="m.ownerGroupIdRange!= null">
            <if test="m.ownerGroupIdRange.hasStartIncl">and a.gid >= #{m.ownerGroupIdRange.start}</if>
            <if test="m.ownerGroupIdRange.hasStartExcl">and a.gid > #{m.ownerGroupIdRange.start}</if>
            <if test="m.ownerGroupIdRange.hasEndIncl">and a.gid &lt;= #{m.ownerGroupIdRange.end}</if>
            <if test="m.ownerGroupIdRange.hasEndExcl">and a.gid &lt; #{m.ownerGroupIdRange.end}</if>
        </if>
        <if test="m.accessMode != null">and a.mode = #{m.accessMode}</if>
        <if test="m.accessModeRange!= null">
            <if test="m.accessModeRange.hasStartIncl">and a.mode >= #{m.accessModeRange.start}</if>
            <if test="m.accessModeRange.hasStartExcl">and a.mode > #{m.accessModeRange.start}</if>
            <if test="m.accessModeRange.hasEndIncl">and a.mode &lt;= #{m.accessModeRange.end}</if>
            <if test="m.accessModeRange.hasEndExcl">and a.mode &lt; #{m.accessModeRange.end}</if>
        </if>
        <if test="m.acl != null">and a.acl = #{m.acl}</if>
        <if test="m.aclRange!= null">
            <if test="m.aclRange.hasStartIncl">and a.acl >= #{m.aclRange.start}</if>
            <if test="m.aclRange.hasStartExcl">and a.acl > #{m.aclRange.start}</if>
            <if test="m.aclRange.hasEndIncl">and a.acl &lt;= #{m.aclRange.end}</if>
            <if test="m.aclRange.hasEndExcl">and a.acl &lt; #{m.aclRange.end}</if>
        </if>
        <if test="m.label != null">and a.label = #{m.label}</if>
        <if test="m.labelPattern != null">and a.label like '${m.labelPattern}'</if>
        <if test="m.description != null">and a.description = #{m.description}</if>
        <if test="m.descriptionPattern != null">and a.description like '${m.descriptionPattern}'</if>
        <if test="m.priority != null">and a.priority = #{m.priority}</if>
        <if test="m.priorityRange!= null">
            <if test="m.priorityRange.hasStartIncl">and a.priority >= #{m.priorityRange.start}</if>
            <if test="m.priorityRange.hasStartExcl">and a.priority > #{m.priorityRange.start}</if>
            <if test="m.priorityRange.hasEndIncl">and a.priority &lt;= #{m.priorityRange.end}</if>
            <if test="m.priorityRange.hasEndExcl">and a.priority &lt; #{m.priorityRange.end}</if>
        </if>
        <if test="m.flags != null">and a.flags = #{m.flags}</if>
        <if test="m.flagsRange!= null">
            <if test="m.flagsRange.hasStartIncl">and a.flags >= #{m.flagsRange.start}</if>
            <if test="m.flagsRange.hasStartExcl">and a.flags > #{m.flagsRange.start}</if>
            <if test="m.flagsRange.hasEndIncl">and a.flags &lt;= #{m.flagsRange.end}</if>
            <if test="m.flagsRange.hasEndExcl">and a.flags &lt; #{m.flagsRange.end}</if>
        </if>
        <if test="m.state != null">and a."state" = #{m.state}</if>
        <if test="m.stateRange!= null">
            <if test="m.stateRange.hasStartIncl">and a."state" >= #{m.stateRange.start}</if>
            <if test="m.stateRange.hasStartExcl">and a."state" > #{m.stateRange.start}</if>
            <if test="m.stateRange.hasEndIncl">and a."state" &lt;= #{m.stateRange.end}</if>
            <if test="m.stateRange.hasEndExcl">and a."state" &lt; #{m.stateRange.end}</if>
        </if>
        <if test="m.creationDate != null">and a.creation = #{m.creationDate}</if>
        <if test="m.lastModifiedDate != null">and a.lastmod = #{m.lastModifiedDate}</if>
        <if test="m.version != null">and a."version" = #{m.version}</if>
        <if test="m.versionRange!= null">
            <if test="m.versionRange.hasStartIncl">and a."version" >= #{m.versionRange.start}</if>
            <if test="m.versionRange.hasStartExcl">and a."version" > #{m.versionRange.start}</if>
            <if test="m.versionRange.hasEndIncl">and a."version" &lt;= #{m.versionRange.end}</if>
            <if test="m.versionRange.hasEndExcl">and a."version" &lt; #{m.versionRange.end}</if>
        </if>
        <if test="m.modelName != null">and a.model = #{m.modelName}</if>
        <if test="m.modelNamePattern != null">and a.model like '${m.modelNamePattern}'</if>
        <if test="m.protoId != null">and a.proto = #{m.protoId}</if>
        <if test="m.protoIdRange!= null">
            <if test="m.protoIdRange.hasStartIncl">and a.proto >= #{m.protoIdRange.start}</if>
            <if test="m.protoIdRange.hasStartExcl">and a.proto > #{m.protoIdRange.start}</if>
            <if test="m.protoIdRange.hasEndIncl">and a.proto &lt;= #{m.protoIdRange.end}</if>
            <if test="m.protoIdRange.hasEndExcl">and a.proto &lt; #{m.protoIdRange.end}</if>
        </if>
        <if test="m.categoryId != null">and a.cat = #{m.categoryId}</if>
        <if test="m.categoryIdRange!= null">
            <if test="m.categoryIdRange.hasStartIncl">and a.cat >= #{m.categoryIdRange.start}</if>
            <if test="m.categoryIdRange.hasStartExcl">and a.cat > #{m.categoryIdRange.start}</if>
            <if test="m.categoryIdRange.hasEndIncl">and a.cat &lt;= #{m.categoryIdRange.end}</if>
            <if test="m.categoryIdRange.hasEndExcl">and a.cat &lt; #{m.categoryIdRange.end}</if>
        </if>
        <if test="m.phaseId != null">and a.phase = #{m.phaseId}</if>
        <if test="m.phaseIdRange!= null">
            <if test="m.phaseIdRange.hasStartIncl">and a.phase >= #{m.phaseIdRange.start}</if>
            <if test="m.phaseIdRange.hasStartExcl">and a.phase > #{m.phaseIdRange.start}</if>
            <if test="m.phaseIdRange.hasEndIncl">and a.phase &lt;= #{m.phaseIdRange.end}</if>
            <if test="m.phaseIdRange.hasEndExcl">and a.phase &lt; #{m.phaseIdRange.end}</if>
        </if>
        <if test="m.uomId != null">and a.uom = #{m.uomId}</if>
        <if test="m.uomIdRange!= null">
            <if test="m.uomIdRange.hasStartIncl">and a.uom >= #{m.uomIdRange.start}</if>
            <if test="m.uomIdRange.hasStartExcl">and a.uom > #{m.uomIdRange.start}</if>
            <if test="m.uomIdRange.hasEndIncl">and a.uom &lt;= #{m.uomIdRange.end}</if>
            <if test="m.uomIdRange.hasEndExcl">and a.uom &lt; #{m.uomIdRange.end}</if>
        </if>
        <if test="m.properties != null">and a.props = #{m.properties}</if>
        <if test="m.finish != null">and a.finish = #{m.finish}</if>
        <if test="m.finishRange!= null">
            <if test="m.finishRange.hasStartIncl">and a.finish >= #{m.finishRange.start}</if>
            <if test="m.finishRange.hasStartExcl">and a.finish > #{m.finishRange.start}</if>
            <if test="m.finishRange.hasEndIncl">and a.finish &lt;= #{m.finishRange.end}</if>
            <if test="m.finishRange.hasEndExcl">and a.finish &lt; #{m.finishRange.end}</if>
        </if>
        <if test="m.price != null">and a.price = #{m.price}</if>
        <if test="m.priceRange!= null">
            <if test="m.priceRange.hasStartIncl">and a.price >= #{m.priceRange.start}</if>
            <if test="m.priceRange.hasStartExcl">and a.price > #{m.priceRange.start}</if>
            <if test="m.priceRange.hasEndIncl">and a.price &lt;= #{m.priceRange.end}</if>
            <if test="m.priceRange.hasEndExcl">and a.price &lt; #{m.priceRange.end}</if>
        </if>
    </sql>

    <select id="all" resultMap="objlist_map">
        <include refid="objlist_sql" />
        <include refid="co.opts" />
    </select>

    <select id="filter" resultMap="objlist_map">
        <include refid="objlist_sql" />
        <where>
            <include refid="filtconds" />
        </where>
        <include refid="co.opts" />
    </select>

    <select id="select" resultMap="objlist_map">
        <include refid="objedit_sql" />
        <where>
            <if test="_parameter != null">a.id = #{id}</if>
        </where>
    </select>

    <select id="selectByRfid" parameterType="String" resultMap="objedit_map">
        <include refid="objedit_sql" />
        <where>
            <if test="_parameter != null">a.rfid = #{rfid}</if>
        </where>
    </select>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id"><![CDATA[
        insert into art(
            sku,
            barcode,
            rfid,
            uid,
            gid,
            mode,
            acl,
            label,
            description,
            priority,
            flags,
            "state",
            creation,
            lastmod,
            "version",
            model,
            proto,
            cat,
            phase,
            uom,
            props,
            finish,
            price
        ) values(
            #{skuCode},
            #{barCode},
            #{rfidCode},
            #{ownerUserId},
            #{ownerGroupId},
            #{accessMode},
            #{acl},
            #{label},
            #{description},
            #{priority},
            #{flags},
            #{state},
            #{creationDate},
            #{lastModifiedDate},
            #{version},
            #{modelName},
            #{protoId},
            #{categoryId},
            #{phaseId},
            #{uomId},
            #{properties.jsonStr}::jsonb,
            #{finish},
            #{price}
        );
    ]]></insert>

    <update id="update">
        update art
        <set>
            sku = #{skuCode},
            barcode = #{barCode},
            rfid = #{rfidCode},
            uid = #{ownerUserId},
            gid = #{ownerGroupId},
            mode = #{accessMode},
            acl = #{acl},
            label = #{label},
            description = #{description},
            priority = #{priority},
            flags = #{flags},
            "state" = #{state},
            creation = #{creationDate},
            lastmod = #{lastModifiedDate},
            "version" = #{version},
            model = #{modelName},
            proto = #{protoId},
            cat = #{categoryId},
            phase = #{phaseId},
            uom = #{uomId},
            props = #{properties.jsonStr}::jsonb,
            finish = #{finish},
            price = #{price},
        </set>
        <where>
            id = #{id}
        </where>
    </update>

    <delete id="delete">
        delete from art
        <where>
            id = #{id}
        </where>
    </delete>

    <select id="count" resultType="long">
        select count(*) "rows" from art
        <where>
            <if test="_parameter != null">
                <include refid="filtconds" />
            </if>
        </where>
    </select>

</mapper>
